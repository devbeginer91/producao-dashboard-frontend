{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\producao-dashboard\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport debounce from 'lodash/debounce';\nimport './App.css';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport PedidoForm from './components/pedidoForm';\nimport PedidoTable from './components/PedidoTable';\nimport ModalObservacao from './components/ModalObservacao';\nimport ModalPesoVolume from './components/ModalPesoVolume';\nimport Busca from './components/Busca';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pedidos, setPedidos] = useState([]);\n  const [pedidosAndamento, setPedidosAndamento] = useState([]);\n  const [pedidosConcluidos, setPedidosConcluidos] = useState([]);\n  const [novoPedido, setNovoPedido] = useState({\n    empresa: '',\n    numeroOS: '',\n    dataEntrada: '',\n    previsaoEntrega: '',\n    responsavel: '',\n    status: 'novo',\n    inicio: new Date().toLocaleString('pt-BR', {\n      timeZone: 'America/Sao_Paulo'\n    }),\n    tempo: 0,\n    peso: null,\n    volume: null,\n    dataConclusao: null,\n    pausado: 0,\n    tempoPausado: 0,\n    dataPausada: null,\n    itens: [{\n      codigoDesenho: '',\n      quantidadePedido: ''\n    }]\n  });\n  const [pedidoParaEditar, setPedidoParaEditar] = useState(null);\n  const [mensagem, setMensagem] = useState('');\n  const [busca, setBusca] = useState('');\n  const [mostrarModal, setMostrarModal] = useState(false);\n  const [pedidoSelecionado, setPedidoSelecionado] = useState(null);\n  const [observacao, setObservacao] = useState('');\n  const [peso, setPeso] = useState('');\n  const [volume, setVolume] = useState('');\n  const [mostrarModalPesoVolume, setMostrarModalPesoVolume] = useState(false);\n  const [pedidoParaConcluir, setPedidoParaConcluir] = useState(null);\n  const [mostrarFormulario, setMostrarFormulario] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const isFetching = useRef(false);\n  const fetchPedidos = async (dados = null) => {\n    if (isFetching.current) return;\n    isFetching.current = true;\n    try {\n      const response = dados ? {\n        data: dados\n      } : await axios.get('http://localhost:5000/pedidos');\n      const pedidosAtualizados = response.data.map(pedido => {\n        const inicioValido = pedido.inicio || new Date().toLocaleString('pt-BR', {\n          timeZone: 'America/Sao_Paulo'\n        });\n        const dataPausadaValida = pedido.dataPausada || inicioValido;\n        const dataConclusaoValida = pedido.dataConclusao || null;\n        return {\n          ...pedido,\n          itens: Array.isArray(pedido.itens) ? pedido.itens : [],\n          tempo: pedido.status === 'concluido' && dataConclusaoValida ? calcularTempo(inicioValido, dataConclusaoValida) : pedido.status === 'andamento' && !pedido.pausado ? (pedido.tempoPausado || 0) + calcularTempo(dataPausadaValida) : pedido.tempoPausado || 0\n        };\n      });\n      setPedidos(pedidosAtualizados.filter(p => p.status === 'andamento'));\n      setPedidosAndamento(pedidosAtualizados.filter(p => p.status === 'novo'));\n      setPedidosConcluidos(pedidosAtualizados.filter(p => p.status === 'concluido'));\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Erro ao carregar pedidos:', error);\n      setMensagem('Erro ao carregar pedidos: ' + error.message);\n      setIsLoading(false);\n    } finally {\n      isFetching.current = false;\n    }\n  };\n  const carregarPedidos = useCallback(debounce(dados => {\n    fetchPedidos(dados);\n  }, 500), []);\n  useEffect(() => {\n    carregarPedidos();\n    return () => {\n      carregarPedidos.cancel();\n    };\n  }, [carregarPedidos]);\n  useEffect(() => {\n    const intervalo = setInterval(() => {\n      setPedidos(prev => prev.map(p => {\n        const inicioValido = p.inicio || new Date().toLocaleString('pt-BR', {\n          timeZone: 'America/Sao_Paulo'\n        });\n        const dataPausadaValida = p.dataPausada || inicioValido;\n        return {\n          ...p,\n          tempo: p.status === 'andamento' && !p.pausado ? (p.tempoPausado || 0) + calcularTempo(dataPausadaValida) : p.tempo\n        };\n      }));\n    }, 60000);\n    return () => clearInterval(intervalo);\n  }, []);\n  const parseDate = dateStr => {\n    if (!dateStr || typeof dateStr !== 'string' || dateStr.includes('undefined')) {\n      console.warn('Data inválida fornecida, usando data atual:', dateStr);\n      return new Date();\n    }\n    // Tenta extrair a primeira parte válida da data, ignorando concatenações inválidas\n    const validDatePart = dateStr.split('-')[0].trim();\n    if (validDatePart.includes('/')) {\n      const [dataParte, horaParte] = validDatePart.split(', ');\n      const [dia, mes, ano] = dataParte.split('/');\n      const formattedDate = `${ano}-${mes}-${dia} ${horaParte || '00:00:00'}`;\n      const parsedDate = new Date(formattedDate);\n      if (isNaN(parsedDate)) {\n        console.warn('Data inválida após formatação, usando data atual:', formattedDate);\n        return new Date();\n      }\n      return parsedDate;\n    }\n    const parsedDate = new Date(dateStr);\n    if (isNaN(parsedDate)) {\n      console.warn('Data inválida, usando data atual:', dateStr);\n      return new Date();\n    }\n    return parsedDate;\n  };\n  const calcularTempo = (inicio, fim = new Date().toLocaleString('pt-BR', {\n    timeZone: 'America/Sao_Paulo'\n  })) => {\n    const inicioDate = parseDate(inicio);\n    const fimDate = parseDate(fim);\n    if (isNaN(inicioDate) || isNaN(fimDate)) {\n      console.error('Data inválida:', {\n        inicio,\n        fim\n      });\n      return 0;\n    }\n    const diffMs = fimDate - inicioDate;\n    return diffMs < 0 ? 0 : diffMs / (1000 * 60 * 60);\n  };\n  const exportarPDF = () => {\n    const doc = new jsPDF();\n    const headersAndamento = ['Empresa', 'Nº OS', 'Data Entrada', 'Previsão', 'Responsável', 'Início', 'Tempo (h)'];\n    const headersNovos = ['Empresa', 'Nº OS', 'Data Entrada', 'Previsão', 'Responsável', 'Início', 'Tempo (h)'];\n    const headersConcluidos = ['Empresa', 'Nº OS', 'Data Entrada', 'Previsão', 'Responsável', 'Início e Conclusão', 'Tempo Total (h)'];\n    const addTable = (title, data, headers) => {\n      doc.text(title, 14, 20);\n      autoTable(doc, {\n        head: [headers],\n        body: data.map(p => [p.empresa, p.numeroOS, p.dataEntrada ? new Date(p.dataEntrada).toLocaleDateString('pt-BR') : 'Não informado', p.previsaoEntrega ? new Date(p.previsaoEntrega).toLocaleDateString('pt-BR') : 'Não informado', p.responsavel, p.status === 'concluido' ? `${formatarDataHora(p.inicio)}\\n${formatarDataHora(p.dataConclusao) || 'Não concluído'}` : formatarDataHora(p.inicio), formatarTempo(p.tempo)]),\n        startY: 30\n      });\n    };\n    addTable('Pedidos em Andamento', pedidos, headersAndamento);\n    doc.addPage();\n    addTable('Pedidos Novos', pedidosAndamento, headersNovos);\n    doc.addPage();\n    addTable('Pedidos Concluídos', pedidosConcluidos, headersConcluidos);\n    doc.save('pedidos_controle_producao.pdf');\n  };\n  const formatarDataHora = data => {\n    return data ? parseDate(data).toLocaleString('pt-BR', {\n      timeZone: 'America/Sao_Paulo'\n    }) : 'Não informado';\n  };\n  const formatarTempo = tempo => {\n    if (isNaN(tempo)) return '0 minutos';\n    const horas = Math.floor(tempo);\n    const minutos = Math.round((tempo - horas) * 60);\n    return `${horas > 0 ? `${horas} hora${horas > 1 ? 's' : ''} e ` : ''}${minutos} minuto${minutos !== 1 ? 's' : ''}`;\n  };\n  const moverParaAndamento = async id => {\n    const pedido = [...pedidos, ...pedidosAndamento, ...pedidosConcluidos].find(p => p.id === id);\n    if (pedido) {\n      const novoInicio = new Date().toLocaleString('pt-BR', {\n        timeZone: 'America/Sao_Paulo'\n      });\n      const pedidoAtualizado = {\n        ...pedido,\n        status: 'andamento',\n        inicio: novoInicio,\n        tempo: 0,\n        tempoPausado: 0,\n        dataPausada: null,\n        pausado: 0\n      };\n      try {\n        const resposta = await axios.put(`http://localhost:5000/pedidos/${id}`, pedidoAtualizado);\n        const pedidoMovido = {\n          ...resposta.data,\n          tempo: 0\n        };\n        await axios.post('http://localhost:5000/enviar-email', {\n          pedido: pedidoMovido,\n          observacao: ''\n        });\n        setPedidosAndamento(prev => prev.filter(p => p.id !== id));\n        setPedidos(prev => [...prev.filter(p => p.id !== id), pedidoMovido]);\n        setPedidosConcluidos(prev => prev.filter(p => p.id !== id));\n        setMensagem('Pedido movido para \"Em Andamento\" e e-mail enviado.');\n        await carregarPedidos();\n      } catch (error) {\n        setMensagem('Erro ao mover pedido: ' + (error.response ? error.response.data.message : error.message));\n        await carregarPedidos();\n      }\n    }\n  };\n  const pausarPedido = async id => {\n    const pedido = pedidos.find(p => p.id === id);\n    if (pedido) {\n      const tempoAtual = (pedido.tempoPausado || 0) + calcularTempo(pedido.dataPausada || pedido.inicio);\n      const dataPausada = new Date().toLocaleString('pt-BR', {\n        timeZone: 'America/Sao_Paulo'\n      });\n      const pedidoPausado = {\n        ...pedido,\n        pausado: 1,\n        tempoPausado: tempoAtual,\n        dataPausada,\n        tempo: tempoAtual\n      };\n      try {\n        await axios.put(`http://localhost:5000/pedidos/${id}`, pedidoPausado);\n        setPedidos(prev => prev.map(p => p.id === id ? pedidoPausado : p));\n        setMensagem('Pedido pausado com sucesso.');\n        await carregarPedidos();\n      } catch (error) {\n        setMensagem('Erro ao pausar pedido: ' + error.message);\n        await carregarPedidos();\n      }\n    }\n  };\n  const retomarPedido = async id => {\n    const pedido = pedidos.find(p => p.id === id);\n    if (pedido) {\n      const dataRetomada = new Date().toLocaleString('pt-BR', {\n        timeZone: 'America/Sao_Paulo'\n      });\n      const pedidoRetomado = {\n        ...pedido,\n        pausado: 0,\n        dataPausada: dataRetomada\n      };\n      try {\n        await axios.put(`http://localhost:5000/pedidos/${id}`, pedidoRetomado);\n        setPedidos(prev => prev.map(p => p.id === id ? {\n          ...pedidoRetomado,\n          tempo: pedido.tempoPausado || 0\n        } : p));\n        setMensagem('Pedido retomado com sucesso.');\n        await carregarPedidos();\n      } catch (error) {\n        setMensagem('Erro ao retomar pedido: ' + error.message);\n        await carregarPedidos();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logoNF.jpg\",\n        alt: \"Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Controle de Produ\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-desenho\",\n        onClick: () => window.open('https://drive.google.com/drive/folders/1vzemVbLeotHD0xirxUPsvNb9qBccQFcd?usp=sharing', '_blank'),\n        children: \"DESENHO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), mensagem && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: mensagem.includes('Erro') ? 'erro' : 'sucesso',\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 20\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando pedidos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-adicionar-pedido\",\n      onClick: () => setMostrarFormulario(true),\n      children: \"Adicionar Pedido Novo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), mostrarFormulario && /*#__PURE__*/_jsxDEV(PedidoForm, {\n      novoPedido: novoPedido,\n      setNovoPedido: setNovoPedido,\n      pedidoParaEditar: pedidoParaEditar,\n      setPedidoParaEditar: setPedidoParaEditar,\n      setMostrarFormulario: setMostrarFormulario,\n      setMensagem: setMensagem,\n      carregarPedidos: carregarPedidos,\n      setPedidos: setPedidos,\n      setPedidosAndamento: setPedidosAndamento,\n      setPedidosConcluidos: setPedidosConcluidos,\n      setMostrarModalPesoVolume: setMostrarModalPesoVolume,\n      setPedidoParaConcluir: setPedidoParaConcluir,\n      moverParaAndamento: moverParaAndamento\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Busca, {\n      busca: busca,\n      setBusca: setBusca,\n      carregarPedidos: carregarPedidos,\n      todosPedidos: [...pedidos, ...pedidosAndamento, ...pedidosConcluidos],\n      exportarPDF: exportarPDF\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pedidos em Andamento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PedidoTable, {\n      pedidos: pedidos,\n      tipo: \"andamento\",\n      setPedidos: setPedidos,\n      setPedidosAndamento: setPedidosAndamento,\n      setPedidosConcluidos: setPedidosConcluidos,\n      setMensagem: setMensagem,\n      setPedidoParaEditar: setPedidoParaEditar,\n      setNovoPedido: setNovoPedido,\n      setMostrarFormulario: setMostrarFormulario,\n      setMostrarModal: setMostrarModal,\n      setPedidoSelecionado: setPedidoSelecionado,\n      setMostrarModalPesoVolume: setMostrarModalPesoVolume,\n      setPedidoParaConcluir: setPedidoParaConcluir,\n      busca: busca,\n      carregarPedidos: carregarPedidos,\n      moverParaAndamento: moverParaAndamento,\n      pausarPedido: pausarPedido,\n      retomarPedido: retomarPedido\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pedidos Novos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PedidoTable, {\n      pedidos: pedidosAndamento,\n      tipo: \"novo\",\n      setPedidos: setPedidos,\n      setPedidosAndamento: setPedidosAndamento,\n      setPedidosConcluidos: setPedidosConcluidos,\n      setMensagem: setMensagem,\n      setPedidoParaEditar: setPedidoParaEditar,\n      setNovoPedido: setNovoPedido,\n      setMostrarFormulario: setMostrarFormulario,\n      setMostrarModal: setMostrarModal,\n      setPedidoSelecionado: setPedidoSelecionado,\n      setMostrarModalPesoVolume: setMostrarModalPesoVolume,\n      setPedidoParaConcluir: setPedidoParaConcluir,\n      busca: busca,\n      carregarPedidos: carregarPedidos,\n      moverParaAndamento: moverParaAndamento\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pedidos Conclu\\xEDdos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PedidoTable, {\n      pedidos: pedidosConcluidos,\n      tipo: \"concluido\",\n      setPedidos: setPedidos,\n      setPedidosAndamento: setPedidosAndamento,\n      setPedidosConcluidos: setPedidosConcluidos,\n      setMensagem: setMensagem,\n      setPedidoParaEditar: setPedidoParaEditar,\n      setNovoPedido: setNovoPedido,\n      setMostrarFormulario: setMostrarFormulario,\n      setMostrarModal: setMostrarModal,\n      setPedidoSelecionado: setPedidoSelecionado,\n      setMostrarModalPesoVolume: setMostrarModalPesoVolume,\n      setPedidoParaConcluir: setPedidoParaConcluir,\n      busca: busca,\n      carregarPedidos: carregarPedidos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), mostrarModal && /*#__PURE__*/_jsxDEV(ModalObservacao, {\n      pedidoSelecionado: pedidoSelecionado,\n      observacao: observacao,\n      setObservacao: setObservacao,\n      setMostrarModal: setMostrarModal,\n      setMensagem: setMensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }, this), mostrarModalPesoVolume && /*#__PURE__*/_jsxDEV(ModalPesoVolume, {\n      pedidoParaConcluir: pedidoParaConcluir,\n      peso: peso,\n      setPeso: setPeso,\n      volume: volume,\n      setVolume: setVolume,\n      setMostrarModalPesoVolume: setMostrarModalPesoVolume,\n      setPedidoParaConcluir: setPedidoParaConcluir,\n      setPedidos: setPedidos,\n      setPedidosConcluidos: setPedidosConcluidos,\n      setMensagem: setMensagem,\n      carregarPedidos: carregarPedidos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0Mss/fzTLJimyEEh/AKxk/NbReo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","axios","debounce","jsPDF","autoTable","PedidoForm","PedidoTable","ModalObservacao","ModalPesoVolume","Busca","jsxDEV","_jsxDEV","App","_s","pedidos","setPedidos","pedidosAndamento","setPedidosAndamento","pedidosConcluidos","setPedidosConcluidos","novoPedido","setNovoPedido","empresa","numeroOS","dataEntrada","previsaoEntrega","responsavel","status","inicio","Date","toLocaleString","timeZone","tempo","peso","volume","dataConclusao","pausado","tempoPausado","dataPausada","itens","codigoDesenho","quantidadePedido","pedidoParaEditar","setPedidoParaEditar","mensagem","setMensagem","busca","setBusca","mostrarModal","setMostrarModal","pedidoSelecionado","setPedidoSelecionado","observacao","setObservacao","setPeso","setVolume","mostrarModalPesoVolume","setMostrarModalPesoVolume","pedidoParaConcluir","setPedidoParaConcluir","mostrarFormulario","setMostrarFormulario","isLoading","setIsLoading","isFetching","fetchPedidos","dados","current","response","data","get","pedidosAtualizados","map","pedido","inicioValido","dataPausadaValida","dataConclusaoValida","Array","isArray","calcularTempo","filter","p","error","console","message","carregarPedidos","cancel","intervalo","setInterval","prev","clearInterval","parseDate","dateStr","includes","warn","validDatePart","split","trim","dataParte","horaParte","dia","mes","ano","formattedDate","parsedDate","isNaN","fim","inicioDate","fimDate","diffMs","exportarPDF","doc","headersAndamento","headersNovos","headersConcluidos","addTable","title","headers","text","head","body","toLocaleDateString","formatarDataHora","formatarTempo","startY","addPage","save","horas","Math","floor","minutos","round","moverParaAndamento","id","find","novoInicio","pedidoAtualizado","resposta","put","pedidoMovido","post","pausarPedido","tempoAtual","pedidoPausado","retomarPedido","dataRetomada","pedidoRetomado","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","open","todosPedidos","tipo","_c","$RefreshReg$"],"sources":["C:/Users/User/producao-dashboard/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport debounce from 'lodash/debounce';\nimport './App.css';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport PedidoForm from './components/pedidoForm';\nimport PedidoTable from './components/PedidoTable';\nimport ModalObservacao from './components/ModalObservacao';\nimport ModalPesoVolume from './components/ModalPesoVolume';\nimport Busca from './components/Busca';\n\nfunction App() {\n  const [pedidos, setPedidos] = useState([]);\n  const [pedidosAndamento, setPedidosAndamento] = useState([]);\n  const [pedidosConcluidos, setPedidosConcluidos] = useState([]);\n  const [novoPedido, setNovoPedido] = useState({\n    empresa: '',\n    numeroOS: '',\n    dataEntrada: '',\n    previsaoEntrega: '',\n    responsavel: '',\n    status: 'novo',\n    inicio: new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' }),\n    tempo: 0,\n    peso: null,\n    volume: null,\n    dataConclusao: null,\n    pausado: 0,\n    tempoPausado: 0,\n    dataPausada: null,\n    itens: [{ codigoDesenho: '', quantidadePedido: '' }],\n  });\n  const [pedidoParaEditar, setPedidoParaEditar] = useState(null);\n  const [mensagem, setMensagem] = useState('');\n  const [busca, setBusca] = useState('');\n  const [mostrarModal, setMostrarModal] = useState(false);\n  const [pedidoSelecionado, setPedidoSelecionado] = useState(null);\n  const [observacao, setObservacao] = useState('');\n  const [peso, setPeso] = useState('');\n  const [volume, setVolume] = useState('');\n  const [mostrarModalPesoVolume, setMostrarModalPesoVolume] = useState(false);\n  const [pedidoParaConcluir, setPedidoParaConcluir] = useState(null);\n  const [mostrarFormulario, setMostrarFormulario] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const isFetching = useRef(false);\n\n  const fetchPedidos = async (dados = null) => {\n    if (isFetching.current) return;\n    isFetching.current = true;\n    try {\n      const response = dados ? { data: dados } : await axios.get('http://localhost:5000/pedidos');\n      const pedidosAtualizados = response.data.map((pedido) => {\n        const inicioValido = pedido.inicio || new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' });\n        const dataPausadaValida = pedido.dataPausada || inicioValido;\n        const dataConclusaoValida = pedido.dataConclusao || null;\n\n        return {\n          ...pedido,\n          itens: Array.isArray(pedido.itens) ? pedido.itens : [],\n          tempo:\n            pedido.status === 'concluido' && dataConclusaoValida\n              ? calcularTempo(inicioValido, dataConclusaoValida)\n              : pedido.status === 'andamento' && !pedido.pausado\n              ? (pedido.tempoPausado || 0) + calcularTempo(dataPausadaValida)\n              : pedido.tempoPausado || 0,\n        };\n      });\n      setPedidos(pedidosAtualizados.filter((p) => p.status === 'andamento'));\n      setPedidosAndamento(pedidosAtualizados.filter((p) => p.status === 'novo'));\n      setPedidosConcluidos(pedidosAtualizados.filter((p) => p.status === 'concluido'));\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Erro ao carregar pedidos:', error);\n      setMensagem('Erro ao carregar pedidos: ' + error.message);\n      setIsLoading(false);\n    } finally {\n      isFetching.current = false;\n    }\n  };\n\n  const carregarPedidos = useCallback(debounce((dados) => {\n    fetchPedidos(dados);\n  }, 500), []);\n\n  useEffect(() => {\n    carregarPedidos();\n    return () => {\n      carregarPedidos.cancel();\n    };\n  }, [carregarPedidos]);\n\n  useEffect(() => {\n    const intervalo = setInterval(() => {\n      setPedidos((prev) =>\n        prev.map((p) => {\n          const inicioValido = p.inicio || new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' });\n          const dataPausadaValida = p.dataPausada || inicioValido;\n          return {\n            ...p,\n            tempo: p.status === 'andamento' && !p.pausado\n              ? (p.tempoPausado || 0) + calcularTempo(dataPausadaValida)\n              : p.tempo,\n          };\n        })\n      );\n    }, 60000);\n    return () => clearInterval(intervalo);\n  }, []);\n\n  const parseDate = (dateStr) => {\n    if (!dateStr || typeof dateStr !== 'string' || dateStr.includes('undefined')) {\n      console.warn('Data inválida fornecida, usando data atual:', dateStr);\n      return new Date();\n    }\n    // Tenta extrair a primeira parte válida da data, ignorando concatenações inválidas\n    const validDatePart = dateStr.split('-')[0].trim();\n    if (validDatePart.includes('/')) {\n      const [dataParte, horaParte] = validDatePart.split(', ');\n      const [dia, mes, ano] = dataParte.split('/');\n      const formattedDate = `${ano}-${mes}-${dia} ${horaParte || '00:00:00'}`;\n      const parsedDate = new Date(formattedDate);\n      if (isNaN(parsedDate)) {\n        console.warn('Data inválida após formatação, usando data atual:', formattedDate);\n        return new Date();\n      }\n      return parsedDate;\n    }\n    const parsedDate = new Date(dateStr);\n    if (isNaN(parsedDate)) {\n      console.warn('Data inválida, usando data atual:', dateStr);\n      return new Date();\n    }\n    return parsedDate;\n  };\n\n  const calcularTempo = (inicio, fim = new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' })) => {\n    const inicioDate = parseDate(inicio);\n    const fimDate = parseDate(fim);\n    if (isNaN(inicioDate) || isNaN(fimDate)) {\n      console.error('Data inválida:', { inicio, fim });\n      return 0;\n    }\n    const diffMs = fimDate - inicioDate;\n    return diffMs < 0 ? 0 : diffMs / (1000 * 60 * 60);\n  };\n\n  const exportarPDF = () => {\n    const doc = new jsPDF();\n    const headersAndamento = ['Empresa', 'Nº OS', 'Data Entrada', 'Previsão', 'Responsável', 'Início', 'Tempo (h)'];\n    const headersNovos = ['Empresa', 'Nº OS', 'Data Entrada', 'Previsão', 'Responsável', 'Início', 'Tempo (h)'];\n    const headersConcluidos = ['Empresa', 'Nº OS', 'Data Entrada', 'Previsão', 'Responsável', 'Início e Conclusão', 'Tempo Total (h)'];\n\n    const addTable = (title, data, headers) => {\n      doc.text(title, 14, 20);\n      autoTable(doc, {\n        head: [headers],\n        body: data.map((p) => [\n          p.empresa,\n          p.numeroOS,\n          p.dataEntrada ? new Date(p.dataEntrada).toLocaleDateString('pt-BR') : 'Não informado',\n          p.previsaoEntrega ? new Date(p.previsaoEntrega).toLocaleDateString('pt-BR') : 'Não informado',\n          p.responsavel,\n          p.status === 'concluido' ? `${formatarDataHora(p.inicio)}\\n${formatarDataHora(p.dataConclusao) || 'Não concluído'}` : formatarDataHora(p.inicio),\n          formatarTempo(p.tempo),\n        ]),\n        startY: 30,\n      });\n    };\n\n    addTable('Pedidos em Andamento', pedidos, headersAndamento);\n    doc.addPage();\n    addTable('Pedidos Novos', pedidosAndamento, headersNovos);\n    doc.addPage();\n    addTable('Pedidos Concluídos', pedidosConcluidos, headersConcluidos);\n    doc.save('pedidos_controle_producao.pdf');\n  };\n\n  const formatarDataHora = (data) => {\n    return data ? parseDate(data).toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' }) : 'Não informado';\n  };\n\n  const formatarTempo = (tempo) => {\n    if (isNaN(tempo)) return '0 minutos';\n    const horas = Math.floor(tempo);\n    const minutos = Math.round((tempo - horas) * 60);\n    return `${horas > 0 ? `${horas} hora${horas > 1 ? 's' : ''} e ` : ''}${minutos} minuto${minutos !== 1 ? 's' : ''}`;\n  };\n\n  const moverParaAndamento = async (id) => {\n    const pedido = [...pedidos, ...pedidosAndamento, ...pedidosConcluidos].find((p) => p.id === id);\n    if (pedido) {\n      const novoInicio = new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' });\n      const pedidoAtualizado = { \n        ...pedido, \n        status: 'andamento', \n        inicio: novoInicio,\n        tempo: 0,\n        tempoPausado: 0,\n        dataPausada: null,\n        pausado: 0\n      };\n      try {\n        const resposta = await axios.put(`http://localhost:5000/pedidos/${id}`, pedidoAtualizado);\n        const pedidoMovido = { ...resposta.data, tempo: 0 };\n        await axios.post('http://localhost:5000/enviar-email', { pedido: pedidoMovido, observacao: '' });\n        setPedidosAndamento((prev) => prev.filter((p) => p.id !== id));\n        setPedidos((prev) => [...prev.filter((p) => p.id !== id), pedidoMovido]);\n        setPedidosConcluidos((prev) => prev.filter((p) => p.id !== id));\n        setMensagem('Pedido movido para \"Em Andamento\" e e-mail enviado.');\n        await carregarPedidos();\n      } catch (error) {\n        setMensagem('Erro ao mover pedido: ' + (error.response ? error.response.data.message : error.message));\n        await carregarPedidos();\n      }\n    }\n  };\n\n  const pausarPedido = async (id) => {\n    const pedido = pedidos.find((p) => p.id === id);\n    if (pedido) {\n      const tempoAtual = (pedido.tempoPausado || 0) + calcularTempo(pedido.dataPausada || pedido.inicio);\n      const dataPausada = new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' });\n      const pedidoPausado = { ...pedido, pausado: 1, tempoPausado: tempoAtual, dataPausada, tempo: tempoAtual };\n      try {\n        await axios.put(`http://localhost:5000/pedidos/${id}`, pedidoPausado);\n        setPedidos((prev) => prev.map((p) => (p.id === id ? pedidoPausado : p)));\n        setMensagem('Pedido pausado com sucesso.');\n        await carregarPedidos();\n      } catch (error) {\n        setMensagem('Erro ao pausar pedido: ' + error.message);\n        await carregarPedidos();\n      }\n    }\n  };\n\n  const retomarPedido = async (id) => {\n    const pedido = pedidos.find((p) => p.id === id);\n    if (pedido) {\n      const dataRetomada = new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' });\n      const pedidoRetomado = { ...pedido, pausado: 0, dataPausada: dataRetomada };\n      try {\n        await axios.put(`http://localhost:5000/pedidos/${id}`, pedidoRetomado);\n        setPedidos((prev) =>\n          prev.map((p) =>\n            p.id === id ? { ...pedidoRetomado, tempo: pedido.tempoPausado || 0 } : p\n          )\n        );\n        setMensagem('Pedido retomado com sucesso.');\n        await carregarPedidos();\n      } catch (error) {\n        setMensagem('Erro ao retomar pedido: ' + error.message);\n        await carregarPedidos();\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <img src=\"/logoNF.jpg\" alt=\"Logo\" className=\"logo\" />\n        <h1>Controle de Produção</h1>\n        <button className=\"btn-desenho\" onClick={() => window.open('https://drive.google.com/drive/folders/1vzemVbLeotHD0xirxUPsvNb9qBccQFcd?usp=sharing', '_blank')}>\n          DESENHO\n        </button>\n      </div>\n\n      {mensagem && <p className={mensagem.includes('Erro') ? 'erro' : 'sucesso'}>{mensagem}</p>}\n      {isLoading && <p>Carregando pedidos...</p>}\n\n      <button className=\"btn-adicionar-pedido\" onClick={() => setMostrarFormulario(true)}>Adicionar Pedido Novo</button>\n      {mostrarFormulario && (\n        <PedidoForm\n          novoPedido={novoPedido}\n          setNovoPedido={setNovoPedido}\n          pedidoParaEditar={pedidoParaEditar}\n          setPedidoParaEditar={setPedidoParaEditar}\n          setMostrarFormulario={setMostrarFormulario}\n          setMensagem={setMensagem}\n          carregarPedidos={carregarPedidos}\n          setPedidos={setPedidos}\n          setPedidosAndamento={setPedidosAndamento}\n          setPedidosConcluidos={setPedidosConcluidos}\n          setMostrarModalPesoVolume={setMostrarModalPesoVolume}\n          setPedidoParaConcluir={setPedidoParaConcluir}\n          moverParaAndamento={moverParaAndamento}\n        />\n      )}\n\n      <Busca\n        busca={busca}\n        setBusca={setBusca}\n        carregarPedidos={carregarPedidos}\n        todosPedidos={[...pedidos, ...pedidosAndamento, ...pedidosConcluidos]}\n        exportarPDF={exportarPDF}\n      />\n\n      <h2>Pedidos em Andamento</h2>\n      <PedidoTable\n        pedidos={pedidos}\n        tipo=\"andamento\"\n        setPedidos={setPedidos}\n        setPedidosAndamento={setPedidosAndamento}\n        setPedidosConcluidos={setPedidosConcluidos}\n        setMensagem={setMensagem}\n        setPedidoParaEditar={setPedidoParaEditar}\n        setNovoPedido={setNovoPedido}\n        setMostrarFormulario={setMostrarFormulario}\n        setMostrarModal={setMostrarModal}\n        setPedidoSelecionado={setPedidoSelecionado}\n        setMostrarModalPesoVolume={setMostrarModalPesoVolume}\n        setPedidoParaConcluir={setPedidoParaConcluir}\n        busca={busca}\n        carregarPedidos={carregarPedidos}\n        moverParaAndamento={moverParaAndamento}\n        pausarPedido={pausarPedido}\n        retomarPedido={retomarPedido}\n      />\n\n      <h2>Pedidos Novos</h2>\n      <PedidoTable\n        pedidos={pedidosAndamento}\n        tipo=\"novo\"\n        setPedidos={setPedidos}\n        setPedidosAndamento={setPedidosAndamento}\n        setPedidosConcluidos={setPedidosConcluidos}\n        setMensagem={setMensagem}\n        setPedidoParaEditar={setPedidoParaEditar}\n        setNovoPedido={setNovoPedido}\n        setMostrarFormulario={setMostrarFormulario}\n        setMostrarModal={setMostrarModal}\n        setPedidoSelecionado={setPedidoSelecionado}\n        setMostrarModalPesoVolume={setMostrarModalPesoVolume}\n        setPedidoParaConcluir={setPedidoParaConcluir}\n        busca={busca}\n        carregarPedidos={carregarPedidos}\n        moverParaAndamento={moverParaAndamento}\n      />\n\n      <h2>Pedidos Concluídos</h2>\n      <PedidoTable\n        pedidos={pedidosConcluidos}\n        tipo=\"concluido\"\n        setPedidos={setPedidos}\n        setPedidosAndamento={setPedidosAndamento}\n        setPedidosConcluidos={setPedidosConcluidos}\n        setMensagem={setMensagem}\n        setPedidoParaEditar={setPedidoParaEditar}\n        setNovoPedido={setNovoPedido}\n        setMostrarFormulario={setMostrarFormulario}\n        setMostrarModal={setMostrarModal}\n        setPedidoSelecionado={setPedidoSelecionado}\n        setMostrarModalPesoVolume={setMostrarModalPesoVolume}\n        setPedidoParaConcluir={setPedidoParaConcluir}\n        busca={busca}\n        carregarPedidos={carregarPedidos}\n      />\n\n      {mostrarModal && (\n        <ModalObservacao\n          pedidoSelecionado={pedidoSelecionado}\n          observacao={observacao}\n          setObservacao={setObservacao}\n          setMostrarModal={setMostrarModal}\n          setMensagem={setMensagem}\n        />\n      )}\n\n      {mostrarModalPesoVolume && (\n        <ModalPesoVolume\n          pedidoParaConcluir={pedidoParaConcluir}\n          peso={peso}\n          setPeso={setPeso}\n          volume={volume}\n          setVolume={setVolume}\n          setMostrarModalPesoVolume={setMostrarModalPesoVolume}\n          setPedidoParaConcluir={setPedidoParaConcluir}\n          setPedidos={setPedidos}\n          setPedidosConcluidos={setPedidosConcluidos}\n          setMensagem={setMensagem}\n          carregarPedidos={carregarPedidos}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
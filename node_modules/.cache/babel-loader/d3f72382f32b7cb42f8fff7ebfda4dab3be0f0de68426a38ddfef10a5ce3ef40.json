{"ast":null,"code":"import React,{useState,useEffect,useCallback,useRef}from'react';import axios from'axios';import debounce from'lodash/debounce';import'./App.css';import jsPDF from'jspdf';import autoTable from'jspdf-autotable';import PedidoForm from'./components/pedidoForm';import PedidoTable from'./components/PedidoTable';import ModalObservacao from'./components/ModalObservacao';import ModalPesoVolume from'./components/ModalPesoVolume';import Busca from'./components/Busca';// Função para formatar datas no formato YYYY-MM-DD HH:MM:SS com fuso horário America/Sao_Paulo (UTC-3)\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const formatDateToLocalISO=function(date){let context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'unknown';const d=date?new Date(date):new Date();if(isNaN(d.getTime())||typeof date==='string'&&date.includes('undefined')){console.warn(`[formatDateToLocalISO - ${context}] Data inválida detectada, usando data atual:`,date);return new Date().toLocaleString('sv-SE',{timeZone:'America/Sao_Paulo'}).slice(0,19);}const isoString=d.toLocaleString('sv-SE',{timeZone:'America/Sao_Paulo'}).slice(0,19);console.log(`[formatDateToLocalISO - ${context}] Data capturada: ${d.toString()}, Data formatada: ${isoString}`);return isoString;};// Função para formatar o tempo\nconst formatarTempo=tempo=>{if(isNaN(tempo)||tempo<0)return'0 minutos';const minutosTotais=Math.round(tempo);// Tempo já está em minutos\nconst horas=Math.floor(minutosTotais/60);const minutosRestantes=minutosTotais%60;if(horas===0){return`${minutosRestantes} minuto${minutosRestantes!==1?'s':''}`;}else{return`${horas} hora${horas!==1?'s':''} e ${minutosRestantes} minuto${minutosRestantes!==1?'s':''}`;}};function App(){const[pedidos,setPedidos]=useState([]);const[pedidosAndamento,setPedidosAndamento]=useState([]);const[pedidosConcluidos,setPedidosConcluidos]=useState([]);const[novoPedido,setNovoPedido]=useState(()=>{const inicioInicial=formatDateToLocalISO(new Date(),'novoPedido init');console.log('Inicializando novoPedido com inicio:',inicioInicial);return{empresa:'',numeroOS:'',dataEntrada:'',previsaoEntrega:'',responsavel:'',status:'novo',inicio:inicioInicial,tempo:0,// Tempo em minutos\npeso:null,volume:null,dataConclusao:null,pausado:0,tempoPausado:0,// Tempo pausado em minutos\ndataPausada:null,dataInicioPausa:null,// Novo campo para armazenar o início do período pausado\nitens:[{codigoDesenho:'',quantidadePedido:''}]};});const[pedidoParaEditar,setPedidoParaEditar]=useState(null);const[mensagem,setMensagem]=useState('');const[busca,setBusca]=useState('');const[mostrarModal,setMostrarModal]=useState(false);const[pedidoSelecionado,setPedidoSelecionado]=useState(null);const[observacao,setObservacao]=useState('');const[peso,setPeso]=useState('');const[volume,setVolume]=useState('');const[mostrarModalPesoVolume,setMostrarModalPesoVolume]=useState(false);const[pedidoParaConcluir,setPedidoParaConcluir]=useState(null);const[mostrarFormulario,setMostrarFormulario]=useState(false);const[isLoading,setIsLoading]=useState(true);const isFetching=useRef(false);const lastFetchTimestamp=useRef(0);const fetchPedidos=async function(){let dados=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;const now=Date.now();if(now-lastFetchTimestamp.current<5000&&!dados){console.log('Ignorando chamada repetida a fetchPedidos');return;}if(isFetching.current)return;isFetching.current=true;try{const response=dados?{data:dados}:await axios.get('http://localhost:5000/pedidos');const pedidosAtualizados=response.data.map(pedido=>{const inicioValido=formatDateToLocalISO(pedido.inicio,`fetchPedidos - pedido ${pedido.id}`);const dataConclusaoValida=pedido.dataConclusao?formatDateToLocalISO(pedido.dataConclusao,`fetchPedidos - pedido ${pedido.id}`):null;// Preservar o tempo fixado ao pausar ou retomar\nlet tempoFinal=pedido.tempoPausado||0;// Inicializa com tempoPausado\nif(pedido.status==='concluido'){tempoFinal=pedido.tempo;// Usa o tempo armazenado para pedidos concluídos\n}else if(pedido.status==='andamento'){if(pedido.pausado){tempoFinal=pedido.tempoPausado||0;// Mantém o tempoPausado ao pausar\n}else if(pedido.dataPausada&&!pedido.pausado){// Após retomada, usa tempoPausado e calcula apenas o tempo desde dataPausada\nconst tempoAcumulado=pedido.tempoPausado||0;const tempoDesdeRetomada=calcularTempo(pedido.dataPausada,formatDateToLocalISO(new Date(),`fetchPedidos - pedido ${pedido.id}`));tempoFinal=Math.round(tempoAcumulado+tempoDesdeRetomada);}else{// Sem pausa, calcula desde o início\ntempoFinal=Math.round((pedido.tempoPausado||0)+calcularTempo(inicioValido));}}console.log(`fetchPedidos - pedido ${pedido.id}: tempoFinal = ${tempoFinal}, pausado = ${pedido.pausado}, tempoPausado = ${pedido.tempoPausado}, tempo = ${pedido.tempo}, dataPausada = ${pedido.dataPausada}, dataInicioPausa = ${pedido.dataInicioPausa}`);return{...pedido,inicio:inicioValido,dataConclusao:dataConclusaoValida,itens:Array.isArray(pedido.itens)?pedido.itens:[],tempo:Math.round(tempoFinal)// Garantir que tempo seja em minutos inteiros\n};});setPedidos(pedidosAtualizados.filter(p=>p.status==='andamento'));setPedidosAndamento(pedidosAtualizados.filter(p=>p.status==='novo'));setPedidosConcluidos(pedidosAtualizados.filter(p=>p.status==='concluido'));setIsLoading(false);lastFetchTimestamp.current=now;}catch(error){console.error('Erro ao carregar pedidos:',error);setMensagem('Erro ao carregar pedidos: '+error.message);setIsLoading(false);}finally{isFetching.current=false;}};const carregarPedidos=useCallback(debounce(dados=>{fetchPedidos(dados);},1000),[]);useEffect(()=>{carregarPedidos();return()=>{carregarPedidos.cancel();};},[carregarPedidos]);useEffect(()=>{const intervalo=setInterval(()=>{setPedidos(prev=>prev.map(p=>{if(p.status!=='andamento'||p.pausado){console.log(`Pedido ${p.id} não está em andamento ou está pausado, mantendo tempo: ${p.tempo} minutos`);return p;// Não atualiza o tempo se o pedido não estiver em andamento ou estiver pausado\n}const inicioValido=p.inicio&&!p.inicio.includes('undefined')?p.inicio:formatDateToLocalISO(new Date(),'intervalo');let tempoAcumulado=p.tempoPausado||0;let dataReferencia=inicioValido;if(p.dataPausada&&!p.pausado){// Após retomada, usa dataPausada como ponto de referência\ndataReferencia=p.dataPausada;console.log(`Pedido ${p.id} retomado, usando dataPausada (${dataReferencia}) como referência, tempoAcumulado = ${tempoAcumulado}`);}const tempoDesdeReferencia=calcularTempo(dataReferencia,formatDateToLocalISO(new Date(),'intervalo atual'));const tempoAtual=Math.round(tempoAcumulado+tempoDesdeReferencia);console.log(`Atualizando tempo para pedido ${p.id}: tempoPausado = ${tempoAcumulado}, tempoDesdeReferencia = ${tempoDesdeReferencia}, tempoAtual = ${tempoAtual} minutos (antes de setar)`);return{...p,tempo:tempoAtual};}));},60000);// Atualiza a cada 60 segundos (1 minuto)\nreturn()=>clearInterval(intervalo);},[]);const parseDate=dateStr=>{if(!dateStr||typeof dateStr!=='string'||dateStr.includes('undefined')){console.warn('Data inválida fornecida em parseDate, usando data atual:',dateStr);return new Date();}const parsedDate=new Date(dateStr);if(isNaN(parsedDate)){console.warn('Data inválida em parseDate, usando data atual:',dateStr);return new Date();}return parsedDate;};const calcularTempo=function(inicio){let fim=arguments.length>1&&arguments[1]!==undefined?arguments[1]:formatDateToLocalISO(new Date(),'calcularTempo');const inicioDate=parseDate(inicio);const fimDate=parseDate(fim);if(isNaN(inicioDate)||isNaN(fimDate)){console.error('Data inválida em calcularTempo:',{inicio,fim});return 0;}const diffMs=fimDate-inicioDate;return diffMs<0?0:diffMs/(1000*60);// Retorna em minutos\n};const exportarPDF=()=>{const doc=new jsPDF();const headersAndamento=['Empresa','Nº OS','Data Entrada','Previsão','Responsável','Início','Tempo'];const headersNovos=['Empresa','Nº OS','Data Entrada','Previsão','Responsável','Início','Tempo'];const headersConcluidos=['Empresa','Nº OS','Data Entrada','Previsão','Responsável','Início e Conclusão','Tempo'];const addTable=(title,data,headers)=>{doc.text(title,14,20);autoTable(doc,{head:[headers],body:data.map(p=>[p.empresa,p.numeroOS,p.dataEntrada?new Date(p.dataEntrada).toLocaleDateString('pt-BR'):'Não informado',p.previsaoEntrega?new Date(p.previsaoEntrega).toLocaleDateString('pt-BR'):'Não informado',p.responsavel,p.status==='concluido'?`${formatarDataHora(p.inicio)}\\n${formatarDataHora(p.dataConclusao)||'Não concluído'}`:formatarDataHora(p.inicio),formatarTempo(p.tempo)// Exibe o tempo em minutos ou horas e minutos\n]),startY:30});};addTable('Pedidos em Andamento',pedidos,headersAndamento);doc.addPage();addTable('Pedidos Novos',pedidosAndamento,headersNovos);doc.addPage();addTable('Pedidos Concluídos',pedidosConcluidos,headersConcluidos);doc.save('pedidos_controle_producao.pdf');};const formatarDataHora=data=>{return data?parseDate(data).toLocaleString('pt-BR',{timeZone:'America/Sao_Paulo'}):'Não informado';};const moverParaAndamento=async id=>{const pedido=[...pedidos,...pedidosAndamento,...pedidosConcluidos].find(p=>p.id===id);if(pedido){const novoInicio=formatDateToLocalISO(new Date(),'moverParaAndamento');const pedidoAtualizado={...pedido,status:'andamento',inicio:novoInicio,tempo:0,tempoPausado:0,dataPausada:null,dataInicioPausa:null,pausado:0};try{console.log('Enviando pedido atualizado para andamento:',pedidoAtualizado);const resposta=await axios.put(`http://localhost:5000/pedidos/${id}`,pedidoAtualizado);const pedidoMovido={...resposta.data,tempo:0};await axios.post('http://localhost:5000/enviar-email',{pedido:pedidoMovido,observacao:''});setPedidosAndamento(prev=>prev.filter(p=>p.id!==id));setPedidos(prev=>[...prev.filter(p=>p.id!==id),pedidoMovido]);setPedidosConcluidos(prev=>prev.filter(p=>p.id!==id));setMensagem('Pedido movido para \"Em Andamento\" e e-mail enviado.');carregarPedidos();}catch(error){setMensagem('Erro ao mover pedido: '+(error.response?error.response.data.message:error.message));carregarPedidos();}}};const pausarPedido=async id=>{const pedido=pedidos.find(p=>p.id===id);if(pedido){const tempoAtual=pedido.tempo;// Salva o tempo atual como tempoPausado\nconst dataPausada=formatDateToLocalISO(new Date(),'pausarPedido');const dataInicioPausa=formatDateToLocalISO(new Date(),'inicioPausa');const pedidoPausado={...pedido,pausado:1,tempoPausado:tempoAtual,dataPausada,dataInicioPausa,tempo:tempoAtual};try{console.log('Pausando pedido:',pedidoPausado);await axios.put(`http://localhost:5000/pedidos/${id}`,pedidoPausado);setPedidos(prev=>prev.map(p=>p.id===id?pedidoPausado:p));setMensagem('Pedido pausado com sucesso.');carregarPedidos();}catch(error){setMensagem('Erro ao pausar pedido: '+error.message);carregarPedidos();}}};const retomarPedido=async id=>{const pedido=pedidos.find(p=>p.id===id);if(pedido){const dataRetomada=formatDateToLocalISO(new Date(),'retomarPedido');const tempoPausadoAnterior=pedido.tempoPausado||0;console.log(`Retomando pedido ${id}: tempoPausado = ${tempoPausadoAnterior}, tempo atual antes = ${pedido.tempo}`);const pedidoRetomado={...pedido,pausado:0,dataPausada:dataRetomada,dataInicioPausa:null,tempo:tempoPausadoAnterior};try{const resposta=await axios.put(`http://localhost:5000/pedidos/${id}`,pedidoRetomado);setPedidos(prev=>prev.map(p=>p.id===id?{...resposta.data,tempo:tempoPausadoAnterior}:p));console.log(`Tempo após retomar para pedido ${id}: ${tempoPausadoAnterior} minutos`);setMensagem('Pedido retomado com sucesso.');carregarPedidos();}catch(error){setMensagem('Erro ao retomar pedido: '+error.message);carregarPedidos();}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/logoNF.jpg\",alt:\"Logo\",className:\"logo\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Controle de Produ\\xE7\\xE3o\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-desenho\",onClick:()=>window.open('https://drive.google.com/drive/folders/1vzemVbLeotHD0xirxUPsvNb9qBccQFcd?usp=sharing','_blank'),children:\"DESENHO\"})]}),mensagem&&/*#__PURE__*/_jsx(\"p\",{className:mensagem.includes('Erro')?'erro':'sucesso',children:mensagem}),isLoading&&/*#__PURE__*/_jsx(\"p\",{children:\"Carregando pedidos...\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-adicionar-pedido\",onClick:()=>setMostrarFormulario(true),children:\"Adicionar Pedido Novo\"}),mostrarFormulario&&/*#__PURE__*/_jsx(PedidoForm,{novoPedido:novoPedido,setNovoPedido:setNovoPedido,pedidoParaEditar:pedidoParaEditar,setPedidoParaEditar:setPedidoParaEditar,setMostrarFormulario:setMostrarFormulario,setMensagem:setMensagem,carregarPedidos:carregarPedidos,setPedidos:setPedidos,setPedidosAndamento:setPedidosAndamento,setPedidosConcluidos:setPedidosConcluidos,setMostrarModalPesoVolume:setMostrarModalPesoVolume,setPedidoParaConcluir:setPedidoParaConcluir,moverParaAndamento:moverParaAndamento,formatDateToLocalISO:formatDateToLocalISO}),/*#__PURE__*/_jsx(Busca,{busca:busca,setBusca:setBusca,carregarPedidos:carregarPedidos,todosPedidos:[...pedidos,...pedidosAndamento,...pedidosConcluidos],exportarPDF:exportarPDF}),/*#__PURE__*/_jsx(\"h2\",{children:\"Pedidos em Andamento\"}),/*#__PURE__*/_jsx(PedidoTable,{pedidos:pedidos,tipo:\"andamento\",setPedidos:setPedidos,setPedidosAndamento:setPedidosAndamento,setPedidosConcluidos:setPedidosConcluidos,setMensagem:setMensagem,setPedidoParaEditar:setPedidoParaEditar,setNovoPedido:setNovoPedido,setMostrarFormulario:setMostrarFormulario,setMostrarModal:setMostrarModal,setPedidoSelecionado:setPedidoSelecionado,setMostrarModalPesoVolume:setMostrarModalPesoVolume,setPedidoParaConcluir:setPedidoParaConcluir,busca:busca,carregarPedidos:carregarPedidos,moverParaAndamento:moverParaAndamento,pausarPedido:pausarPedido,retomarPedido:retomarPedido,formatarTempo:formatarTempo}),/*#__PURE__*/_jsx(\"h2\",{children:\"Pedidos Novos\"}),/*#__PURE__*/_jsx(PedidoTable,{pedidos:pedidosAndamento,tipo:\"novo\",setPedidos:setPedidos,setPedidosAndamento:setPedidosAndamento,setPedidosConcluidos:setPedidosConcluidos,setMensagem:setMensagem,setPedidoParaEditar:setPedidoParaEditar,setNovoPedido:setNovoPedido,setMostrarFormulario:setMostrarFormulario,setMostrarModal:setMostrarModal,setPedidoSelecionado:setPedidoSelecionado,setMostrarModalPesoVolume:setMostrarModalPesoVolume,setPedidoParaConcluir:setPedidoParaConcluir,busca:busca,carregarPedidos:carregarPedidos,moverParaAndamento:moverParaAndamento,formatarTempo:formatarTempo}),/*#__PURE__*/_jsx(\"h2\",{children:\"Pedidos Conclu\\xEDdos\"}),/*#__PURE__*/_jsx(PedidoTable,{pedidos:pedidosConcluidos,tipo:\"concluido\",setPedidos:setPedidos,setPedidosAndamento:setPedidosAndamento,setPedidosConcluidos:setPedidosConcluidos,setMensagem:setMensagem,setPedidoParaEditar:setPedidoParaEditar,setNovoPedido:setNovoPedido,setMostrarFormulario:setMostrarFormulario,setMostrarModal:setMostrarModal,setPedidoSelecionado:setPedidoSelecionado,setMostrarModalPesoVolume:setMostrarModalPesoVolume,setPedidoParaConcluir:setPedidoParaConcluir,busca:busca,carregarPedidos:carregarPedidos,formatarTempo:formatarTempo}),mostrarModal&&/*#__PURE__*/_jsx(ModalObservacao,{pedidoSelecionado:pedidoSelecionado,observacao:observacao,setObservacao:setObservacao,setMostrarModal:setMostrarModal,setMensagem:setMensagem}),mostrarModalPesoVolume&&/*#__PURE__*/_jsx(ModalPesoVolume,{pedidoParaConcluir:pedidoParaConcluir,peso:peso,setPeso:setPeso,volume:volume,setVolume:setVolume,setMostrarModalPesoVolume:setMostrarModalPesoVolume,setPedidoParaConcluir:setPedidoParaConcluir,setPedidos:setPedidos,setPedidosConcluidos:setPedidosConcluidos,setMensagem:setMensagem,carregarPedidos:carregarPedidos})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","axios","debounce","jsPDF","autoTable","PedidoForm","PedidoTable","ModalObservacao","ModalPesoVolume","Busca","jsx","_jsx","jsxs","_jsxs","formatDateToLocalISO","date","context","arguments","length","undefined","d","Date","isNaN","getTime","includes","console","warn","toLocaleString","timeZone","slice","isoString","log","toString","formatarTempo","tempo","minutosTotais","Math","round","horas","floor","minutosRestantes","App","pedidos","setPedidos","pedidosAndamento","setPedidosAndamento","pedidosConcluidos","setPedidosConcluidos","novoPedido","setNovoPedido","inicioInicial","empresa","numeroOS","dataEntrada","previsaoEntrega","responsavel","status","inicio","peso","volume","dataConclusao","pausado","tempoPausado","dataPausada","dataInicioPausa","itens","codigoDesenho","quantidadePedido","pedidoParaEditar","setPedidoParaEditar","mensagem","setMensagem","busca","setBusca","mostrarModal","setMostrarModal","pedidoSelecionado","setPedidoSelecionado","observacao","setObservacao","setPeso","setVolume","mostrarModalPesoVolume","setMostrarModalPesoVolume","pedidoParaConcluir","setPedidoParaConcluir","mostrarFormulario","setMostrarFormulario","isLoading","setIsLoading","isFetching","lastFetchTimestamp","fetchPedidos","dados","now","current","response","data","get","pedidosAtualizados","map","pedido","inicioValido","id","dataConclusaoValida","tempoFinal","tempoAcumulado","tempoDesdeRetomada","calcularTempo","Array","isArray","filter","p","error","message","carregarPedidos","cancel","intervalo","setInterval","prev","dataReferencia","tempoDesdeReferencia","tempoAtual","clearInterval","parseDate","dateStr","parsedDate","fim","inicioDate","fimDate","diffMs","exportarPDF","doc","headersAndamento","headersNovos","headersConcluidos","addTable","title","headers","text","head","body","toLocaleDateString","formatarDataHora","startY","addPage","save","moverParaAndamento","find","novoInicio","pedidoAtualizado","resposta","put","pedidoMovido","post","pausarPedido","pedidoPausado","retomarPedido","dataRetomada","tempoPausadoAnterior","pedidoRetomado","className","children","src","alt","onClick","window","open","todosPedidos","tipo"],"sources":["C:/Users/User/producao-dashboard/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport debounce from 'lodash/debounce';\nimport './App.css';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport PedidoForm from './components/pedidoForm';\nimport PedidoTable from './components/PedidoTable';\nimport ModalObservacao from './components/ModalObservacao';\nimport ModalPesoVolume from './components/ModalPesoVolume';\nimport Busca from './components/Busca';\n\n// Função para formatar datas no formato YYYY-MM-DD HH:MM:SS com fuso horário America/Sao_Paulo (UTC-3)\nexport const formatDateToLocalISO = (date, context = 'unknown') => {\n  const d = date ? new Date(date) : new Date();\n  if (isNaN(d.getTime()) || (typeof date === 'string' && date.includes('undefined'))) {\n    console.warn(`[formatDateToLocalISO - ${context}] Data inválida detectada, usando data atual:`, date);\n    return new Date().toLocaleString('sv-SE', { timeZone: 'America/Sao_Paulo' }).slice(0, 19);\n  }\n  const isoString = d.toLocaleString('sv-SE', { timeZone: 'America/Sao_Paulo' }).slice(0, 19);\n  console.log(`[formatDateToLocalISO - ${context}] Data capturada: ${d.toString()}, Data formatada: ${isoString}`);\n  return isoString;\n};\n\n// Função para formatar o tempo\nconst formatarTempo = (tempo) => {\n  if (isNaN(tempo) || tempo < 0) return '0 minutos';\n  const minutosTotais = Math.round(tempo); // Tempo já está em minutos\n  const horas = Math.floor(minutosTotais / 60);\n  const minutosRestantes = minutosTotais % 60;\n\n  if (horas === 0) {\n    return `${minutosRestantes} minuto${minutosRestantes !== 1 ? 's' : ''}`;\n  } else {\n    return `${horas} hora${horas !== 1 ? 's' : ''} e ${minutosRestantes} minuto${minutosRestantes !== 1 ? 's' : ''}`;\n  }\n};\n\nfunction App() {\n  const [pedidos, setPedidos] = useState([]);\n  const [pedidosAndamento, setPedidosAndamento] = useState([]);\n  const [pedidosConcluidos, setPedidosConcluidos] = useState([]);\n  const [novoPedido, setNovoPedido] = useState(() => {\n    const inicioInicial = formatDateToLocalISO(new Date(), 'novoPedido init');\n    console.log('Inicializando novoPedido com inicio:', inicioInicial);\n    return {\n      empresa: '',\n      numeroOS: '',\n      dataEntrada: '',\n      previsaoEntrega: '',\n      responsavel: '',\n      status: 'novo',\n      inicio: inicioInicial,\n      tempo: 0, // Tempo em minutos\n      peso: null,\n      volume: null,\n      dataConclusao: null,\n      pausado: 0,\n      tempoPausado: 0, // Tempo pausado em minutos\n      dataPausada: null,\n      dataInicioPausa: null, // Novo campo para armazenar o início do período pausado\n      itens: [{ codigoDesenho: '', quantidadePedido: '' }],\n    };\n  });\n  const [pedidoParaEditar, setPedidoParaEditar] = useState(null);\n  const [mensagem, setMensagem] = useState('');\n  const [busca, setBusca] = useState('');\n  const [mostrarModal, setMostrarModal] = useState(false);\n  const [pedidoSelecionado, setPedidoSelecionado] = useState(null);\n  const [observacao, setObservacao] = useState('');\n  const [peso, setPeso] = useState('');\n  const [volume, setVolume] = useState('');\n  const [mostrarModalPesoVolume, setMostrarModalPesoVolume] = useState(false);\n  const [pedidoParaConcluir, setPedidoParaConcluir] = useState(null);\n  const [mostrarFormulario, setMostrarFormulario] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const isFetching = useRef(false);\n  const lastFetchTimestamp = useRef(0);\n\n  const fetchPedidos = async (dados = null) => {\n    const now = Date.now();\n    if (now - lastFetchTimestamp.current < 5000 && !dados) {\n      console.log('Ignorando chamada repetida a fetchPedidos');\n      return;\n    }\n\n    if (isFetching.current) return;\n    isFetching.current = true;\n    try {\n      const response = dados ? { data: dados } : await axios.get('http://localhost:5000/pedidos');\n      const pedidosAtualizados = response.data.map((pedido) => {\n        const inicioValido = formatDateToLocalISO(pedido.inicio, `fetchPedidos - pedido ${pedido.id}`);\n        const dataConclusaoValida = pedido.dataConclusao\n          ? formatDateToLocalISO(pedido.dataConclusao, `fetchPedidos - pedido ${pedido.id}`)\n          : null;\n\n        // Preservar o tempo fixado ao pausar ou retomar\n        let tempoFinal = pedido.tempoPausado || 0; // Inicializa com tempoPausado\n        if (pedido.status === 'concluido') {\n          tempoFinal = pedido.tempo; // Usa o tempo armazenado para pedidos concluídos\n        } else if (pedido.status === 'andamento') {\n          if (pedido.pausado) {\n            tempoFinal = pedido.tempoPausado || 0; // Mantém o tempoPausado ao pausar\n          } else if (pedido.dataPausada && !pedido.pausado) {\n            // Após retomada, usa tempoPausado e calcula apenas o tempo desde dataPausada\n            const tempoAcumulado = pedido.tempoPausado || 0;\n            const tempoDesdeRetomada = calcularTempo(pedido.dataPausada, formatDateToLocalISO(new Date(), `fetchPedidos - pedido ${pedido.id}`));\n            tempoFinal = Math.round(tempoAcumulado + tempoDesdeRetomada);\n          } else {\n            // Sem pausa, calcula desde o início\n            tempoFinal = Math.round((pedido.tempoPausado || 0) + calcularTempo(inicioValido));\n          }\n        }\n\n        console.log(`fetchPedidos - pedido ${pedido.id}: tempoFinal = ${tempoFinal}, pausado = ${pedido.pausado}, tempoPausado = ${pedido.tempoPausado}, tempo = ${pedido.tempo}, dataPausada = ${pedido.dataPausada}, dataInicioPausa = ${pedido.dataInicioPausa}`);\n\n        return {\n          ...pedido,\n          inicio: inicioValido,\n          dataConclusao: dataConclusaoValida,\n          itens: Array.isArray(pedido.itens) ? pedido.itens : [],\n          tempo: Math.round(tempoFinal), // Garantir que tempo seja em minutos inteiros\n        };\n      });\n      setPedidos(pedidosAtualizados.filter((p) => p.status === 'andamento'));\n      setPedidosAndamento(pedidosAtualizados.filter((p) => p.status === 'novo'));\n      setPedidosConcluidos(pedidosAtualizados.filter((p) => p.status === 'concluido'));\n      setIsLoading(false);\n      lastFetchTimestamp.current = now;\n    } catch (error) {\n      console.error('Erro ao carregar pedidos:', error);\n      setMensagem('Erro ao carregar pedidos: ' + error.message);\n      setIsLoading(false);\n    } finally {\n      isFetching.current = false;\n    }\n  };\n\n  const carregarPedidos = useCallback(debounce((dados) => {\n    fetchPedidos(dados);\n  }, 1000), []);\n\n  useEffect(() => {\n    carregarPedidos();\n    return () => {\n      carregarPedidos.cancel();\n    };\n  }, [carregarPedidos]);\n\n  useEffect(() => {\n    const intervalo = setInterval(() => {\n      setPedidos((prev) =>\n        prev.map((p) => {\n          if (p.status !== 'andamento' || p.pausado) {\n            console.log(`Pedido ${p.id} não está em andamento ou está pausado, mantendo tempo: ${p.tempo} minutos`);\n            return p; // Não atualiza o tempo se o pedido não estiver em andamento ou estiver pausado\n          }\n\n          const inicioValido = p.inicio && !p.inicio.includes('undefined')\n            ? p.inicio\n            : formatDateToLocalISO(new Date(), 'intervalo');\n\n          let tempoAcumulado = p.tempoPausado || 0;\n          let dataReferencia = inicioValido;\n\n          if (p.dataPausada && !p.pausado) {\n            // Após retomada, usa dataPausada como ponto de referência\n            dataReferencia = p.dataPausada;\n            console.log(`Pedido ${p.id} retomado, usando dataPausada (${dataReferencia}) como referência, tempoAcumulado = ${tempoAcumulado}`);\n          }\n\n          const tempoDesdeReferencia = calcularTempo(dataReferencia, formatDateToLocalISO(new Date(), 'intervalo atual'));\n          const tempoAtual = Math.round(tempoAcumulado + tempoDesdeReferencia);\n\n          console.log(`Atualizando tempo para pedido ${p.id}: tempoPausado = ${tempoAcumulado}, tempoDesdeReferencia = ${tempoDesdeReferencia}, tempoAtual = ${tempoAtual} minutos (antes de setar)`);\n          return {\n            ...p,\n            tempo: tempoAtual,\n          };\n        })\n      );\n    }, 60000); // Atualiza a cada 60 segundos (1 minuto)\n    return () => clearInterval(intervalo);\n  }, []);\n\n  const parseDate = (dateStr) => {\n    if (!dateStr || typeof dateStr !== 'string' || dateStr.includes('undefined')) {\n      console.warn('Data inválida fornecida em parseDate, usando data atual:', dateStr);\n      return new Date();\n    }\n    const parsedDate = new Date(dateStr);\n    if (isNaN(parsedDate)) {\n      console.warn('Data inválida em parseDate, usando data atual:', dateStr);\n      return new Date();\n    }\n    return parsedDate;\n  };\n\n  const calcularTempo = (inicio, fim = formatDateToLocalISO(new Date(), 'calcularTempo')) => {\n    const inicioDate = parseDate(inicio);\n    const fimDate = parseDate(fim);\n    if (isNaN(inicioDate) || isNaN(fimDate)) {\n      console.error('Data inválida em calcularTempo:', { inicio, fim });\n      return 0;\n    }\n    const diffMs = fimDate - inicioDate;\n    return diffMs < 0 ? 0 : diffMs / (1000 * 60); // Retorna em minutos\n  };\n\n  const exportarPDF = () => {\n    const doc = new jsPDF();\n    const headersAndamento = ['Empresa', 'Nº OS', 'Data Entrada', 'Previsão', 'Responsável', 'Início', 'Tempo'];\n    const headersNovos = ['Empresa', 'Nº OS', 'Data Entrada', 'Previsão', 'Responsável', 'Início', 'Tempo'];\n    const headersConcluidos = ['Empresa', 'Nº OS', 'Data Entrada', 'Previsão', 'Responsável', 'Início e Conclusão', 'Tempo'];\n\n    const addTable = (title, data, headers) => {\n      doc.text(title, 14, 20);\n      autoTable(doc, {\n        head: [headers],\n        body: data.map((p) => [\n          p.empresa,\n          p.numeroOS,\n          p.dataEntrada ? new Date(p.dataEntrada).toLocaleDateString('pt-BR') : 'Não informado',\n          p.previsaoEntrega ? new Date(p.previsaoEntrega).toLocaleDateString('pt-BR') : 'Não informado',\n          p.responsavel,\n          p.status === 'concluido' ? `${formatarDataHora(p.inicio)}\\n${formatarDataHora(p.dataConclusao) || 'Não concluído'}` : formatarDataHora(p.inicio),\n          formatarTempo(p.tempo), // Exibe o tempo em minutos ou horas e minutos\n        ]),\n        startY: 30,\n      });\n    };\n\n    addTable('Pedidos em Andamento', pedidos, headersAndamento);\n    doc.addPage();\n    addTable('Pedidos Novos', pedidosAndamento, headersNovos);\n    doc.addPage();\n    addTable('Pedidos Concluídos', pedidosConcluidos, headersConcluidos);\n    doc.save('pedidos_controle_producao.pdf');\n  };\n\n  const formatarDataHora = (data) => {\n    return data ? parseDate(data).toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' }) : 'Não informado';\n  };\n\n  const moverParaAndamento = async (id) => {\n    const pedido = [...pedidos, ...pedidosAndamento, ...pedidosConcluidos].find((p) => p.id === id);\n    if (pedido) {\n      const novoInicio = formatDateToLocalISO(new Date(), 'moverParaAndamento');\n      const pedidoAtualizado = { \n        ...pedido, \n        status: 'andamento', \n        inicio: novoInicio,\n        tempo: 0,\n        tempoPausado: 0,\n        dataPausada: null,\n        dataInicioPausa: null,\n        pausado: 0\n      };\n      try {\n        console.log('Enviando pedido atualizado para andamento:', pedidoAtualizado);\n        const resposta = await axios.put(`http://localhost:5000/pedidos/${id}`, pedidoAtualizado);\n        const pedidoMovido = { ...resposta.data, tempo: 0 };\n        await axios.post('http://localhost:5000/enviar-email', { pedido: pedidoMovido, observacao: '' });\n        setPedidosAndamento((prev) => prev.filter((p) => p.id !== id));\n        setPedidos((prev) => [...prev.filter((p) => p.id !== id), pedidoMovido]);\n        setPedidosConcluidos((prev) => prev.filter((p) => p.id !== id));\n        setMensagem('Pedido movido para \"Em Andamento\" e e-mail enviado.');\n        carregarPedidos();\n      } catch (error) {\n        setMensagem('Erro ao mover pedido: ' + (error.response ? error.response.data.message : error.message));\n        carregarPedidos();\n      }\n    }\n  };\n\n  const pausarPedido = async (id) => {\n    const pedido = pedidos.find((p) => p.id === id);\n    if (pedido) {\n      const tempoAtual = pedido.tempo; // Salva o tempo atual como tempoPausado\n      const dataPausada = formatDateToLocalISO(new Date(), 'pausarPedido');\n      const dataInicioPausa = formatDateToLocalISO(new Date(), 'inicioPausa');\n      const pedidoPausado = { ...pedido, pausado: 1, tempoPausado: tempoAtual, dataPausada, dataInicioPausa, tempo: tempoAtual };\n      try {\n        console.log('Pausando pedido:', pedidoPausado);\n        await axios.put(`http://localhost:5000/pedidos/${id}`, pedidoPausado);\n        setPedidos((prev) => prev.map((p) => (p.id === id ? pedidoPausado : p)));\n        setMensagem('Pedido pausado com sucesso.');\n        carregarPedidos();\n      } catch (error) {\n        setMensagem('Erro ao pausar pedido: ' + error.message);\n        carregarPedidos();\n      }\n    }\n  };\n\n  const retomarPedido = async (id) => {\n    const pedido = pedidos.find((p) => p.id === id);\n    if (pedido) {\n      const dataRetomada = formatDateToLocalISO(new Date(), 'retomarPedido');\n      const tempoPausadoAnterior = pedido.tempoPausado || 0;\n      console.log(`Retomando pedido ${id}: tempoPausado = ${tempoPausadoAnterior}, tempo atual antes = ${pedido.tempo}`);\n      const pedidoRetomado = { ...pedido, pausado: 0, dataPausada: dataRetomada, dataInicioPausa: null, tempo: tempoPausadoAnterior };\n      try {\n        const resposta = await axios.put(`http://localhost:5000/pedidos/${id}`, pedidoRetomado);\n        setPedidos((prev) =>\n          prev.map((p) =>\n            p.id === id ? { ...resposta.data, tempo: tempoPausadoAnterior } : p\n          )\n        );\n        console.log(`Tempo após retomar para pedido ${id}: ${tempoPausadoAnterior} minutos`);\n        setMensagem('Pedido retomado com sucesso.');\n        carregarPedidos();\n      } catch (error) {\n        setMensagem('Erro ao retomar pedido: ' + error.message);\n        carregarPedidos();\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <img src=\"/logoNF.jpg\" alt=\"Logo\" className=\"logo\" />\n        <h1>Controle de Produção</h1>\n        <button className=\"btn-desenho\" onClick={() => window.open('https://drive.google.com/drive/folders/1vzemVbLeotHD0xirxUPsvNb9qBccQFcd?usp=sharing', '_blank')}>\n          DESENHO\n        </button>\n      </div>\n\n      {mensagem && <p className={mensagem.includes('Erro') ? 'erro' : 'sucesso'}>{mensagem}</p>}\n      {isLoading && <p>Carregando pedidos...</p>}\n\n      <button className=\"btn-adicionar-pedido\" onClick={() => setMostrarFormulario(true)}>Adicionar Pedido Novo</button>\n      {mostrarFormulario && (\n        <PedidoForm\n          novoPedido={novoPedido}\n          setNovoPedido={setNovoPedido}\n          pedidoParaEditar={pedidoParaEditar}\n          setPedidoParaEditar={setPedidoParaEditar}\n          setMostrarFormulario={setMostrarFormulario}\n          setMensagem={setMensagem}\n          carregarPedidos={carregarPedidos}\n          setPedidos={setPedidos}\n          setPedidosAndamento={setPedidosAndamento}\n          setPedidosConcluidos={setPedidosConcluidos}\n          setMostrarModalPesoVolume={setMostrarModalPesoVolume}\n          setPedidoParaConcluir={setPedidoParaConcluir}\n          moverParaAndamento={moverParaAndamento}\n          formatDateToLocalISO={formatDateToLocalISO}\n        />\n      )}\n\n      <Busca\n        busca={busca}\n        setBusca={setBusca}\n        carregarPedidos={carregarPedidos}\n        todosPedidos={[...pedidos, ...pedidosAndamento, ...pedidosConcluidos]}\n        exportarPDF={exportarPDF}\n      />\n\n      <h2>Pedidos em Andamento</h2>\n      <PedidoTable\n        pedidos={pedidos}\n        tipo=\"andamento\"\n        setPedidos={setPedidos}\n        setPedidosAndamento={setPedidosAndamento}\n        setPedidosConcluidos={setPedidosConcluidos}\n        setMensagem={setMensagem}\n        setPedidoParaEditar={setPedidoParaEditar}\n        setNovoPedido={setNovoPedido}\n        setMostrarFormulario={setMostrarFormulario}\n        setMostrarModal={setMostrarModal}\n        setPedidoSelecionado={setPedidoSelecionado}\n        setMostrarModalPesoVolume={setMostrarModalPesoVolume}\n        setPedidoParaConcluir={setPedidoParaConcluir}\n        busca={busca}\n        carregarPedidos={carregarPedidos}\n        moverParaAndamento={moverParaAndamento}\n        pausarPedido={pausarPedido}\n        retomarPedido={retomarPedido}\n        formatarTempo={formatarTempo}\n      />\n\n      <h2>Pedidos Novos</h2>\n      <PedidoTable\n        pedidos={pedidosAndamento}\n        tipo=\"novo\"\n        setPedidos={setPedidos}\n        setPedidosAndamento={setPedidosAndamento}\n        setPedidosConcluidos={setPedidosConcluidos}\n        setMensagem={setMensagem}\n        setPedidoParaEditar={setPedidoParaEditar}\n        setNovoPedido={setNovoPedido}\n        setMostrarFormulario={setMostrarFormulario}\n        setMostrarModal={setMostrarModal}\n        setPedidoSelecionado={setPedidoSelecionado}\n        setMostrarModalPesoVolume={setMostrarModalPesoVolume}\n        setPedidoParaConcluir={setPedidoParaConcluir}\n        busca={busca}\n        carregarPedidos={carregarPedidos}\n        moverParaAndamento={moverParaAndamento}\n        formatarTempo={formatarTempo}\n      />\n\n      <h2>Pedidos Concluídos</h2>\n      <PedidoTable\n        pedidos={pedidosConcluidos}\n        tipo=\"concluido\"\n        setPedidos={setPedidos}\n        setPedidosAndamento={setPedidosAndamento}\n        setPedidosConcluidos={setPedidosConcluidos}\n        setMensagem={setMensagem}\n        setPedidoParaEditar={setPedidoParaEditar}\n        setNovoPedido={setNovoPedido}\n        setMostrarFormulario={setMostrarFormulario}\n        setMostrarModal={setMostrarModal}\n        setPedidoSelecionado={setPedidoSelecionado}\n        setMostrarModalPesoVolume={setMostrarModalPesoVolume}\n        setPedidoParaConcluir={setPedidoParaConcluir}\n        busca={busca}\n        carregarPedidos={carregarPedidos}\n        formatarTempo={formatarTempo}\n      />\n\n      {mostrarModal && (\n        <ModalObservacao\n          pedidoSelecionado={pedidoSelecionado}\n          observacao={observacao}\n          setObservacao={setObservacao}\n          setMostrarModal={setMostrarModal}\n          setMensagem={setMensagem}\n        />\n      )}\n\n      {mostrarModalPesoVolume && (\n        <ModalPesoVolume\n          pedidoParaConcluir={pedidoParaConcluir}\n          peso={peso}\n          setPeso={setPeso}\n          volume={volume}\n          setVolume={setVolume}\n          setMostrarModalPesoVolume={setMostrarModalPesoVolume}\n          setPedidoParaConcluir={setPedidoParaConcluir}\n          setPedidos={setPedidos}\n          setPedidosConcluidos={setPedidosConcluidos}\n          setMensagem={setMensagem}\n          carregarPedidos={carregarPedidos}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,CAAEC,MAAM,KAAQ,OAAO,CACvE,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,iBAAiB,CACtC,MAAO,WAAW,CAClB,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,SAAS,KAAM,iBAAiB,CACvC,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CAEtC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,MAAO,MAAM,CAAAC,oBAAoB,CAAG,QAAAA,CAACC,IAAI,CAA0B,IAAxB,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,SAAS,CAC5D,KAAM,CAAAG,CAAC,CAAGL,IAAI,CAAG,GAAI,CAAAM,IAAI,CAACN,IAAI,CAAC,CAAG,GAAI,CAAAM,IAAI,CAAC,CAAC,CAC5C,GAAIC,KAAK,CAACF,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC,EAAK,MAAO,CAAAR,IAAI,GAAK,QAAQ,EAAIA,IAAI,CAACS,QAAQ,CAAC,WAAW,CAAE,CAAE,CAClFC,OAAO,CAACC,IAAI,CAAC,2BAA2BV,OAAO,+CAA+C,CAAED,IAAI,CAAC,CACrG,MAAO,IAAI,CAAAM,IAAI,CAAC,CAAC,CAACM,cAAc,CAAC,OAAO,CAAE,CAAEC,QAAQ,CAAE,mBAAoB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAC3F,CACA,KAAM,CAAAC,SAAS,CAAGV,CAAC,CAACO,cAAc,CAAC,OAAO,CAAE,CAAEC,QAAQ,CAAE,mBAAoB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAC3FJ,OAAO,CAACM,GAAG,CAAC,2BAA2Bf,OAAO,qBAAqBI,CAAC,CAACY,QAAQ,CAAC,CAAC,qBAAqBF,SAAS,EAAE,CAAC,CAChH,MAAO,CAAAA,SAAS,CAClB,CAAC,CAED;AACA,KAAM,CAAAG,aAAa,CAAIC,KAAK,EAAK,CAC/B,GAAIZ,KAAK,CAACY,KAAK,CAAC,EAAIA,KAAK,CAAG,CAAC,CAAE,MAAO,WAAW,CACjD,KAAM,CAAAC,aAAa,CAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC,CAAE;AACzC,KAAM,CAAAI,KAAK,CAAGF,IAAI,CAACG,KAAK,CAACJ,aAAa,CAAG,EAAE,CAAC,CAC5C,KAAM,CAAAK,gBAAgB,CAAGL,aAAa,CAAG,EAAE,CAE3C,GAAIG,KAAK,GAAK,CAAC,CAAE,CACf,MAAO,GAAGE,gBAAgB,UAAUA,gBAAgB,GAAK,CAAC,CAAG,GAAG,CAAG,EAAE,EAAE,CACzE,CAAC,IAAM,CACL,MAAO,GAAGF,KAAK,QAAQA,KAAK,GAAK,CAAC,CAAG,GAAG,CAAG,EAAE,MAAME,gBAAgB,UAAUA,gBAAgB,GAAK,CAAC,CAAG,GAAG,CAAG,EAAE,EAAE,CAClH,CACF,CAAC,CAED,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAG9C,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAAC+C,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGhD,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAACiD,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGlD,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAACmD,UAAU,CAAEC,aAAa,CAAC,CAAGpD,QAAQ,CAAC,IAAM,CACjD,KAAM,CAAAqD,aAAa,CAAGpC,oBAAoB,CAAC,GAAI,CAAAO,IAAI,CAAC,CAAC,CAAE,iBAAiB,CAAC,CACzEI,OAAO,CAACM,GAAG,CAAC,sCAAsC,CAAEmB,aAAa,CAAC,CAClE,MAAO,CACLC,OAAO,CAAE,EAAE,CACXC,QAAQ,CAAE,EAAE,CACZC,WAAW,CAAE,EAAE,CACfC,eAAe,CAAE,EAAE,CACnBC,WAAW,CAAE,EAAE,CACfC,MAAM,CAAE,MAAM,CACdC,MAAM,CAAEP,aAAa,CACrBhB,KAAK,CAAE,CAAC,CAAE;AACVwB,IAAI,CAAE,IAAI,CACVC,MAAM,CAAE,IAAI,CACZC,aAAa,CAAE,IAAI,CACnBC,OAAO,CAAE,CAAC,CACVC,YAAY,CAAE,CAAC,CAAE;AACjBC,WAAW,CAAE,IAAI,CACjBC,eAAe,CAAE,IAAI,CAAE;AACvBC,KAAK,CAAE,CAAC,CAAEC,aAAa,CAAE,EAAE,CAAEC,gBAAgB,CAAE,EAAG,CAAC,CACrD,CAAC,CACH,CAAC,CAAC,CACF,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGxE,QAAQ,CAAC,IAAI,CAAC,CAC9D,KAAM,CAACyE,QAAQ,CAAEC,WAAW,CAAC,CAAG1E,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAAC2E,KAAK,CAAEC,QAAQ,CAAC,CAAG5E,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAC6E,YAAY,CAAEC,eAAe,CAAC,CAAG9E,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAAC+E,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGhF,QAAQ,CAAC,IAAI,CAAC,CAChE,KAAM,CAACiF,UAAU,CAAEC,aAAa,CAAC,CAAGlF,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAC6D,IAAI,CAAEsB,OAAO,CAAC,CAAGnF,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAAC8D,MAAM,CAAEsB,SAAS,CAAC,CAAGpF,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACqF,sBAAsB,CAAEC,yBAAyB,CAAC,CAAGtF,QAAQ,CAAC,KAAK,CAAC,CAC3E,KAAM,CAACuF,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGxF,QAAQ,CAAC,IAAI,CAAC,CAClE,KAAM,CAACyF,iBAAiB,CAAEC,oBAAoB,CAAC,CAAG1F,QAAQ,CAAC,KAAK,CAAC,CACjE,KAAM,CAAC2F,SAAS,CAAEC,YAAY,CAAC,CAAG5F,QAAQ,CAAC,IAAI,CAAC,CAEhD,KAAM,CAAA6F,UAAU,CAAG1F,MAAM,CAAC,KAAK,CAAC,CAChC,KAAM,CAAA2F,kBAAkB,CAAG3F,MAAM,CAAC,CAAC,CAAC,CAEpC,KAAM,CAAA4F,YAAY,CAAG,cAAAA,CAAA,CAAwB,IAAjB,CAAAC,KAAK,CAAA5E,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CACtC,KAAM,CAAA6E,GAAG,CAAGzE,IAAI,CAACyE,GAAG,CAAC,CAAC,CACtB,GAAIA,GAAG,CAAGH,kBAAkB,CAACI,OAAO,CAAG,IAAI,EAAI,CAACF,KAAK,CAAE,CACrDpE,OAAO,CAACM,GAAG,CAAC,2CAA2C,CAAC,CACxD,OACF,CAEA,GAAI2D,UAAU,CAACK,OAAO,CAAE,OACxBL,UAAU,CAACK,OAAO,CAAG,IAAI,CACzB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAGH,KAAK,CAAG,CAAEI,IAAI,CAAEJ,KAAM,CAAC,CAAG,KAAM,CAAA5F,KAAK,CAACiG,GAAG,CAAC,+BAA+B,CAAC,CAC3F,KAAM,CAAAC,kBAAkB,CAAGH,QAAQ,CAACC,IAAI,CAACG,GAAG,CAAEC,MAAM,EAAK,CACvD,KAAM,CAAAC,YAAY,CAAGxF,oBAAoB,CAACuF,MAAM,CAAC5C,MAAM,CAAE,yBAAyB4C,MAAM,CAACE,EAAE,EAAE,CAAC,CAC9F,KAAM,CAAAC,mBAAmB,CAAGH,MAAM,CAACzC,aAAa,CAC5C9C,oBAAoB,CAACuF,MAAM,CAACzC,aAAa,CAAE,yBAAyByC,MAAM,CAACE,EAAE,EAAE,CAAC,CAChF,IAAI,CAER;AACA,GAAI,CAAAE,UAAU,CAAGJ,MAAM,CAACvC,YAAY,EAAI,CAAC,CAAE;AAC3C,GAAIuC,MAAM,CAAC7C,MAAM,GAAK,WAAW,CAAE,CACjCiD,UAAU,CAAGJ,MAAM,CAACnE,KAAK,CAAE;AAC7B,CAAC,IAAM,IAAImE,MAAM,CAAC7C,MAAM,GAAK,WAAW,CAAE,CACxC,GAAI6C,MAAM,CAACxC,OAAO,CAAE,CAClB4C,UAAU,CAAGJ,MAAM,CAACvC,YAAY,EAAI,CAAC,CAAE;AACzC,CAAC,IAAM,IAAIuC,MAAM,CAACtC,WAAW,EAAI,CAACsC,MAAM,CAACxC,OAAO,CAAE,CAChD;AACA,KAAM,CAAA6C,cAAc,CAAGL,MAAM,CAACvC,YAAY,EAAI,CAAC,CAC/C,KAAM,CAAA6C,kBAAkB,CAAGC,aAAa,CAACP,MAAM,CAACtC,WAAW,CAAEjD,oBAAoB,CAAC,GAAI,CAAAO,IAAI,CAAC,CAAC,CAAE,yBAAyBgF,MAAM,CAACE,EAAE,EAAE,CAAC,CAAC,CACpIE,UAAU,CAAGrE,IAAI,CAACC,KAAK,CAACqE,cAAc,CAAGC,kBAAkB,CAAC,CAC9D,CAAC,IAAM,CACL;AACAF,UAAU,CAAGrE,IAAI,CAACC,KAAK,CAAC,CAACgE,MAAM,CAACvC,YAAY,EAAI,CAAC,EAAI8C,aAAa,CAACN,YAAY,CAAC,CAAC,CACnF,CACF,CAEA7E,OAAO,CAACM,GAAG,CAAC,yBAAyBsE,MAAM,CAACE,EAAE,kBAAkBE,UAAU,eAAeJ,MAAM,CAACxC,OAAO,oBAAoBwC,MAAM,CAACvC,YAAY,aAAauC,MAAM,CAACnE,KAAK,mBAAmBmE,MAAM,CAACtC,WAAW,uBAAuBsC,MAAM,CAACrC,eAAe,EAAE,CAAC,CAE5P,MAAO,CACL,GAAGqC,MAAM,CACT5C,MAAM,CAAE6C,YAAY,CACpB1C,aAAa,CAAE4C,mBAAmB,CAClCvC,KAAK,CAAE4C,KAAK,CAACC,OAAO,CAACT,MAAM,CAACpC,KAAK,CAAC,CAAGoC,MAAM,CAACpC,KAAK,CAAG,EAAE,CACtD/B,KAAK,CAAEE,IAAI,CAACC,KAAK,CAACoE,UAAU,CAAG;AACjC,CAAC,CACH,CAAC,CAAC,CACF9D,UAAU,CAACwD,kBAAkB,CAACY,MAAM,CAAEC,CAAC,EAAKA,CAAC,CAACxD,MAAM,GAAK,WAAW,CAAC,CAAC,CACtEX,mBAAmB,CAACsD,kBAAkB,CAACY,MAAM,CAAEC,CAAC,EAAKA,CAAC,CAACxD,MAAM,GAAK,MAAM,CAAC,CAAC,CAC1ET,oBAAoB,CAACoD,kBAAkB,CAACY,MAAM,CAAEC,CAAC,EAAKA,CAAC,CAACxD,MAAM,GAAK,WAAW,CAAC,CAAC,CAChFiC,YAAY,CAAC,KAAK,CAAC,CACnBE,kBAAkB,CAACI,OAAO,CAAGD,GAAG,CAClC,CAAE,MAAOmB,KAAK,CAAE,CACdxF,OAAO,CAACwF,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD1C,WAAW,CAAC,4BAA4B,CAAG0C,KAAK,CAACC,OAAO,CAAC,CACzDzB,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,OAAS,CACRC,UAAU,CAACK,OAAO,CAAG,KAAK,CAC5B,CACF,CAAC,CAED,KAAM,CAAAoB,eAAe,CAAGpH,WAAW,CAACG,QAAQ,CAAE2F,KAAK,EAAK,CACtDD,YAAY,CAACC,KAAK,CAAC,CACrB,CAAC,CAAE,IAAI,CAAC,CAAE,EAAE,CAAC,CAEb/F,SAAS,CAAC,IAAM,CACdqH,eAAe,CAAC,CAAC,CACjB,MAAO,IAAM,CACXA,eAAe,CAACC,MAAM,CAAC,CAAC,CAC1B,CAAC,CACH,CAAC,CAAE,CAACD,eAAe,CAAC,CAAC,CAErBrH,SAAS,CAAC,IAAM,CACd,KAAM,CAAAuH,SAAS,CAAGC,WAAW,CAAC,IAAM,CAClC3E,UAAU,CAAE4E,IAAI,EACdA,IAAI,CAACnB,GAAG,CAAEY,CAAC,EAAK,CACd,GAAIA,CAAC,CAACxD,MAAM,GAAK,WAAW,EAAIwD,CAAC,CAACnD,OAAO,CAAE,CACzCpC,OAAO,CAACM,GAAG,CAAC,UAAUiF,CAAC,CAACT,EAAE,2DAA2DS,CAAC,CAAC9E,KAAK,UAAU,CAAC,CACvG,MAAO,CAAA8E,CAAC,CAAE;AACZ,CAEA,KAAM,CAAAV,YAAY,CAAGU,CAAC,CAACvD,MAAM,EAAI,CAACuD,CAAC,CAACvD,MAAM,CAACjC,QAAQ,CAAC,WAAW,CAAC,CAC5DwF,CAAC,CAACvD,MAAM,CACR3C,oBAAoB,CAAC,GAAI,CAAAO,IAAI,CAAC,CAAC,CAAE,WAAW,CAAC,CAEjD,GAAI,CAAAqF,cAAc,CAAGM,CAAC,CAAClD,YAAY,EAAI,CAAC,CACxC,GAAI,CAAA0D,cAAc,CAAGlB,YAAY,CAEjC,GAAIU,CAAC,CAACjD,WAAW,EAAI,CAACiD,CAAC,CAACnD,OAAO,CAAE,CAC/B;AACA2D,cAAc,CAAGR,CAAC,CAACjD,WAAW,CAC9BtC,OAAO,CAACM,GAAG,CAAC,UAAUiF,CAAC,CAACT,EAAE,kCAAkCiB,cAAc,uCAAuCd,cAAc,EAAE,CAAC,CACpI,CAEA,KAAM,CAAAe,oBAAoB,CAAGb,aAAa,CAACY,cAAc,CAAE1G,oBAAoB,CAAC,GAAI,CAAAO,IAAI,CAAC,CAAC,CAAE,iBAAiB,CAAC,CAAC,CAC/G,KAAM,CAAAqG,UAAU,CAAGtF,IAAI,CAACC,KAAK,CAACqE,cAAc,CAAGe,oBAAoB,CAAC,CAEpEhG,OAAO,CAACM,GAAG,CAAC,iCAAiCiF,CAAC,CAACT,EAAE,oBAAoBG,cAAc,4BAA4Be,oBAAoB,kBAAkBC,UAAU,2BAA2B,CAAC,CAC3L,MAAO,CACL,GAAGV,CAAC,CACJ9E,KAAK,CAAEwF,UACT,CAAC,CACH,CAAC,CACH,CAAC,CACH,CAAC,CAAE,KAAK,CAAC,CAAE;AACX,MAAO,IAAMC,aAAa,CAACN,SAAS,CAAC,CACvC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAO,SAAS,CAAIC,OAAO,EAAK,CAC7B,GAAI,CAACA,OAAO,EAAI,MAAO,CAAAA,OAAO,GAAK,QAAQ,EAAIA,OAAO,CAACrG,QAAQ,CAAC,WAAW,CAAC,CAAE,CAC5EC,OAAO,CAACC,IAAI,CAAC,0DAA0D,CAAEmG,OAAO,CAAC,CACjF,MAAO,IAAI,CAAAxG,IAAI,CAAC,CAAC,CACnB,CACA,KAAM,CAAAyG,UAAU,CAAG,GAAI,CAAAzG,IAAI,CAACwG,OAAO,CAAC,CACpC,GAAIvG,KAAK,CAACwG,UAAU,CAAC,CAAE,CACrBrG,OAAO,CAACC,IAAI,CAAC,gDAAgD,CAAEmG,OAAO,CAAC,CACvE,MAAO,IAAI,CAAAxG,IAAI,CAAC,CAAC,CACnB,CACA,MAAO,CAAAyG,UAAU,CACnB,CAAC,CAED,KAAM,CAAAlB,aAAa,CAAG,QAAAA,CAACnD,MAAM,CAA8D,IAA5D,CAAAsE,GAAG,CAAA9G,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGH,oBAAoB,CAAC,GAAI,CAAAO,IAAI,CAAC,CAAC,CAAE,eAAe,CAAC,CACpF,KAAM,CAAA2G,UAAU,CAAGJ,SAAS,CAACnE,MAAM,CAAC,CACpC,KAAM,CAAAwE,OAAO,CAAGL,SAAS,CAACG,GAAG,CAAC,CAC9B,GAAIzG,KAAK,CAAC0G,UAAU,CAAC,EAAI1G,KAAK,CAAC2G,OAAO,CAAC,CAAE,CACvCxG,OAAO,CAACwF,KAAK,CAAC,iCAAiC,CAAE,CAAExD,MAAM,CAAEsE,GAAI,CAAC,CAAC,CACjE,MAAO,EAAC,CACV,CACA,KAAM,CAAAG,MAAM,CAAGD,OAAO,CAAGD,UAAU,CACnC,MAAO,CAAAE,MAAM,CAAG,CAAC,CAAG,CAAC,CAAGA,MAAM,EAAI,IAAI,CAAG,EAAE,CAAC,CAAE;AAChD,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAjI,KAAK,CAAC,CAAC,CACvB,KAAM,CAAAkI,gBAAgB,CAAG,CAAC,SAAS,CAAE,OAAO,CAAE,cAAc,CAAE,UAAU,CAAE,aAAa,CAAE,QAAQ,CAAE,OAAO,CAAC,CAC3G,KAAM,CAAAC,YAAY,CAAG,CAAC,SAAS,CAAE,OAAO,CAAE,cAAc,CAAE,UAAU,CAAE,aAAa,CAAE,QAAQ,CAAE,OAAO,CAAC,CACvG,KAAM,CAAAC,iBAAiB,CAAG,CAAC,SAAS,CAAE,OAAO,CAAE,cAAc,CAAE,UAAU,CAAE,aAAa,CAAE,oBAAoB,CAAE,OAAO,CAAC,CAExH,KAAM,CAAAC,QAAQ,CAAGA,CAACC,KAAK,CAAExC,IAAI,CAAEyC,OAAO,GAAK,CACzCN,GAAG,CAACO,IAAI,CAACF,KAAK,CAAE,EAAE,CAAE,EAAE,CAAC,CACvBrI,SAAS,CAACgI,GAAG,CAAE,CACbQ,IAAI,CAAE,CAACF,OAAO,CAAC,CACfG,IAAI,CAAE5C,IAAI,CAACG,GAAG,CAAEY,CAAC,EAAK,CACpBA,CAAC,CAAC7D,OAAO,CACT6D,CAAC,CAAC5D,QAAQ,CACV4D,CAAC,CAAC3D,WAAW,CAAG,GAAI,CAAAhC,IAAI,CAAC2F,CAAC,CAAC3D,WAAW,CAAC,CAACyF,kBAAkB,CAAC,OAAO,CAAC,CAAG,eAAe,CACrF9B,CAAC,CAAC1D,eAAe,CAAG,GAAI,CAAAjC,IAAI,CAAC2F,CAAC,CAAC1D,eAAe,CAAC,CAACwF,kBAAkB,CAAC,OAAO,CAAC,CAAG,eAAe,CAC7F9B,CAAC,CAACzD,WAAW,CACbyD,CAAC,CAACxD,MAAM,GAAK,WAAW,CAAG,GAAGuF,gBAAgB,CAAC/B,CAAC,CAACvD,MAAM,CAAC,KAAKsF,gBAAgB,CAAC/B,CAAC,CAACpD,aAAa,CAAC,EAAI,eAAe,EAAE,CAAGmF,gBAAgB,CAAC/B,CAAC,CAACvD,MAAM,CAAC,CAChJxB,aAAa,CAAC+E,CAAC,CAAC9E,KAAK,CAAG;AAAA,CACzB,CAAC,CACF8G,MAAM,CAAE,EACV,CAAC,CAAC,CACJ,CAAC,CAEDR,QAAQ,CAAC,sBAAsB,CAAE9F,OAAO,CAAE2F,gBAAgB,CAAC,CAC3DD,GAAG,CAACa,OAAO,CAAC,CAAC,CACbT,QAAQ,CAAC,eAAe,CAAE5F,gBAAgB,CAAE0F,YAAY,CAAC,CACzDF,GAAG,CAACa,OAAO,CAAC,CAAC,CACbT,QAAQ,CAAC,oBAAoB,CAAE1F,iBAAiB,CAAEyF,iBAAiB,CAAC,CACpEH,GAAG,CAACc,IAAI,CAAC,+BAA+B,CAAC,CAC3C,CAAC,CAED,KAAM,CAAAH,gBAAgB,CAAI9C,IAAI,EAAK,CACjC,MAAO,CAAAA,IAAI,CAAG2B,SAAS,CAAC3B,IAAI,CAAC,CAACtE,cAAc,CAAC,OAAO,CAAE,CAAEC,QAAQ,CAAE,mBAAoB,CAAC,CAAC,CAAG,eAAe,CAC5G,CAAC,CAED,KAAM,CAAAuH,kBAAkB,CAAG,KAAO,CAAA5C,EAAE,EAAK,CACvC,KAAM,CAAAF,MAAM,CAAG,CAAC,GAAG3D,OAAO,CAAE,GAAGE,gBAAgB,CAAE,GAAGE,iBAAiB,CAAC,CAACsG,IAAI,CAAEpC,CAAC,EAAKA,CAAC,CAACT,EAAE,GAAKA,EAAE,CAAC,CAC/F,GAAIF,MAAM,CAAE,CACV,KAAM,CAAAgD,UAAU,CAAGvI,oBAAoB,CAAC,GAAI,CAAAO,IAAI,CAAC,CAAC,CAAE,oBAAoB,CAAC,CACzE,KAAM,CAAAiI,gBAAgB,CAAG,CACvB,GAAGjD,MAAM,CACT7C,MAAM,CAAE,WAAW,CACnBC,MAAM,CAAE4F,UAAU,CAClBnH,KAAK,CAAE,CAAC,CACR4B,YAAY,CAAE,CAAC,CACfC,WAAW,CAAE,IAAI,CACjBC,eAAe,CAAE,IAAI,CACrBH,OAAO,CAAE,CACX,CAAC,CACD,GAAI,CACFpC,OAAO,CAACM,GAAG,CAAC,4CAA4C,CAAEuH,gBAAgB,CAAC,CAC3E,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAtJ,KAAK,CAACuJ,GAAG,CAAC,iCAAiCjD,EAAE,EAAE,CAAE+C,gBAAgB,CAAC,CACzF,KAAM,CAAAG,YAAY,CAAG,CAAE,GAAGF,QAAQ,CAACtD,IAAI,CAAE/D,KAAK,CAAE,CAAE,CAAC,CACnD,KAAM,CAAAjC,KAAK,CAACyJ,IAAI,CAAC,oCAAoC,CAAE,CAAErD,MAAM,CAAEoD,YAAY,CAAE3E,UAAU,CAAE,EAAG,CAAC,CAAC,CAChGjC,mBAAmB,CAAE0E,IAAI,EAAKA,IAAI,CAACR,MAAM,CAAEC,CAAC,EAAKA,CAAC,CAACT,EAAE,GAAKA,EAAE,CAAC,CAAC,CAC9D5D,UAAU,CAAE4E,IAAI,EAAK,CAAC,GAAGA,IAAI,CAACR,MAAM,CAAEC,CAAC,EAAKA,CAAC,CAACT,EAAE,GAAKA,EAAE,CAAC,CAAEkD,YAAY,CAAC,CAAC,CACxE1G,oBAAoB,CAAEwE,IAAI,EAAKA,IAAI,CAACR,MAAM,CAAEC,CAAC,EAAKA,CAAC,CAACT,EAAE,GAAKA,EAAE,CAAC,CAAC,CAC/DhC,WAAW,CAAC,qDAAqD,CAAC,CAClE4C,eAAe,CAAC,CAAC,CACnB,CAAE,MAAOF,KAAK,CAAE,CACd1C,WAAW,CAAC,wBAAwB,EAAI0C,KAAK,CAACjB,QAAQ,CAAGiB,KAAK,CAACjB,QAAQ,CAACC,IAAI,CAACiB,OAAO,CAAGD,KAAK,CAACC,OAAO,CAAC,CAAC,CACtGC,eAAe,CAAC,CAAC,CACnB,CACF,CACF,CAAC,CAED,KAAM,CAAAwC,YAAY,CAAG,KAAO,CAAApD,EAAE,EAAK,CACjC,KAAM,CAAAF,MAAM,CAAG3D,OAAO,CAAC0G,IAAI,CAAEpC,CAAC,EAAKA,CAAC,CAACT,EAAE,GAAKA,EAAE,CAAC,CAC/C,GAAIF,MAAM,CAAE,CACV,KAAM,CAAAqB,UAAU,CAAGrB,MAAM,CAACnE,KAAK,CAAE;AACjC,KAAM,CAAA6B,WAAW,CAAGjD,oBAAoB,CAAC,GAAI,CAAAO,IAAI,CAAC,CAAC,CAAE,cAAc,CAAC,CACpE,KAAM,CAAA2C,eAAe,CAAGlD,oBAAoB,CAAC,GAAI,CAAAO,IAAI,CAAC,CAAC,CAAE,aAAa,CAAC,CACvE,KAAM,CAAAuI,aAAa,CAAG,CAAE,GAAGvD,MAAM,CAAExC,OAAO,CAAE,CAAC,CAAEC,YAAY,CAAE4D,UAAU,CAAE3D,WAAW,CAAEC,eAAe,CAAE9B,KAAK,CAAEwF,UAAW,CAAC,CAC1H,GAAI,CACFjG,OAAO,CAACM,GAAG,CAAC,kBAAkB,CAAE6H,aAAa,CAAC,CAC9C,KAAM,CAAA3J,KAAK,CAACuJ,GAAG,CAAC,iCAAiCjD,EAAE,EAAE,CAAEqD,aAAa,CAAC,CACrEjH,UAAU,CAAE4E,IAAI,EAAKA,IAAI,CAACnB,GAAG,CAAEY,CAAC,EAAMA,CAAC,CAACT,EAAE,GAAKA,EAAE,CAAGqD,aAAa,CAAG5C,CAAE,CAAC,CAAC,CACxEzC,WAAW,CAAC,6BAA6B,CAAC,CAC1C4C,eAAe,CAAC,CAAC,CACnB,CAAE,MAAOF,KAAK,CAAE,CACd1C,WAAW,CAAC,yBAAyB,CAAG0C,KAAK,CAACC,OAAO,CAAC,CACtDC,eAAe,CAAC,CAAC,CACnB,CACF,CACF,CAAC,CAED,KAAM,CAAA0C,aAAa,CAAG,KAAO,CAAAtD,EAAE,EAAK,CAClC,KAAM,CAAAF,MAAM,CAAG3D,OAAO,CAAC0G,IAAI,CAAEpC,CAAC,EAAKA,CAAC,CAACT,EAAE,GAAKA,EAAE,CAAC,CAC/C,GAAIF,MAAM,CAAE,CACV,KAAM,CAAAyD,YAAY,CAAGhJ,oBAAoB,CAAC,GAAI,CAAAO,IAAI,CAAC,CAAC,CAAE,eAAe,CAAC,CACtE,KAAM,CAAA0I,oBAAoB,CAAG1D,MAAM,CAACvC,YAAY,EAAI,CAAC,CACrDrC,OAAO,CAACM,GAAG,CAAC,oBAAoBwE,EAAE,oBAAoBwD,oBAAoB,yBAAyB1D,MAAM,CAACnE,KAAK,EAAE,CAAC,CAClH,KAAM,CAAA8H,cAAc,CAAG,CAAE,GAAG3D,MAAM,CAAExC,OAAO,CAAE,CAAC,CAAEE,WAAW,CAAE+F,YAAY,CAAE9F,eAAe,CAAE,IAAI,CAAE9B,KAAK,CAAE6H,oBAAqB,CAAC,CAC/H,GAAI,CACF,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAtJ,KAAK,CAACuJ,GAAG,CAAC,iCAAiCjD,EAAE,EAAE,CAAEyD,cAAc,CAAC,CACvFrH,UAAU,CAAE4E,IAAI,EACdA,IAAI,CAACnB,GAAG,CAAEY,CAAC,EACTA,CAAC,CAACT,EAAE,GAAKA,EAAE,CAAG,CAAE,GAAGgD,QAAQ,CAACtD,IAAI,CAAE/D,KAAK,CAAE6H,oBAAqB,CAAC,CAAG/C,CACpE,CACF,CAAC,CACDvF,OAAO,CAACM,GAAG,CAAC,kCAAkCwE,EAAE,KAAKwD,oBAAoB,UAAU,CAAC,CACpFxF,WAAW,CAAC,8BAA8B,CAAC,CAC3C4C,eAAe,CAAC,CAAC,CACnB,CAAE,MAAOF,KAAK,CAAE,CACd1C,WAAW,CAAC,0BAA0B,CAAG0C,KAAK,CAACC,OAAO,CAAC,CACvDC,eAAe,CAAC,CAAC,CACnB,CACF,CACF,CAAC,CAED,mBACEtG,KAAA,QAAKoJ,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBrJ,KAAA,QAAKoJ,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACrBvJ,IAAA,QAAKwJ,GAAG,CAAC,aAAa,CAACC,GAAG,CAAC,MAAM,CAACH,SAAS,CAAC,MAAM,CAAE,CAAC,cACrDtJ,IAAA,OAAAuJ,QAAA,CAAI,4BAAoB,CAAI,CAAC,cAC7BvJ,IAAA,WAAQsJ,SAAS,CAAC,aAAa,CAACI,OAAO,CAAEA,CAAA,GAAMC,MAAM,CAACC,IAAI,CAAC,sFAAsF,CAAE,QAAQ,CAAE,CAAAL,QAAA,CAAC,SAE9J,CAAQ,CAAC,EACN,CAAC,CAEL5F,QAAQ,eAAI3D,IAAA,MAAGsJ,SAAS,CAAE3F,QAAQ,CAAC9C,QAAQ,CAAC,MAAM,CAAC,CAAG,MAAM,CAAG,SAAU,CAAA0I,QAAA,CAAE5F,QAAQ,CAAI,CAAC,CACxFkB,SAAS,eAAI7E,IAAA,MAAAuJ,QAAA,CAAG,uBAAqB,CAAG,CAAC,cAE1CvJ,IAAA,WAAQsJ,SAAS,CAAC,sBAAsB,CAACI,OAAO,CAAEA,CAAA,GAAM9E,oBAAoB,CAAC,IAAI,CAAE,CAAA2E,QAAA,CAAC,uBAAqB,CAAQ,CAAC,CACjH5E,iBAAiB,eAChB3E,IAAA,CAACN,UAAU,EACT2C,UAAU,CAAEA,UAAW,CACvBC,aAAa,CAAEA,aAAc,CAC7BmB,gBAAgB,CAAEA,gBAAiB,CACnCC,mBAAmB,CAAEA,mBAAoB,CACzCkB,oBAAoB,CAAEA,oBAAqB,CAC3ChB,WAAW,CAAEA,WAAY,CACzB4C,eAAe,CAAEA,eAAgB,CACjCxE,UAAU,CAAEA,UAAW,CACvBE,mBAAmB,CAAEA,mBAAoB,CACzCE,oBAAoB,CAAEA,oBAAqB,CAC3CoC,yBAAyB,CAAEA,yBAA0B,CACrDE,qBAAqB,CAAEA,qBAAsB,CAC7C8D,kBAAkB,CAAEA,kBAAmB,CACvCrI,oBAAoB,CAAEA,oBAAqB,CAC5C,CACF,cAEDH,IAAA,CAACF,KAAK,EACJ+D,KAAK,CAAEA,KAAM,CACbC,QAAQ,CAAEA,QAAS,CACnB0C,eAAe,CAAEA,eAAgB,CACjCqD,YAAY,CAAE,CAAC,GAAG9H,OAAO,CAAE,GAAGE,gBAAgB,CAAE,GAAGE,iBAAiB,CAAE,CACtEqF,WAAW,CAAEA,WAAY,CAC1B,CAAC,cAEFxH,IAAA,OAAAuJ,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7BvJ,IAAA,CAACL,WAAW,EACVoC,OAAO,CAAEA,OAAQ,CACjB+H,IAAI,CAAC,WAAW,CAChB9H,UAAU,CAAEA,UAAW,CACvBE,mBAAmB,CAAEA,mBAAoB,CACzCE,oBAAoB,CAAEA,oBAAqB,CAC3CwB,WAAW,CAAEA,WAAY,CACzBF,mBAAmB,CAAEA,mBAAoB,CACzCpB,aAAa,CAAEA,aAAc,CAC7BsC,oBAAoB,CAAEA,oBAAqB,CAC3CZ,eAAe,CAAEA,eAAgB,CACjCE,oBAAoB,CAAEA,oBAAqB,CAC3CM,yBAAyB,CAAEA,yBAA0B,CACrDE,qBAAqB,CAAEA,qBAAsB,CAC7Cb,KAAK,CAAEA,KAAM,CACb2C,eAAe,CAAEA,eAAgB,CACjCgC,kBAAkB,CAAEA,kBAAmB,CACvCQ,YAAY,CAAEA,YAAa,CAC3BE,aAAa,CAAEA,aAAc,CAC7B5H,aAAa,CAAEA,aAAc,CAC9B,CAAC,cAEFtB,IAAA,OAAAuJ,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBvJ,IAAA,CAACL,WAAW,EACVoC,OAAO,CAAEE,gBAAiB,CAC1B6H,IAAI,CAAC,MAAM,CACX9H,UAAU,CAAEA,UAAW,CACvBE,mBAAmB,CAAEA,mBAAoB,CACzCE,oBAAoB,CAAEA,oBAAqB,CAC3CwB,WAAW,CAAEA,WAAY,CACzBF,mBAAmB,CAAEA,mBAAoB,CACzCpB,aAAa,CAAEA,aAAc,CAC7BsC,oBAAoB,CAAEA,oBAAqB,CAC3CZ,eAAe,CAAEA,eAAgB,CACjCE,oBAAoB,CAAEA,oBAAqB,CAC3CM,yBAAyB,CAAEA,yBAA0B,CACrDE,qBAAqB,CAAEA,qBAAsB,CAC7Cb,KAAK,CAAEA,KAAM,CACb2C,eAAe,CAAEA,eAAgB,CACjCgC,kBAAkB,CAAEA,kBAAmB,CACvClH,aAAa,CAAEA,aAAc,CAC9B,CAAC,cAEFtB,IAAA,OAAAuJ,QAAA,CAAI,uBAAkB,CAAI,CAAC,cAC3BvJ,IAAA,CAACL,WAAW,EACVoC,OAAO,CAAEI,iBAAkB,CAC3B2H,IAAI,CAAC,WAAW,CAChB9H,UAAU,CAAEA,UAAW,CACvBE,mBAAmB,CAAEA,mBAAoB,CACzCE,oBAAoB,CAAEA,oBAAqB,CAC3CwB,WAAW,CAAEA,WAAY,CACzBF,mBAAmB,CAAEA,mBAAoB,CACzCpB,aAAa,CAAEA,aAAc,CAC7BsC,oBAAoB,CAAEA,oBAAqB,CAC3CZ,eAAe,CAAEA,eAAgB,CACjCE,oBAAoB,CAAEA,oBAAqB,CAC3CM,yBAAyB,CAAEA,yBAA0B,CACrDE,qBAAqB,CAAEA,qBAAsB,CAC7Cb,KAAK,CAAEA,KAAM,CACb2C,eAAe,CAAEA,eAAgB,CACjClF,aAAa,CAAEA,aAAc,CAC9B,CAAC,CAEDyC,YAAY,eACX/D,IAAA,CAACJ,eAAe,EACdqE,iBAAiB,CAAEA,iBAAkB,CACrCE,UAAU,CAAEA,UAAW,CACvBC,aAAa,CAAEA,aAAc,CAC7BJ,eAAe,CAAEA,eAAgB,CACjCJ,WAAW,CAAEA,WAAY,CAC1B,CACF,CAEAW,sBAAsB,eACrBvE,IAAA,CAACH,eAAe,EACd4E,kBAAkB,CAAEA,kBAAmB,CACvC1B,IAAI,CAAEA,IAAK,CACXsB,OAAO,CAAEA,OAAQ,CACjBrB,MAAM,CAAEA,MAAO,CACfsB,SAAS,CAAEA,SAAU,CACrBE,yBAAyB,CAAEA,yBAA0B,CACrDE,qBAAqB,CAAEA,qBAAsB,CAC7C1C,UAAU,CAAEA,UAAW,CACvBI,oBAAoB,CAAEA,oBAAqB,CAC3CwB,WAAW,CAAEA,WAAY,CACzB4C,eAAe,CAAEA,eAAgB,CAClC,CACF,EACE,CAAC,CAEV,CAEA,cAAe,CAAA1E,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
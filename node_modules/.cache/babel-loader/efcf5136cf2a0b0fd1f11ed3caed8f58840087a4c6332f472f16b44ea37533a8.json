{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\producao-dashboard\\\\FRONTEND\\\\src\\\\components\\\\pedidoForm.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PedidoForm = ({\n  novoPedido,\n  setNovoPedido,\n  pedidoParaEditar,\n  setPedidoParaEditar,\n  setMostrarFormulario,\n  setMensagem,\n  carregarPedidos,\n  setPedidos,\n  setPedidosAndamento,\n  setPedidosConcluidos,\n  setMostrarModalPesoVolume,\n  setPedidoParaConcluir,\n  moverParaAndamento\n}) => {\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const camposObrigatorios = ['empresa', 'numeroOS', 'dataEntrada', 'previsaoEntrega'];\n    const erros = camposObrigatorios.filter(campo => !novoPedido[campo]);\n    if (erros.length > 0) {\n      setMensagem(`Preencha os campos obrigatórios: ${erros.join(', ')}`);\n      return;\n    }\n    const quantidadePedido = parseInt(novoPedido.quantidadePedido) || 0;\n    const quantidadeEntregueDigitada = parseInt(novoPedido.quantidadeEntregue) || 0;\n    let novaQuantidadeEntregue;\n    if (pedidoParaEditar && novoPedido.status === 'andamento') {\n      novaQuantidadeEntregue = (pedidoParaEditar.quantidadeEntregue || 0) + quantidadeEntregueDigitada;\n    } else {\n      novaQuantidadeEntregue = quantidadeEntregueDigitada;\n    }\n    if (novaQuantidadeEntregue > quantidadePedido) {\n      window.alert('A quantidade entregue não pode exceder a quantidade pedida!');\n      return;\n    }\n    const pedidoParaEnviar = {\n      ...novoPedido,\n      quantidadePedido,\n      quantidadeEntregue: novaQuantidadeEntregue,\n      tempo: calcularTempo(new Date(novoPedido.inicio))\n    };\n    try {\n      let resposta;\n      if (pedidoParaEditar) {\n        if (novoPedido.status === 'andamento') {\n          setPedidoParaConcluir({\n            ...pedidoParaEnviar,\n            quantidadeEntregue: novaQuantidadeEntregue\n          });\n          setMostrarModalPesoVolume(true);\n          setMensagem('Preencha peso e volume para salvar a edição.');\n          resetForm();\n          return;\n        }\n        resposta = await axios.put(`http://localhost:5000/pedidos/${pedidoParaEditar.id}`, pedidoParaEnviar);\n        const pedidoAtualizado = {\n          ...resposta.data,\n          tempo: calcularTempo(new Date(resposta.data.inicio), resposta.data.dataConclusao ? new Date(resposta.data.dataConclusao) : null)\n        };\n        await axios.post('http://localhost:5000/enviar-email', {\n          pedido: pedidoAtualizado,\n          observacao: ''\n        });\n        atualizarListas(pedidoAtualizado);\n        setMensagem('Pedido atualizado e e-mail enviado!');\n        resetForm();\n      } else {\n        resposta = await axios.post('http://localhost:5000/pedidos', pedidoParaEnviar);\n        const novoPedidoAdicionado = {\n          ...resposta.data,\n          tempo: calcularTempo(new Date(resposta.data.inicio))\n        };\n        await axios.post('http://localhost:5000/enviar-email', {\n          pedido: novoPedidoAdicionado,\n          observacao: ''\n        });\n        atualizarListas(novoPedidoAdicionado);\n        setMensagem('Pedido adicionado e e-mail enviado!');\n        resetForm();\n      }\n    } catch (error) {\n      var _error$response;\n      setMensagem('Erro ao processar pedido: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message) || error.message));\n      await carregarPedidos();\n    }\n  };\n  const calcularTempo = (inicio, fim = new Date().toLocaleString('pt-BR', {\n    timeZone: 'America/Sao_Paulo'\n  })) => {\n    const inicioDate = new Date(inicio);\n    const fimDate = new Date(fim);\n    const diffMs = fimDate - inicioDate;\n    return diffMs < 0 ? 0 : diffMs / (1000 * 60 * 60);\n  };\n  const atualizarListas = pedido => {\n    if (pedido.status === 'novo') {\n      setPedidosAndamento(prev => [...prev.filter(p => p.id !== pedido.id), pedido]);\n      setPedidos(prev => prev.filter(p => p.id !== pedido.id));\n      setPedidosConcluidos(prev => prev.filter(p => p.id !== pedido.id));\n    } else if (pedido.status === 'andamento') {\n      setPedidos(prev => [...prev.filter(p => p.id !== pedido.id), pedido]);\n      setPedidosAndamento(prev => prev.filter(p => p.id !== pedido.id));\n      setPedidosConcluidos(prev => prev.filter(p => p.id !== pedido.id));\n    } else if (pedido.status === 'concluido') {\n      setPedidosConcluidos(prev => [...prev.filter(p => p.id !== pedido.id), pedido]);\n      setPedidos(prev => prev.filter(p => p.id !== pedido.id));\n      setPedidosAndamento(prev => prev.filter(p => p.id !== pedido.id));\n    }\n  };\n  const resetForm = () => {\n    setNovoPedido({\n      empresa: '',\n      numeroOS: '',\n      dataEntrada: '',\n      previsaoEntrega: '',\n      responsavel: '',\n      codigoDesenho: '',\n      quantidadePedido: '',\n      quantidadeEntregue: '',\n      status: 'novo',\n      inicio: new Date().toLocaleString('pt-BR', {\n        timeZone: 'America/Sao_Paulo'\n      }),\n      tempo: 0,\n      peso: null,\n      volume: null,\n      dataConclusao: null\n    });\n    setMostrarFormulario(false);\n    setPedidoParaEditar(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"formulario\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"empresa\",\n        children: \"Empresa *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"empresa\",\n        name: \"empresa\",\n        value: novoPedido.empresa,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          empresa: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numeroOS\",\n        children: \"N\\xFAmero da OS *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"numeroOS\",\n        name: \"numeroOS\",\n        value: novoPedido.numeroOS,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          numeroOS: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"codigoDesenho\",\n        children: \"C\\xF3digo do Desenho\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"codigoDesenho\",\n        name: \"codigoDesenho\",\n        value: novoPedido.codigoDesenho,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          codigoDesenho: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quantidadePedido\",\n        children: \"Quantidade Pedido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"quantidadePedido\",\n        name: \"quantidadePedido\",\n        value: novoPedido.quantidadePedido,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          quantidadePedido: e.target.value\n        }),\n        min: \"0\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quantidadeEntregue\",\n        children: \"Quantidade Entregue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"quantidadeEntregue\",\n        name: \"quantidadeEntregue\",\n        value: novoPedido.quantidadeEntregue,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          quantidadeEntregue: e.target.value\n        }),\n        min: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dataEntrada\",\n        children: \"Data de Entrada *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"dataEntrada\",\n        name: \"dataEntrada\",\n        value: novoPedido.dataEntrada,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          dataEntrada: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"previsaoEntrega\",\n        children: \"Previs\\xE3o de Entrega *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"previsaoEntrega\",\n        name: \"previsaoEntrega\",\n        value: novoPedido.previsaoEntrega,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          previsaoEntrega: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"responsavel\",\n        children: \"Respons\\xE1vel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"responsavel\",\n        name: \"responsavel\",\n        value: novoPedido.responsavel,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          responsavel: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"status\",\n        name: \"status\",\n        value: novoPedido.status,\n        onChange: e => {\n          const novoStatus = e.target.value;\n          setNovoPedido({\n            ...novoPedido,\n            status: novoStatus\n          });\n          if (pedidoParaEditar && moverParaAndamento) {\n            moverParaAndamento(pedidoParaEditar.id);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"novo\",\n          children: \"Novo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"andamento\",\n          children: \"Em Andamento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"concluido\",\n          children: \"Conclu\\xEDdo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: pedidoParaEditar ? 'Salvar Alterações' : 'Adicionar Pedido'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: resetForm,\n      children: \"Cancelar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_c = PedidoForm;\nexport default PedidoForm;\nvar _c;\n$RefreshReg$(_c, \"PedidoForm\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","PedidoForm","novoPedido","setNovoPedido","pedidoParaEditar","setPedidoParaEditar","setMostrarFormulario","setMensagem","carregarPedidos","setPedidos","setPedidosAndamento","setPedidosConcluidos","setMostrarModalPesoVolume","setPedidoParaConcluir","moverParaAndamento","handleSubmit","e","preventDefault","camposObrigatorios","erros","filter","campo","length","join","quantidadePedido","parseInt","quantidadeEntregueDigitada","quantidadeEntregue","novaQuantidadeEntregue","status","window","alert","pedidoParaEnviar","tempo","calcularTempo","Date","inicio","resposta","resetForm","put","id","pedidoAtualizado","data","dataConclusao","post","pedido","observacao","atualizarListas","novoPedidoAdicionado","error","_error$response","response","message","fim","toLocaleString","timeZone","inicioDate","fimDate","diffMs","prev","p","empresa","numeroOS","dataEntrada","previsaoEntrega","responsavel","codigoDesenho","peso","volume","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","onChange","target","required","min","novoStatus","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/producao-dashboard/FRONTEND/src/components/pedidoForm.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PedidoForm = ({\r\n  novoPedido,\r\n  setNovoPedido,\r\n  pedidoParaEditar,\r\n  setPedidoParaEditar,\r\n  setMostrarFormulario,\r\n  setMensagem,\r\n  carregarPedidos,\r\n  setPedidos,\r\n  setPedidosAndamento,\r\n  setPedidosConcluidos,\r\n  setMostrarModalPesoVolume,\r\n  setPedidoParaConcluir,\r\n  moverParaAndamento,\r\n}) => {\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const camposObrigatorios = ['empresa', 'numeroOS', 'dataEntrada', 'previsaoEntrega'];\r\n    const erros = camposObrigatorios.filter((campo) => !novoPedido[campo]);\r\n    if (erros.length > 0) {\r\n      setMensagem(`Preencha os campos obrigatórios: ${erros.join(', ')}`);\r\n      return;\r\n    }\r\n\r\n    const quantidadePedido = parseInt(novoPedido.quantidadePedido) || 0;\r\n    const quantidadeEntregueDigitada = parseInt(novoPedido.quantidadeEntregue) || 0;\r\n\r\n    let novaQuantidadeEntregue;\r\n    if (pedidoParaEditar && novoPedido.status === 'andamento') {\r\n      novaQuantidadeEntregue = (pedidoParaEditar.quantidadeEntregue || 0) + quantidadeEntregueDigitada;\r\n    } else {\r\n      novaQuantidadeEntregue = quantidadeEntregueDigitada;\r\n    }\r\n\r\n    if (novaQuantidadeEntregue > quantidadePedido) {\r\n      window.alert('A quantidade entregue não pode exceder a quantidade pedida!');\r\n      return;\r\n    }\r\n\r\n    const pedidoParaEnviar = {\r\n      ...novoPedido,\r\n      quantidadePedido,\r\n      quantidadeEntregue: novaQuantidadeEntregue,\r\n      tempo: calcularTempo(new Date(novoPedido.inicio)),\r\n    };\r\n\r\n    try {\r\n      let resposta;\r\n      if (pedidoParaEditar) {\r\n        if (novoPedido.status === 'andamento') {\r\n          setPedidoParaConcluir({ ...pedidoParaEnviar, quantidadeEntregue: novaQuantidadeEntregue });\r\n          setMostrarModalPesoVolume(true);\r\n          setMensagem('Preencha peso e volume para salvar a edição.');\r\n          resetForm();\r\n          return;\r\n        }\r\n        resposta = await axios.put(`http://localhost:5000/pedidos/${pedidoParaEditar.id}`, pedidoParaEnviar);\r\n        const pedidoAtualizado = { ...resposta.data, tempo: calcularTempo(new Date(resposta.data.inicio), resposta.data.dataConclusao ? new Date(resposta.data.dataConclusao) : null) };\r\n        await axios.post('http://localhost:5000/enviar-email', { pedido: pedidoAtualizado, observacao: '' });\r\n        atualizarListas(pedidoAtualizado);\r\n        setMensagem('Pedido atualizado e e-mail enviado!');\r\n        resetForm();\r\n      } else {\r\n        resposta = await axios.post('http://localhost:5000/pedidos', pedidoParaEnviar);\r\n        const novoPedidoAdicionado = { ...resposta.data, tempo: calcularTempo(new Date(resposta.data.inicio)) };\r\n        await axios.post('http://localhost:5000/enviar-email', { pedido: novoPedidoAdicionado, observacao: '' });\r\n        atualizarListas(novoPedidoAdicionado);\r\n        setMensagem('Pedido adicionado e e-mail enviado!');\r\n        resetForm();\r\n      }\r\n    } catch (error) {\r\n      setMensagem('Erro ao processar pedido: ' + (error.response?.data.message || error.message));\r\n      await carregarPedidos();\r\n    }\r\n  };\r\n\r\n  const calcularTempo = (inicio, fim = new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' })) => {\r\n    const inicioDate = new Date(inicio);\r\n    const fimDate = new Date(fim);\r\n    const diffMs = fimDate - inicioDate;\r\n    return diffMs < 0 ? 0 : diffMs / (1000 * 60 * 60);\r\n  };\r\n\r\n  const atualizarListas = (pedido) => {\r\n    if (pedido.status === 'novo') {\r\n      setPedidosAndamento((prev) => [...prev.filter((p) => p.id !== pedido.id), pedido]);\r\n      setPedidos((prev) => prev.filter((p) => p.id !== pedido.id));\r\n      setPedidosConcluidos((prev) => prev.filter((p) => p.id !== pedido.id));\r\n    } else if (pedido.status === 'andamento') {\r\n      setPedidos((prev) => [...prev.filter((p) => p.id !== pedido.id), pedido]);\r\n      setPedidosAndamento((prev) => prev.filter((p) => p.id !== pedido.id));\r\n      setPedidosConcluidos((prev) => prev.filter((p) => p.id !== pedido.id));\r\n    } else if (pedido.status === 'concluido') {\r\n      setPedidosConcluidos((prev) => [...prev.filter((p) => p.id !== pedido.id), pedido]);\r\n      setPedidos((prev) => prev.filter((p) => p.id !== pedido.id));\r\n      setPedidosAndamento((prev) => prev.filter((p) => p.id !== pedido.id));\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setNovoPedido({\r\n      empresa: '',\r\n      numeroOS: '',\r\n      dataEntrada: '',\r\n      previsaoEntrega: '',\r\n      responsavel: '',\r\n      codigoDesenho: '',\r\n      quantidadePedido: '',\r\n      quantidadeEntregue: '',\r\n      status: 'novo',\r\n      inicio: new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' }),\r\n      tempo: 0,\r\n      peso: null,\r\n      volume: null,\r\n      dataConclusao: null,\r\n    });\r\n    setMostrarFormulario(false);\r\n    setPedidoParaEditar(null);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"formulario\">\r\n      <div>\r\n        <label htmlFor=\"empresa\">Empresa *</label>\r\n        <input type=\"text\" id=\"empresa\" name=\"empresa\" value={novoPedido.empresa} onChange={(e) => setNovoPedido({ ...novoPedido, empresa: e.target.value })} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"numeroOS\">Número da OS *</label>\r\n        <input type=\"text\" id=\"numeroOS\" name=\"numeroOS\" value={novoPedido.numeroOS} onChange={(e) => setNovoPedido({ ...novoPedido, numeroOS: e.target.value })} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"codigoDesenho\">Código do Desenho</label>\r\n        <input type=\"text\" id=\"codigoDesenho\" name=\"codigoDesenho\" value={novoPedido.codigoDesenho} onChange={(e) => setNovoPedido({ ...novoPedido, codigoDesenho: e.target.value })} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"quantidadePedido\">Quantidade Pedido</label>\r\n        <input type=\"number\" id=\"quantidadePedido\" name=\"quantidadePedido\" value={novoPedido.quantidadePedido} onChange={(e) => setNovoPedido({ ...novoPedido, quantidadePedido: e.target.value })} min=\"0\" required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"quantidadeEntregue\">Quantidade Entregue</label>\r\n        <input type=\"number\" id=\"quantidadeEntregue\" name=\"quantidadeEntregue\" value={novoPedido.quantidadeEntregue} onChange={(e) => setNovoPedido({ ...novoPedido, quantidadeEntregue: e.target.value })} min=\"0\" />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"dataEntrada\">Data de Entrada *</label>\r\n        <input type=\"date\" id=\"dataEntrada\" name=\"dataEntrada\" value={novoPedido.dataEntrada} onChange={(e) => setNovoPedido({ ...novoPedido, dataEntrada: e.target.value })} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"previsaoEntrega\">Previsão de Entrega *</label>\r\n        <input type=\"date\" id=\"previsaoEntrega\" name=\"previsaoEntrega\" value={novoPedido.previsaoEntrega} onChange={(e) => setNovoPedido({ ...novoPedido, previsaoEntrega: e.target.value })} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"responsavel\">Responsável</label>\r\n        <input type=\"text\" id=\"responsavel\" name=\"responsavel\" value={novoPedido.responsavel} onChange={(e) => setNovoPedido({ ...novoPedido, responsavel: e.target.value })} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"status\">Status</label>\r\n        <select id=\"status\" name=\"status\" value={novoPedido.status} onChange={(e) => {\r\n          const novoStatus = e.target.value;\r\n          setNovoPedido({ ...novoPedido, status: novoStatus });\r\n          if (pedidoParaEditar && moverParaAndamento) {\r\n            moverParaAndamento(pedidoParaEditar.id);\r\n          }\r\n        }}>\r\n          <option value=\"novo\">Novo</option>\r\n          <option value=\"andamento\">Em Andamento</option>\r\n          <option value=\"concluido\">Concluído</option>\r\n        </select>\r\n      </div>\r\n      <button type=\"submit\">{pedidoParaEditar ? 'Salvar Alterações' : 'Adicionar Pedido'}</button>\r\n      <button type=\"button\" onClick={resetForm}>Cancelar</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PedidoForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
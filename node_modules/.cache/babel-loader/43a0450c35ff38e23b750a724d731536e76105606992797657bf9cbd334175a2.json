{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\producao-dashboard\\\\FRONTEND\\\\src\\\\components\\\\ModalPesoVolume.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalPesoVolume = ({\n  pedidoParaConcluir,\n  peso,\n  setPeso,\n  volume,\n  setVolume,\n  setMostrarModalPesoVolume,\n  setPedidoParaConcluir,\n  setPedidos,\n  setPedidosConcluidos,\n  setMensagem,\n  carregarPedidos\n}) => {\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validação básica dos campos\n    if (peso && isNaN(parseFloat(peso))) {\n      setMensagem('Peso deve ser um número válido.');\n      return;\n    }\n    if (volume && isNaN(parseFloat(volume))) {\n      setMensagem('Volume deve ser um número válido.');\n      return;\n    }\n\n    // Preparar o pedido atualizado com peso e volume\n    const pedidoAtualizado = {\n      ...pedidoParaConcluir,\n      peso: peso ? parseFloat(peso) : null,\n      volume: volume ? parseFloat(volume) : null,\n      status: 'concluido',\n      // Garante o status correto\n      dataConclusao: pedidoParaConcluir.dataConclusao || new Date().toLocaleString('pt-BR', {\n        timeZone: 'America/Sao_Paulo'\n      }),\n      // Confirma data de conclusão\n      tempo: pedidoParaConcluir.tempo // Mantém o tempo calculado\n    };\n    try {\n      // Atualizar o pedido no backend\n      const resposta = await axios.put(`http://localhost:5000/pedidos/${pedidoParaConcluir.id}`, pedidoAtualizado);\n      const pedidoConcluido = resposta.data;\n\n      // Enviar e-mail de confirmação\n      await axios.post('http://localhost:5000/enviar-email', {\n        pedido: pedidoConcluido,\n        observacao: `O pedido ${pedidoConcluido.numeroOS} foi concluído com peso ${peso || 'não informado'} e volume ${volume || 'não informado'}.`\n      });\n\n      // Atualizar as listas no frontend\n      setPedidos(prev => prev.filter(p => p.id !== pedidoConcluido.id));\n      setPedidosConcluidos(prev => [...prev.filter(p => p.id !== pedidoConcluido.id), pedidoConcluido]);\n\n      // Exibir mensagem de sucesso\n      setMensagem('Pedido concluído com sucesso e e-mail enviado!');\n\n      // Limpar o modal\n      setMostrarModalPesoVolume(false);\n      setPedidoParaConcluir(null);\n      setPeso('');\n      setVolume('');\n    } catch (error) {\n      console.error('Erro ao concluir pedido:', error);\n      setMensagem('Erro ao concluir pedido: ' + (error.response ? error.response.data.message : error.message));\n      await carregarPedidos(); // Recarrega os pedidos em caso de erro\n    }\n  };\n  const handleCancel = () => {\n    setMostrarModalPesoVolume(false);\n    setPeso('');\n    setVolume('');\n    setPedidoParaConcluir(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Concluir Pedido \", (pedidoParaConcluir === null || pedidoParaConcluir === void 0 ? void 0 : pedidoParaConcluir.numeroOS) || '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"peso\",\n            children: \"Peso (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"peso\",\n            name: \"peso\",\n            value: peso,\n            onChange: e => setPeso(e.target.value),\n            placeholder: \"Digite o peso\",\n            step: \"0.01\",\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"volume\",\n            children: \"Volume (m\\xB3)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"volume\",\n            name: \"volume\",\n            value: volume,\n            onChange: e => setVolume(e.target.value),\n            placeholder: \"Digite o volume\",\n            step: \"0.01\",\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-enviar\",\n            type: \"submit\",\n            children: \"Concluir Pedido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-cancelar\",\n            type: \"button\",\n            onClick: handleCancel,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_c = ModalPesoVolume;\nexport default ModalPesoVolume;\nvar _c;\n$RefreshReg$(_c, \"ModalPesoVolume\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","ModalPesoVolume","pedidoParaConcluir","peso","setPeso","volume","setVolume","setMostrarModalPesoVolume","setPedidoParaConcluir","setPedidos","setPedidosConcluidos","setMensagem","carregarPedidos","handleSubmit","e","preventDefault","isNaN","parseFloat","pedidoAtualizado","status","dataConclusao","Date","toLocaleString","timeZone","tempo","resposta","put","id","pedidoConcluido","data","post","pedido","observacao","numeroOS","prev","filter","p","error","console","response","message","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","name","value","onChange","target","placeholder","step","min","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/producao-dashboard/FRONTEND/src/components/ModalPesoVolume.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ModalPesoVolume = ({\r\n  pedidoParaConcluir,\r\n  peso,\r\n  setPeso,\r\n  volume,\r\n  setVolume,\r\n  setMostrarModalPesoVolume,\r\n  setPedidoParaConcluir,\r\n  setPedidos,\r\n  setPedidosConcluidos,\r\n  setMensagem,\r\n  carregarPedidos,\r\n}) => {\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validação básica dos campos\r\n    if (peso && isNaN(parseFloat(peso))) {\r\n      setMensagem('Peso deve ser um número válido.');\r\n      return;\r\n    }\r\n    if (volume && isNaN(parseFloat(volume))) {\r\n      setMensagem('Volume deve ser um número válido.');\r\n      return;\r\n    }\r\n\r\n    // Preparar o pedido atualizado com peso e volume\r\n    const pedidoAtualizado = {\r\n      ...pedidoParaConcluir,\r\n      peso: peso ? parseFloat(peso) : null,\r\n      volume: volume ? parseFloat(volume) : null,\r\n      status: 'concluido', // Garante o status correto\r\n      dataConclusao: pedidoParaConcluir.dataConclusao || new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' }), // Confirma data de conclusão\r\n      tempo: pedidoParaConcluir.tempo, // Mantém o tempo calculado\r\n    };\r\n\r\n    try {\r\n      // Atualizar o pedido no backend\r\n      const resposta = await axios.put(`http://localhost:5000/pedidos/${pedidoParaConcluir.id}`, pedidoAtualizado);\r\n      const pedidoConcluido = resposta.data;\r\n\r\n      // Enviar e-mail de confirmação\r\n      await axios.post('http://localhost:5000/enviar-email', { \r\n        pedido: pedidoConcluido, \r\n        observacao: `O pedido ${pedidoConcluido.numeroOS} foi concluído com peso ${peso || 'não informado'} e volume ${volume || 'não informado'}.` \r\n      });\r\n\r\n      // Atualizar as listas no frontend\r\n      setPedidos((prev) => prev.filter((p) => p.id !== pedidoConcluido.id));\r\n      setPedidosConcluidos((prev) => [...prev.filter((p) => p.id !== pedidoConcluido.id), pedidoConcluido]);\r\n      \r\n      // Exibir mensagem de sucesso\r\n      setMensagem('Pedido concluído com sucesso e e-mail enviado!');\r\n\r\n      // Limpar o modal\r\n      setMostrarModalPesoVolume(false);\r\n      setPedidoParaConcluir(null);\r\n      setPeso('');\r\n      setVolume('');\r\n    } catch (error) {\r\n      console.error('Erro ao concluir pedido:', error);\r\n      setMensagem('Erro ao concluir pedido: ' + (error.response ? error.response.data.message : error.message));\r\n      await carregarPedidos(); // Recarrega os pedidos em caso de erro\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setMostrarModalPesoVolume(false);\r\n    setPeso('');\r\n    setVolume('');\r\n    setPedidoParaConcluir(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h3>Concluir Pedido {pedidoParaConcluir?.numeroOS || ''}</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"peso\">Peso (kg)</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"peso\"\r\n              name=\"peso\"\r\n              value={peso}\r\n              onChange={(e) => setPeso(e.target.value)}\r\n              placeholder=\"Digite o peso\"\r\n              step=\"0.01\"\r\n              min=\"0\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"volume\">Volume (m³)</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"volume\"\r\n              name=\"volume\"\r\n              value={volume}\r\n              onChange={(e) => setVolume(e.target.value)}\r\n              placeholder=\"Digite o volume\"\r\n              step=\"0.01\"\r\n              min=\"0\"\r\n            />\r\n          </div>\r\n          <div className=\"modal-buttons\">\r\n            <button className=\"btn-enviar\" type=\"submit\">Concluir Pedido</button>\r\n            <button className=\"btn-cancelar\" type=\"button\" onClick={handleCancel}>Cancelar</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalPesoVolume;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\producao-dashboard\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport debounce from 'lodash/debounce';\nimport './App.css';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport PedidoForm from './components/pedidoForm';\nimport PedidoTable from './components/PedidoTable';\nimport ModalObservacao from './components/ModalObservacao';\nimport ModalPesoVolume from './components/ModalPesoVolume';\nimport Busca from './components/Busca';\n\n// Função para formatar datas no formato YYYY-MM-DD HH:MM:SS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDateToLocalISO = (date, context = 'unknown') => {\n  const d = date ? new Date(date) : new Date();\n  if (isNaN(d.getTime()) || typeof date === 'string' && date.includes('undefined')) {\n    console.warn(`[formatDateToLocalISO - ${context}] Data inválida detectada, usando data atual:`, date);\n    return new Date().toISOString().slice(0, 19).replace('T', ' ');\n  }\n  const isoString = d.toISOString().slice(0, 19).replace('T', ' ');\n  console.log(`[formatDateToLocalISO - ${context}] Data formatada: ${isoString}`);\n  return isoString;\n};\nfunction App() {\n  _s();\n  const [pedidos, setPedidos] = useState([]);\n  const [pedidosAndamento, setPedidosAndamento] = useState([]);\n  const [pedidosConcluidos, setPedidosConcluidos] = useState([]);\n  const [novoPedido, setNovoPedido] = useState(() => {\n    const inicioInicial = formatDateToLocalISO(new Date(), 'novoPedido init');\n    console.log('Inicializando novoPedido com inicio:', inicioInicial);\n    return {\n      empresa: '',\n      numeroOS: '',\n      dataEntrada: '',\n      previsaoEntrega: '',\n      responsavel: '',\n      status: 'novo',\n      inicio: inicioInicial,\n      tempo: 0,\n      peso: null,\n      volume: null,\n      dataConclusao: null,\n      pausado: 0,\n      tempoPausado: 0,\n      dataPausada: null,\n      itens: [{\n        codigoDesenho: '',\n        quantidadePedido: ''\n      }]\n    };\n  });\n  const [pedidoParaEditar, setPedidoParaEditar] = useState(null);\n  const [mensagem, setMensagem] = useState('');\n  const [busca, setBusca] = useState('');\n  const [mostrarModal, setMostrarModal] = useState(false);\n  const [pedidoSelecionado, setPedidoSelecionado] = useState(null);\n  const [observacao, setObservacao] = useState('');\n  const [peso, setPeso] = useState('');\n  const [volume, setVolume] = useState('');\n  const [mostrarModalPesoVolume, setMostrarModalPesoVolume] = useState(false);\n  const [pedidoParaConcluir, setPedidoParaConcluir] = useState(null);\n  const [mostrarFormulario, setMostrarFormulario] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const isFetching = useRef(false);\n  const lastFetchTimestamp = useRef(0);\n  const fetchPedidos = async (dados = null) => {\n    const now = Date.now();\n    if (now - lastFetchTimestamp.current < 5000 && !dados) {\n      console.log('Ignorando chamada repetida a fetchPedidos');\n      return;\n    }\n    if (isFetching.current) return;\n    isFetching.current = true;\n    try {\n      const response = dados ? {\n        data: dados\n      } : await axios.get('http://localhost:5000/pedidos');\n      const pedidosAtualizados = response.data.map(pedido => {\n        const inicioValido = formatDateToLocalISO(pedido.inicio, `fetchPedidos - pedido ${pedido.id}`);\n        const dataConclusaoValida = pedido.dataConclusao ? formatDateToLocalISO(pedido.dataConclusao, `fetchPedidos - pedido ${pedido.id}`) : null;\n        return {\n          ...pedido,\n          inicio: inicioValido,\n          dataConclusao: dataConclusaoValida,\n          itens: Array.isArray(pedido.itens) ? pedido.itens : [],\n          tempo: pedido.status === 'concluido' && dataConclusaoValida ? calcularTempo(inicioValido, dataConclusaoValida) : pedido.status === 'andamento' && !pedido.pausado ? (pedido.tempoPausado || 0) + calcularTempo(inicioValido) : pedido.tempoPausado || 0\n        };\n      });\n      setPedidos(pedidosAtualizados.filter(p => p.status === 'andamento'));\n      setPedidosAndamento(pedidosAtualizados.filter(p => p.status === 'novo'));\n      setPedidosConcluidos(pedidosAtualizados.filter(p => p.status === 'concluido'));\n      setIsLoading(false);\n      lastFetchTimestamp.current = now;\n    } catch (error) {\n      console.error('Erro ao carregar pedidos:', error);\n      setMensagem('Erro ao carregar pedidos: ' + error.message);\n      setIsLoading(false);\n    } finally {\n      isFetching.current = false;\n    }\n  };\n  const carregarPedidos = useCallback(debounce(dados => {\n    fetchPedidos(dados);\n  }, 1000), []);\n  useEffect(() => {\n    carregarPedidos();\n    return () => {\n      carregarPedidos.cancel();\n    };\n  }, [carregarPedidos]);\n  useEffect(() => {\n    const intervalo = setInterval(() => {\n      setPedidos(prev => prev.map(p => {\n        const inicioValido = p.inicio && !p.inicio.includes('undefined') ? p.inicio : formatDateToLocalISO(new Date(), 'intervalo');\n        return {\n          ...p,\n          tempo: p.status === 'andamento' && !p.pausado ? (p.tempoPausado || 0) + calcularTempo(inicioValido) : p.tempo\n        };\n      }));\n    }, 60000);\n    return () => clearInterval(intervalo);\n  }, []);\n  const parseDate = dateStr => {\n    if (!dateStr || typeof dateStr !== 'string' || dateStr.includes('undefined')) {\n      console.warn('Data inválida fornecida em parseDate, usando data atual:', dateStr);\n      return new Date();\n    }\n    const parsedDate = new Date(dateStr);\n    if (isNaN(parsedDate)) {\n      console.warn('Data inválida em parseDate, usando data atual:', dateStr);\n      return new Date();\n    }\n    return parsedDate;\n  };\n  const calcularTempo = (inicio, fim = formatDateToLocalISO(new Date(), 'calcularTempo')) => {\n    const inicioDate = parseDate(inicio);\n    const fimDate = parseDate(fim);\n    if (isNaN(inicioDate) || isNaN(fimDate)) {\n      console.error('Data inválida em calcularTempo:', {\n        inicio,\n        fim\n      });\n      return 0;\n    }\n    const diffMs = fimDate - inicioDate;\n    return diffMs < 0 ? 0 : diffMs / (1000 * 60 * 60);\n  };\n  const exportarPDF = () => {\n    const doc = new jsPDF();\n    const headersAndamento = ['Empresa', 'Nº OS', 'Data Entrada', 'Previsão', 'Responsável', 'Início', 'Tempo (h)'];\n    const headersNovos = ['Empresa', 'Nº OS', 'Data Entrada', 'Previsão', 'Responsável', 'Início', 'Tempo (h)'];\n    const headersConcluidos = ['Empresa', 'Nº OS', 'Data Entrada', 'Previsão', 'Responsável', 'Início e Conclusão', 'Tempo Total (h)'];\n    const addTable = (title, data, headers) => {\n      doc.text(title, 14, 20);\n      autoTable(doc, {\n        head: [headers],\n        body: data.map(p => [p.empresa, p.numeroOS, p.dataEntrada ? new Date(p.dataEntrada).toLocaleDateString('pt-BR') : 'Não informado', p.previsaoEntrega ? new Date(p.previsaoEntrega).toLocaleDateString('pt-BR') : 'Não informado', p.responsavel, p.status === 'concluido' ? `${formatarDataHora(p.inicio)}\\n${formatarDataHora(p.dataConclusao) || 'Não concluído'}` : formatarDataHora(p.inicio), formatarTempo(p.tempo)]),\n        startY: 30\n      });\n    };\n    addTable('Pedidos em Andamento', pedidos, headersAndamento);\n    doc.addPage();\n    addTable('Pedidos Novos', pedidosAndamento, headersNovos);\n    doc.addPage();\n    addTable('Pedidos Concluídos', pedidosConcluidos, headersConcluidos);\n    doc.save('pedidos_controle_producao.pdf');\n  };\n  const formatarDataHora = data => {\n    return data ? parseDate(data).toLocaleString('pt-BR', {\n      timeZone: 'America/Sao_Paulo'\n    }) : 'Não informado';\n  };\n  const formatarTempo = tempo => {\n    if (isNaN(tempo)) return '0 minutos';\n    const horas = Math.floor(tempo);\n    const minutos = Math.round((tempo - horas) * 60);\n    return `${horas > 0 ? `${horas} hora${horas > 1 ? 's' : ''} e ` : ''}${minutos} minuto${minutos !== 1 ? 's' : ''}`;\n  };\n  const moverParaAndamento = async id => {\n    const pedido = [...pedidos, ...pedidosAndamento, ...pedidosConcluidos].find(p => p.id === id);\n    if (pedido) {\n      const novoInicio = formatDateToLocalISO(new Date(), 'moverParaAndamento');\n      const pedidoAtualizado = {\n        ...pedido,\n        status: 'andamento',\n        inicio: novoInicio,\n        tempo: 0,\n        tempoPausado: 0,\n        dataPausada: null,\n        pausado: 0\n      };\n      try {\n        console.log('Enviando pedido atualizado para andamento:', pedidoAtualizado);\n        const resposta = await axios.put(`http://localhost:5000/pedidos/${id}`, pedidoAtualizado);\n        const pedidoMovido = {\n          ...resposta.data,\n          tempo: 0\n        };\n        await axios.post('http://localhost:5000/enviar-email', {\n          pedido: pedidoMovido,\n          observacao: ''\n        });\n        setPedidosAndamento(prev => prev.filter(p => p.id !== id));\n        setPedidos(prev => [...prev.filter(p => p.id !== id), pedidoMovido]);\n        setPedidosConcluidos(prev => prev.filter(p => p.id !== id));\n        setMensagem('Pedido movido para \"Em Andamento\" e e-mail enviado.');\n        carregarPedidos();\n      } catch (error) {\n        setMensagem('Erro ao mover pedido: ' + (error.response ? error.response.data.message : error.message));\n        carregarPedidos();\n      }\n    }\n  };\n  const pausarPedido = async id => {\n    const pedido = pedidos.find(p => p.id === id);\n    if (pedido) {\n      const tempoAtual = (pedido.tempoPausado || 0) + calcularTempo(pedido.dataPausada || pedido.inicio);\n      const dataPausada = formatDateToLocalISO(new Date(), 'pausarPedido');\n      const pedidoPausado = {\n        ...pedido,\n        pausado: 1,\n        tempoPausado: tempoAtual,\n        dataPausada,\n        tempo: tempoAtual\n      };\n      try {\n        await axios.put(`http://localhost:5000/pedidos/${id}`, pedidoPausado);\n        setPedidos(prev => prev.map(p => p.id === id ? pedidoPausado : p));\n        setMensagem('Pedido pausado com sucesso.');\n        carregarPedidos();\n      } catch (error) {\n        setMensagem('Erro ao pausar pedido: ' + error.message);\n        carregarPedidos();\n      }\n    }\n  };\n  const retomarPedido = async id => {\n    const pedido = pedidos.find(p => p.id === id);\n    if (pedido) {\n      const dataRetomada = formatDateToLocalISO(new Date(), 'retomarPedido');\n      const pedidoRetomado = {\n        ...pedido,\n        pausado: 0,\n        dataPausada: dataRetomada\n      };\n      try {\n        await axios.put(`http://localhost:5000/pedidos/${id}`, pedidoRetomado);\n        setPedidos(prev => prev.map(p => p.id === id ? {\n          ...pedidoRetomado,\n          tempo: pedido.tempoPausado || 0\n        } : p));\n        setMensagem('Pedido retomado com sucesso.');\n        carregarPedidos();\n      } catch (error) {\n        setMensagem('Erro ao retomar pedido: ' + error.message);\n        carregarPedidos();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logoNF.jpg\",\n        alt: \"Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Controle de Produ\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-desenho\",\n        onClick: () => window.open('https://drive.google.com/drive/folders/1vzemVbLeotHD0xirxUPsvNb9qBccQFcd?usp=sharing', '_blank'),\n        children: \"DESENHO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), mensagem && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: mensagem.includes('Erro') ? 'erro' : 'sucesso',\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 20\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando pedidos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-adicionar-pedido\",\n      onClick: () => setMostrarFormulario(true),\n      children: \"Adicionar Pedido Novo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), mostrarFormulario && /*#__PURE__*/_jsxDEV(PedidoForm, {\n      novoPedido: novoPedido,\n      setNovoPedido: setNovoPedido,\n      pedidoParaEditar: pedidoParaEditar,\n      setPedidoParaEditar: setPedidoParaEditar,\n      setMostrarFormulario: setMostrarFormulario,\n      setMensagem: setMensagem,\n      carregarPedidos: carregarPedidos,\n      setPedidos: setPedidos,\n      setPedidosAndamento: setPedidosAndamento,\n      setPedidosConcluidos: setPedidosConcluidos,\n      setMostrarModalPesoVolume: setMostrarModalPesoVolume,\n      setPedidoParaConcluir: setPedidoParaConcluir,\n      moverParaAndamento: moverParaAndamento\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Busca, {\n      busca: busca,\n      setBusca: setBusca,\n      carregarPedidos: carregarPedidos,\n      todosPedidos: [...pedidos, ...pedidosAndamento, ...pedidosConcluidos],\n      exportarPDF: exportarPDF\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pedidos em Andamento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PedidoTable, {\n      pedidos: pedidos,\n      tipo: \"andamento\",\n      setPedidos: setPedidos,\n      setPedidosAndamento: setPedidosAndamento,\n      setPedidosConcluidos: setPedidosConcluidos,\n      setMensagem: setMensagem,\n      setPedidoParaEditar: setPedidoParaEditar,\n      setNovoPedido: setNovoPedido,\n      setMostrarFormulario: setMostrarFormulario,\n      setMostrarModal: setMostrarModal,\n      setPedidoSelecionado: setPedidoSelecionado,\n      setMostrarModalPesoVolume: setMostrarModalPesoVolume,\n      setPedidoParaConcluir: setPedidoParaConcluir,\n      busca: busca,\n      carregarPedidos: carregarPedidos,\n      moverParaAndamento: moverParaAndamento,\n      pausarPedido: pausarPedido,\n      retomarPedido: retomarPedido\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pedidos Novos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PedidoTable, {\n      pedidos: pedidosAndamento,\n      tipo: \"novo\",\n      setPedidos: setPedidos,\n      setPedidosAndamento: setPedidosAndamento,\n      setPedidosConcluidos: setPedidosConcluidos,\n      setMensagem: setMensagem,\n      setPedidoParaEditar: setPedidoParaEditar,\n      setNovoPedido: setNovoPedido,\n      setMostrarFormulario: setMostrarFormulario,\n      setMostrarModal: setMostrarModal,\n      setPedidoSelecionado: setPedidoSelecionado,\n      setMostrarModalPesoVolume: setMostrarModalPesoVolume,\n      setPedidoParaConcluir: setPedidoParaConcluir,\n      busca: busca,\n      carregarPedidos: carregarPedidos,\n      moverParaAndamento: moverParaAndamento\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pedidos Conclu\\xEDdos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PedidoTable, {\n      pedidos: pedidosConcluidos,\n      tipo: \"concluido\",\n      setPedidos: setPedidos,\n      setPedidosAndamento: setPedidosAndamento,\n      setPedidosConcluidos: setPedidosConcluidos,\n      setMensagem: setMensagem,\n      setPedidoParaEditar: setPedidoParaEditar,\n      setNovoPedido: setNovoPedido,\n      setMostrarFormulario: setMostrarFormulario,\n      setMostrarModal: setMostrarModal,\n      setPedidoSelecionado: setPedidoSelecionado,\n      setMostrarModalPesoVolume: setMostrarModalPesoVolume,\n      setPedidoParaConcluir: setPedidoParaConcluir,\n      busca: busca,\n      carregarPedidos: carregarPedidos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), mostrarModal && /*#__PURE__*/_jsxDEV(ModalObservacao, {\n      pedidoSelecionado: pedidoSelecionado,\n      observacao: observacao,\n      setObservacao: setObservacao,\n      setMostrarModal: setMostrarModal,\n      setMensagem: setMensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }, this), mostrarModalPesoVolume && /*#__PURE__*/_jsxDEV(ModalPesoVolume, {\n      pedidoParaConcluir: pedidoParaConcluir,\n      peso: peso,\n      setPeso: setPeso,\n      volume: volume,\n      setVolume: setVolume,\n      setMostrarModalPesoVolume: setMostrarModalPesoVolume,\n      setPedidoParaConcluir: setPedidoParaConcluir,\n      setPedidos: setPedidos,\n      setPedidosConcluidos: setPedidosConcluidos,\n      setMensagem: setMensagem,\n      carregarPedidos: carregarPedidos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MXS4rdH+gfwSIIAwqxzsLq39k7g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","axios","debounce","jsPDF","autoTable","PedidoForm","PedidoTable","ModalObservacao","ModalPesoVolume","Busca","jsxDEV","_jsxDEV","formatDateToLocalISO","date","context","d","Date","isNaN","getTime","includes","console","warn","toISOString","slice","replace","isoString","log","App","_s","pedidos","setPedidos","pedidosAndamento","setPedidosAndamento","pedidosConcluidos","setPedidosConcluidos","novoPedido","setNovoPedido","inicioInicial","empresa","numeroOS","dataEntrada","previsaoEntrega","responsavel","status","inicio","tempo","peso","volume","dataConclusao","pausado","tempoPausado","dataPausada","itens","codigoDesenho","quantidadePedido","pedidoParaEditar","setPedidoParaEditar","mensagem","setMensagem","busca","setBusca","mostrarModal","setMostrarModal","pedidoSelecionado","setPedidoSelecionado","observacao","setObservacao","setPeso","setVolume","mostrarModalPesoVolume","setMostrarModalPesoVolume","pedidoParaConcluir","setPedidoParaConcluir","mostrarFormulario","setMostrarFormulario","isLoading","setIsLoading","isFetching","lastFetchTimestamp","fetchPedidos","dados","now","current","response","data","get","pedidosAtualizados","map","pedido","inicioValido","id","dataConclusaoValida","Array","isArray","calcularTempo","filter","p","error","message","carregarPedidos","cancel","intervalo","setInterval","prev","clearInterval","parseDate","dateStr","parsedDate","fim","inicioDate","fimDate","diffMs","exportarPDF","doc","headersAndamento","headersNovos","headersConcluidos","addTable","title","headers","text","head","body","toLocaleDateString","formatarDataHora","formatarTempo","startY","addPage","save","toLocaleString","timeZone","horas","Math","floor","minutos","round","moverParaAndamento","find","novoInicio","pedidoAtualizado","resposta","put","pedidoMovido","post","pausarPedido","tempoAtual","pedidoPausado","retomarPedido","dataRetomada","pedidoRetomado","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","open","todosPedidos","tipo","_c","$RefreshReg$"],"sources":["C:/Users/User/producao-dashboard/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport debounce from 'lodash/debounce';\nimport './App.css';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport PedidoForm from './components/pedidoForm';\nimport PedidoTable from './components/PedidoTable';\nimport ModalObservacao from './components/ModalObservacao';\nimport ModalPesoVolume from './components/ModalPesoVolume';\nimport Busca from './components/Busca';\n\n// Função para formatar datas no formato YYYY-MM-DD HH:MM:SS\nconst formatDateToLocalISO = (date, context = 'unknown') => {\n  const d = date ? new Date(date) : new Date();\n  if (isNaN(d.getTime()) || (typeof date === 'string' && date.includes('undefined'))) {\n    console.warn(`[formatDateToLocalISO - ${context}] Data inválida detectada, usando data atual:`, date);\n    return new Date().toISOString().slice(0, 19).replace('T', ' ');\n  }\n  const isoString = d.toISOString().slice(0, 19).replace('T', ' ');\n  console.log(`[formatDateToLocalISO - ${context}] Data formatada: ${isoString}`);\n  return isoString;\n};\n\nfunction App() {\n  const [pedidos, setPedidos] = useState([]);\n  const [pedidosAndamento, setPedidosAndamento] = useState([]);\n  const [pedidosConcluidos, setPedidosConcluidos] = useState([]);\n  const [novoPedido, setNovoPedido] = useState(() => {\n    const inicioInicial = formatDateToLocalISO(new Date(), 'novoPedido init');\n    console.log('Inicializando novoPedido com inicio:', inicioInicial);\n    return {\n      empresa: '',\n      numeroOS: '',\n      dataEntrada: '',\n      previsaoEntrega: '',\n      responsavel: '',\n      status: 'novo',\n      inicio: inicioInicial,\n      tempo: 0,\n      peso: null,\n      volume: null,\n      dataConclusao: null,\n      pausado: 0,\n      tempoPausado: 0,\n      dataPausada: null,\n      itens: [{ codigoDesenho: '', quantidadePedido: '' }],\n    };\n  });\n  const [pedidoParaEditar, setPedidoParaEditar] = useState(null);\n  const [mensagem, setMensagem] = useState('');\n  const [busca, setBusca] = useState('');\n  const [mostrarModal, setMostrarModal] = useState(false);\n  const [pedidoSelecionado, setPedidoSelecionado] = useState(null);\n  const [observacao, setObservacao] = useState('');\n  const [peso, setPeso] = useState('');\n  const [volume, setVolume] = useState('');\n  const [mostrarModalPesoVolume, setMostrarModalPesoVolume] = useState(false);\n  const [pedidoParaConcluir, setPedidoParaConcluir] = useState(null);\n  const [mostrarFormulario, setMostrarFormulario] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const isFetching = useRef(false);\n  const lastFetchTimestamp = useRef(0);\n\n  const fetchPedidos = async (dados = null) => {\n    const now = Date.now();\n    if (now - lastFetchTimestamp.current < 5000 && !dados) {\n      console.log('Ignorando chamada repetida a fetchPedidos');\n      return;\n    }\n\n    if (isFetching.current) return;\n    isFetching.current = true;\n    try {\n      const response = dados ? { data: dados } : await axios.get('http://localhost:5000/pedidos');\n      const pedidosAtualizados = response.data.map((pedido) => {\n        const inicioValido = formatDateToLocalISO(pedido.inicio, `fetchPedidos - pedido ${pedido.id}`);\n        const dataConclusaoValida = pedido.dataConclusao\n          ? formatDateToLocalISO(pedido.dataConclusao, `fetchPedidos - pedido ${pedido.id}`)\n          : null;\n\n        return {\n          ...pedido,\n          inicio: inicioValido,\n          dataConclusao: dataConclusaoValida,\n          itens: Array.isArray(pedido.itens) ? pedido.itens : [],\n          tempo:\n            pedido.status === 'concluido' && dataConclusaoValida\n              ? calcularTempo(inicioValido, dataConclusaoValida)\n              : pedido.status === 'andamento' && !pedido.pausado\n              ? (pedido.tempoPausado || 0) + calcularTempo(inicioValido)\n              : pedido.tempoPausado || 0,\n        };\n      });\n      setPedidos(pedidosAtualizados.filter((p) => p.status === 'andamento'));\n      setPedidosAndamento(pedidosAtualizados.filter((p) => p.status === 'novo'));\n      setPedidosConcluidos(pedidosAtualizados.filter((p) => p.status === 'concluido'));\n      setIsLoading(false);\n      lastFetchTimestamp.current = now;\n    } catch (error) {\n      console.error('Erro ao carregar pedidos:', error);\n      setMensagem('Erro ao carregar pedidos: ' + error.message);\n      setIsLoading(false);\n    } finally {\n      isFetching.current = false;\n    }\n  };\n\n  const carregarPedidos = useCallback(debounce((dados) => {\n    fetchPedidos(dados);\n  }, 1000), []);\n\n  useEffect(() => {\n    carregarPedidos();\n    return () => {\n      carregarPedidos.cancel();\n    };\n  }, [carregarPedidos]);\n\n  useEffect(() => {\n    const intervalo = setInterval(() => {\n      setPedidos((prev) =>\n        prev.map((p) => {\n          const inicioValido = p.inicio && !p.inicio.includes('undefined')\n            ? p.inicio\n            : formatDateToLocalISO(new Date(), 'intervalo');\n          return {\n            ...p,\n            tempo: p.status === 'andamento' && !p.pausado\n              ? (p.tempoPausado || 0) + calcularTempo(inicioValido)\n              : p.tempo,\n          };\n        })\n      );\n    }, 60000);\n    return () => clearInterval(intervalo);\n  }, []);\n\n  const parseDate = (dateStr) => {\n    if (!dateStr || typeof dateStr !== 'string' || dateStr.includes('undefined')) {\n      console.warn('Data inválida fornecida em parseDate, usando data atual:', dateStr);\n      return new Date();\n    }\n    const parsedDate = new Date(dateStr);\n    if (isNaN(parsedDate)) {\n      console.warn('Data inválida em parseDate, usando data atual:', dateStr);\n      return new Date();\n    }\n    return parsedDate;\n  };\n\n  const calcularTempo = (inicio, fim = formatDateToLocalISO(new Date(), 'calcularTempo')) => {\n    const inicioDate = parseDate(inicio);\n    const fimDate = parseDate(fim);\n    if (isNaN(inicioDate) || isNaN(fimDate)) {\n      console.error('Data inválida em calcularTempo:', { inicio, fim });\n      return 0;\n    }\n    const diffMs = fimDate - inicioDate;\n    return diffMs < 0 ? 0 : diffMs / (1000 * 60 * 60);\n  };\n\n  const exportarPDF = () => {\n    const doc = new jsPDF();\n    const headersAndamento = ['Empresa', 'Nº OS', 'Data Entrada', 'Previsão', 'Responsável', 'Início', 'Tempo (h)'];\n    const headersNovos = ['Empresa', 'Nº OS', 'Data Entrada', 'Previsão', 'Responsável', 'Início', 'Tempo (h)'];\n    const headersConcluidos = ['Empresa', 'Nº OS', 'Data Entrada', 'Previsão', 'Responsável', 'Início e Conclusão', 'Tempo Total (h)'];\n\n    const addTable = (title, data, headers) => {\n      doc.text(title, 14, 20);\n      autoTable(doc, {\n        head: [headers],\n        body: data.map((p) => [\n          p.empresa,\n          p.numeroOS,\n          p.dataEntrada ? new Date(p.dataEntrada).toLocaleDateString('pt-BR') : 'Não informado',\n          p.previsaoEntrega ? new Date(p.previsaoEntrega).toLocaleDateString('pt-BR') : 'Não informado',\n          p.responsavel,\n          p.status === 'concluido' ? `${formatarDataHora(p.inicio)}\\n${formatarDataHora(p.dataConclusao) || 'Não concluído'}` : formatarDataHora(p.inicio),\n          formatarTempo(p.tempo),\n        ]),\n        startY: 30,\n      });\n    };\n\n    addTable('Pedidos em Andamento', pedidos, headersAndamento);\n    doc.addPage();\n    addTable('Pedidos Novos', pedidosAndamento, headersNovos);\n    doc.addPage();\n    addTable('Pedidos Concluídos', pedidosConcluidos, headersConcluidos);\n    doc.save('pedidos_controle_producao.pdf');\n  };\n\n  const formatarDataHora = (data) => {\n    return data ? parseDate(data).toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' }) : 'Não informado';\n  };\n\n  const formatarTempo = (tempo) => {\n    if (isNaN(tempo)) return '0 minutos';\n    const horas = Math.floor(tempo);\n    const minutos = Math.round((tempo - horas) * 60);\n    return `${horas > 0 ? `${horas} hora${horas > 1 ? 's' : ''} e ` : ''}${minutos} minuto${minutos !== 1 ? 's' : ''}`;\n  };\n\n  const moverParaAndamento = async (id) => {\n    const pedido = [...pedidos, ...pedidosAndamento, ...pedidosConcluidos].find((p) => p.id === id);\n    if (pedido) {\n      const novoInicio = formatDateToLocalISO(new Date(), 'moverParaAndamento');\n      const pedidoAtualizado = { \n        ...pedido, \n        status: 'andamento', \n        inicio: novoInicio,\n        tempo: 0,\n        tempoPausado: 0,\n        dataPausada: null,\n        pausado: 0\n      };\n      try {\n        console.log('Enviando pedido atualizado para andamento:', pedidoAtualizado);\n        const resposta = await axios.put(`http://localhost:5000/pedidos/${id}`, pedidoAtualizado);\n        const pedidoMovido = { ...resposta.data, tempo: 0 };\n        await axios.post('http://localhost:5000/enviar-email', { pedido: pedidoMovido, observacao: '' });\n        setPedidosAndamento((prev) => prev.filter((p) => p.id !== id));\n        setPedidos((prev) => [...prev.filter((p) => p.id !== id), pedidoMovido]);\n        setPedidosConcluidos((prev) => prev.filter((p) => p.id !== id));\n        setMensagem('Pedido movido para \"Em Andamento\" e e-mail enviado.');\n        carregarPedidos();\n      } catch (error) {\n        setMensagem('Erro ao mover pedido: ' + (error.response ? error.response.data.message : error.message));\n        carregarPedidos();\n      }\n    }\n  };\n\n  const pausarPedido = async (id) => {\n    const pedido = pedidos.find((p) => p.id === id);\n    if (pedido) {\n      const tempoAtual = (pedido.tempoPausado || 0) + calcularTempo(pedido.dataPausada || pedido.inicio);\n      const dataPausada = formatDateToLocalISO(new Date(), 'pausarPedido');\n      const pedidoPausado = { ...pedido, pausado: 1, tempoPausado: tempoAtual, dataPausada, tempo: tempoAtual };\n      try {\n        await axios.put(`http://localhost:5000/pedidos/${id}`, pedidoPausado);\n        setPedidos((prev) => prev.map((p) => (p.id === id ? pedidoPausado : p)));\n        setMensagem('Pedido pausado com sucesso.');\n        carregarPedidos();\n      } catch (error) {\n        setMensagem('Erro ao pausar pedido: ' + error.message);\n        carregarPedidos();\n      }\n    }\n  };\n\n  const retomarPedido = async (id) => {\n    const pedido = pedidos.find((p) => p.id === id);\n    if (pedido) {\n      const dataRetomada = formatDateToLocalISO(new Date(), 'retomarPedido');\n      const pedidoRetomado = { ...pedido, pausado: 0, dataPausada: dataRetomada };\n      try {\n        await axios.put(`http://localhost:5000/pedidos/${id}`, pedidoRetomado);\n        setPedidos((prev) =>\n          prev.map((p) =>\n            p.id === id ? { ...pedidoRetomado, tempo: pedido.tempoPausado || 0 } : p\n          )\n        );\n        setMensagem('Pedido retomado com sucesso.');\n        carregarPedidos();\n      } catch (error) {\n        setMensagem('Erro ao retomar pedido: ' + error.message);\n        carregarPedidos();\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <img src=\"/logoNF.jpg\" alt=\"Logo\" className=\"logo\" />\n        <h1>Controle de Produção</h1>\n        <button className=\"btn-desenho\" onClick={() => window.open('https://drive.google.com/drive/folders/1vzemVbLeotHD0xirxUPsvNb9qBccQFcd?usp=sharing', '_blank')}>\n          DESENHO\n        </button>\n      </div>\n\n      {mensagem && <p className={mensagem.includes('Erro') ? 'erro' : 'sucesso'}>{mensagem}</p>}\n      {isLoading && <p>Carregando pedidos...</p>}\n\n      <button className=\"btn-adicionar-pedido\" onClick={() => setMostrarFormulario(true)}>Adicionar Pedido Novo</button>\n      {mostrarFormulario && (\n        <PedidoForm\n          novoPedido={novoPedido}\n          setNovoPedido={setNovoPedido}\n          pedidoParaEditar={pedidoParaEditar}\n          setPedidoParaEditar={setPedidoParaEditar}\n          setMostrarFormulario={setMostrarFormulario}\n          setMensagem={setMensagem}\n          carregarPedidos={carregarPedidos}\n          setPedidos={setPedidos}\n          setPedidosAndamento={setPedidosAndamento}\n          setPedidosConcluidos={setPedidosConcluidos}\n          setMostrarModalPesoVolume={setMostrarModalPesoVolume}\n          setPedidoParaConcluir={setPedidoParaConcluir}\n          moverParaAndamento={moverParaAndamento}\n        />\n      )}\n\n      <Busca\n        busca={busca}\n        setBusca={setBusca}\n        carregarPedidos={carregarPedidos}\n        todosPedidos={[...pedidos, ...pedidosAndamento, ...pedidosConcluidos]}\n        exportarPDF={exportarPDF}\n      />\n\n      <h2>Pedidos em Andamento</h2>\n      <PedidoTable\n        pedidos={pedidos}\n        tipo=\"andamento\"\n        setPedidos={setPedidos}\n        setPedidosAndamento={setPedidosAndamento}\n        setPedidosConcluidos={setPedidosConcluidos}\n        setMensagem={setMensagem}\n        setPedidoParaEditar={setPedidoParaEditar}\n        setNovoPedido={setNovoPedido}\n        setMostrarFormulario={setMostrarFormulario}\n        setMostrarModal={setMostrarModal}\n        setPedidoSelecionado={setPedidoSelecionado}\n        setMostrarModalPesoVolume={setMostrarModalPesoVolume}\n        setPedidoParaConcluir={setPedidoParaConcluir}\n        busca={busca}\n        carregarPedidos={carregarPedidos}\n        moverParaAndamento={moverParaAndamento}\n        pausarPedido={pausarPedido}\n        retomarPedido={retomarPedido}\n      />\n\n      <h2>Pedidos Novos</h2>\n      <PedidoTable\n        pedidos={pedidosAndamento}\n        tipo=\"novo\"\n        setPedidos={setPedidos}\n        setPedidosAndamento={setPedidosAndamento}\n        setPedidosConcluidos={setPedidosConcluidos}\n        setMensagem={setMensagem}\n        setPedidoParaEditar={setPedidoParaEditar}\n        setNovoPedido={setNovoPedido}\n        setMostrarFormulario={setMostrarFormulario}\n        setMostrarModal={setMostrarModal}\n        setPedidoSelecionado={setPedidoSelecionado}\n        setMostrarModalPesoVolume={setMostrarModalPesoVolume}\n        setPedidoParaConcluir={setPedidoParaConcluir}\n        busca={busca}\n        carregarPedidos={carregarPedidos}\n        moverParaAndamento={moverParaAndamento}\n      />\n\n      <h2>Pedidos Concluídos</h2>\n      <PedidoTable\n        pedidos={pedidosConcluidos}\n        tipo=\"concluido\"\n        setPedidos={setPedidos}\n        setPedidosAndamento={setPedidosAndamento}\n        setPedidosConcluidos={setPedidosConcluidos}\n        setMensagem={setMensagem}\n        setPedidoParaEditar={setPedidoParaEditar}\n        setNovoPedido={setNovoPedido}\n        setMostrarFormulario={setMostrarFormulario}\n        setMostrarModal={setMostrarModal}\n        setPedidoSelecionado={setPedidoSelecionado}\n        setMostrarModalPesoVolume={setMostrarModalPesoVolume}\n        setPedidoParaConcluir={setPedidoParaConcluir}\n        busca={busca}\n        carregarPedidos={carregarPedidos}\n      />\n\n      {mostrarModal && (\n        <ModalObservacao\n          pedidoSelecionado={pedidoSelecionado}\n          observacao={observacao}\n          setObservacao={setObservacao}\n          setMostrarModal={setMostrarModal}\n          setMensagem={setMensagem}\n        />\n      )}\n\n      {mostrarModalPesoVolume && (\n        <ModalPesoVolume\n          pedidoParaConcluir={pedidoParaConcluir}\n          peso={peso}\n          setPeso={setPeso}\n          volume={volume}\n          setVolume={setVolume}\n          setMostrarModalPesoVolume={setMostrarModalPesoVolume}\n          setPedidoParaConcluir={setPedidoParaConcluir}\n          setPedidos={setPedidos}\n          setPedidosConcluidos={setPedidosConcluidos}\n          setMensagem={setMensagem}\n          carregarPedidos={carregarPedidos}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
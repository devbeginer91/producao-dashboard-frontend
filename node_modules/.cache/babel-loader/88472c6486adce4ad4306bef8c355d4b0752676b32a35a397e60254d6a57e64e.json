{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\producao-dashboard\\\\frontend\\\\src\\\\components\\\\pedidoForm.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PedidoForm = ({\n  novoPedido,\n  setNovoPedido,\n  pedidoParaEditar,\n  setPedidoParaEditar,\n  setMostrarFormulario,\n  setMensagem,\n  carregarPedidos,\n  setPedidos,\n  setPedidosAndamento,\n  setPedidosConcluidos,\n  setMostrarModalPesoVolume,\n  setPedidoParaConcluir,\n  moverParaAndamento\n}) => {\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const camposObrigatorios = ['empresa', 'numeroOS', 'dataEntrada', 'previsaoEntrega'];\n    const erros = camposObrigatorios.filter(campo => !novoPedido[campo]);\n    if (erros.length > 0 || !novoPedido.itens.length || novoPedido.itens.some(item => !item.codigoDesenho || !item.quantidadePedido)) {\n      setMensagem('Preencha todos os campos obrigatórios e adicione ao menos um item com código e quantidade.');\n      return;\n    }\n    const dataEntrada = new Date(novoPedido.dataEntrada);\n    const previsaoEntrega = new Date(novoPedido.previsaoEntrega);\n    if (isNaN(dataEntrada.getTime()) || isNaN(previsaoEntrega.getTime())) {\n      setMensagem('Datas inválidas.');\n      return;\n    }\n    const inicioFixo = pedidoParaEditar ? pedidoParaEditar.inicio : new Date().toLocaleString('pt-BR', {\n      timeZone: 'America/Sao_Paulo'\n    });\n    const pedidoParaEnviar = {\n      ...novoPedido,\n      inicio: inicioFixo,\n      tempo: novoPedido.status === 'novo' ? 0 : novoPedido.tempo\n    };\n    try {\n      let resposta;\n      if (pedidoParaEditar) {\n        if (novoPedido.status === 'andamento') {\n          setPedidoParaConcluir(pedidoParaEnviar);\n          setMostrarModalPesoVolume(true);\n          setMensagem('Preencha peso e volume para salvar a edição.');\n          resetForm();\n          return;\n        }\n        resposta = await axios.put(`http://localhost:5000/pedidos/${pedidoParaEditar.id}`, pedidoParaEnviar);\n        await axios.post('http://localhost:5000/enviar-email', {\n          pedido: resposta.data,\n          observacao: ''\n        });\n        atualizarListas(resposta.data);\n        setMensagem('Pedido atualizado e e-mail enviado!');\n      } else {\n        resposta = await axios.post('http://localhost:5000/pedidos', pedidoParaEnviar);\n        await axios.post('http://localhost:5000/enviar-email', {\n          pedido: resposta.data,\n          observacao: ''\n        });\n        setPedidosAndamento(prev => [...prev, resposta.data]);\n        setMensagem('Pedido adicionado e e-mail enviado!');\n      }\n      resetForm();\n    } catch (error) {\n      var _error$response;\n      setMensagem('Erro ao processar pedido: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message) || error.message));\n      await carregarPedidos();\n    }\n  };\n  const calcularTempo = (inicio, fim = new Date().toLocaleString('pt-BR', {\n    timeZone: 'America/Sao_Paulo'\n  })) => {\n    const inicioDate = new Date(inicio);\n    const fimDate = new Date(fim);\n    const diffMs = fimDate - inicioDate;\n    return diffMs < 0 ? 0 : diffMs / (1000 * 60 * 60);\n  };\n  const atualizarListas = pedido => {\n    if (pedido.status === 'novo') {\n      setPedidosAndamento(prev => [...prev.filter(p => p.id !== pedido.id), pedido]);\n      setPedidos(prev => prev.filter(p => p.id !== pedido.id));\n      setPedidosConcluidos(prev => prev.filter(p => p.id !== pedido.id));\n    } else if (pedido.status === 'andamento') {\n      setPedidos(prev => [...prev.filter(p => p.id !== pedido.id), pedido]);\n      setPedidosAndamento(prev => prev.filter(p => p.id !== pedido.id));\n      setPedidosConcluidos(prev => prev.filter(p => p.id !== pedido.id));\n    } else if (pedido.status === 'concluido') {\n      setPedidosConcluidos(prev => [...prev.filter(p => p.id !== pedido.id), pedido]);\n      setPedidos(prev => prev.filter(p => p.id !== pedido.id));\n      setPedidosAndamento(prev => prev.filter(p => p.id !== pedido.id));\n    }\n  };\n  const resetForm = () => {\n    setNovoPedido({\n      empresa: '',\n      numeroOS: '',\n      dataEntrada: '',\n      previsaoEntrega: '',\n      responsavel: '',\n      status: 'novo',\n      inicio: new Date().toLocaleString('pt-BR', {\n        timeZone: 'America/Sao_Paulo'\n      }),\n      tempo: 0,\n      peso: null,\n      volume: null,\n      dataConclusao: null,\n      pausado: 0,\n      tempoPausado: 0,\n      dataPausada: null,\n      itens: [{\n        codigoDesenho: '',\n        quantidadePedido: ''\n      }]\n    });\n    setMostrarFormulario(false);\n    setPedidoParaEditar(null);\n  };\n  const adicionarItem = () => {\n    setNovoPedido({\n      ...novoPedido,\n      itens: [...novoPedido.itens, {\n        codigoDesenho: '',\n        quantidadePedido: ''\n      }]\n    });\n  };\n  const removerItem = index => {\n    setNovoPedido({\n      ...novoPedido,\n      itens: novoPedido.itens.filter((_, i) => i !== index)\n    });\n  };\n  const atualizarItem = (index, campo, valor) => {\n    const novosItens = [...novoPedido.itens];\n    novosItens[index][campo] = valor;\n    setNovoPedido({\n      ...novoPedido,\n      itens: novosItens\n    });\n  };\n\n  // Garantir que itens seja sempre um array\n  const itens = Array.isArray(novoPedido.itens) ? novoPedido.itens : [{\n    codigoDesenho: '',\n    quantidadePedido: ''\n  }];\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"formulario\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"empresa\",\n        children: \"Empresa *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"empresa\",\n        value: novoPedido.empresa,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          empresa: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numeroOS\",\n        children: \"N\\xFAmero da OS *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"numeroOS\",\n        value: novoPedido.numeroOS,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          numeroOS: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dataEntrada\",\n        children: \"Data de Entrada *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"dataEntrada\",\n        value: novoPedido.dataEntrada,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          dataEntrada: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"previsaoEntrega\",\n        children: \"Previs\\xE3o de Entrega *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"previsaoEntrega\",\n        value: novoPedido.previsaoEntrega,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          previsaoEntrega: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"responsavel\",\n        children: \"Respons\\xE1vel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"responsavel\",\n        value: novoPedido.responsavel,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          responsavel: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"status\",\n        value: novoPedido.status,\n        onChange: e => {\n          const novoStatus = e.target.value;\n          setNovoPedido({\n            ...novoPedido,\n            status: novoStatus\n          });\n          if (pedidoParaEditar && moverParaAndamento && novoStatus === 'andamento') {\n            moverParaAndamento(pedidoParaEditar.id);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"novo\",\n          children: \"Novo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"andamento\",\n          children: \"Em Andamento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"concluido\",\n          children: \"Conclu\\xEDdo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Itens do Pedido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), itens.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `codigoDesenho-${index}`,\n          children: \"C\\xF3digo do Desenho *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: `codigoDesenho-${index}`,\n          value: item.codigoDesenho,\n          onChange: e => atualizarItem(index, 'codigoDesenho', e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `quantidadePedido-${index}`,\n          children: \"Quantidade Pedida *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: `quantidadePedido-${index}`,\n          value: item.quantidadePedido,\n          onChange: e => atualizarItem(index, 'quantidadePedido', e.target.value),\n          min: \"0\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), itens.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => removerItem(index),\n        children: \"Remover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: adicionarItem,\n      children: \"Adicionar Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: pedidoParaEditar ? 'Salvar Alterações' : 'Adicionar Pedido'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: resetForm,\n      children: \"Cancelar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_c = PedidoForm;\nexport default PedidoForm;\nvar _c;\n$RefreshReg$(_c, \"PedidoForm\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","PedidoForm","novoPedido","setNovoPedido","pedidoParaEditar","setPedidoParaEditar","setMostrarFormulario","setMensagem","carregarPedidos","setPedidos","setPedidosAndamento","setPedidosConcluidos","setMostrarModalPesoVolume","setPedidoParaConcluir","moverParaAndamento","handleSubmit","e","preventDefault","camposObrigatorios","erros","filter","campo","length","itens","some","item","codigoDesenho","quantidadePedido","dataEntrada","Date","previsaoEntrega","isNaN","getTime","inicioFixo","inicio","toLocaleString","timeZone","pedidoParaEnviar","tempo","status","resposta","resetForm","put","id","post","pedido","data","observacao","atualizarListas","prev","error","_error$response","response","message","calcularTempo","fim","inicioDate","fimDate","diffMs","p","empresa","numeroOS","responsavel","peso","volume","dataConclusao","pausado","tempoPausado","dataPausada","adicionarItem","removerItem","index","_","i","atualizarItem","valor","novosItens","Array","isArray","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","novoStatus","map","min","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/producao-dashboard/frontend/src/components/pedidoForm.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PedidoForm = ({\r\n  novoPedido,\r\n  setNovoPedido,\r\n  pedidoParaEditar,\r\n  setPedidoParaEditar,\r\n  setMostrarFormulario,\r\n  setMensagem,\r\n  carregarPedidos,\r\n  setPedidos,\r\n  setPedidosAndamento,\r\n  setPedidosConcluidos,\r\n  setMostrarModalPesoVolume,\r\n  setPedidoParaConcluir,\r\n  moverParaAndamento,\r\n}) => {\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const camposObrigatorios = ['empresa', 'numeroOS', 'dataEntrada', 'previsaoEntrega'];\r\n    const erros = camposObrigatorios.filter((campo) => !novoPedido[campo]);\r\n    if (erros.length > 0 || !novoPedido.itens.length || novoPedido.itens.some(item => !item.codigoDesenho || !item.quantidadePedido)) {\r\n      setMensagem('Preencha todos os campos obrigatórios e adicione ao menos um item com código e quantidade.');\r\n      return;\r\n    }\r\n\r\n    const dataEntrada = new Date(novoPedido.dataEntrada);\r\n    const previsaoEntrega = new Date(novoPedido.previsaoEntrega);\r\n    if (isNaN(dataEntrada.getTime()) || isNaN(previsaoEntrega.getTime())) {\r\n      setMensagem('Datas inválidas.');\r\n      return;\r\n    }\r\n\r\n    const inicioFixo = pedidoParaEditar ? pedidoParaEditar.inicio : new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' });\r\n    const pedidoParaEnviar = { ...novoPedido, inicio: inicioFixo, tempo: novoPedido.status === 'novo' ? 0 : novoPedido.tempo };\r\n\r\n    try {\r\n      let resposta;\r\n      if (pedidoParaEditar) {\r\n        if (novoPedido.status === 'andamento') {\r\n          setPedidoParaConcluir(pedidoParaEnviar);\r\n          setMostrarModalPesoVolume(true);\r\n          setMensagem('Preencha peso e volume para salvar a edição.');\r\n          resetForm();\r\n          return;\r\n        }\r\n        resposta = await axios.put(`http://localhost:5000/pedidos/${pedidoParaEditar.id}`, pedidoParaEnviar);\r\n        await axios.post('http://localhost:5000/enviar-email', { pedido: resposta.data, observacao: '' });\r\n        atualizarListas(resposta.data);\r\n        setMensagem('Pedido atualizado e e-mail enviado!');\r\n      } else {\r\n        resposta = await axios.post('http://localhost:5000/pedidos', pedidoParaEnviar);\r\n        await axios.post('http://localhost:5000/enviar-email', { pedido: resposta.data, observacao: '' });\r\n        setPedidosAndamento((prev) => [...prev, resposta.data]);\r\n        setMensagem('Pedido adicionado e e-mail enviado!');\r\n      }\r\n      resetForm();\r\n    } catch (error) {\r\n      setMensagem('Erro ao processar pedido: ' + (error.response?.data.message || error.message));\r\n      await carregarPedidos();\r\n    }\r\n  };\r\n\r\n  const calcularTempo = (inicio, fim = new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' })) => {\r\n    const inicioDate = new Date(inicio);\r\n    const fimDate = new Date(fim);\r\n    const diffMs = fimDate - inicioDate;\r\n    return diffMs < 0 ? 0 : diffMs / (1000 * 60 * 60);\r\n  };\r\n\r\n  const atualizarListas = (pedido) => {\r\n    if (pedido.status === 'novo') {\r\n      setPedidosAndamento((prev) => [...prev.filter((p) => p.id !== pedido.id), pedido]);\r\n      setPedidos((prev) => prev.filter((p) => p.id !== pedido.id));\r\n      setPedidosConcluidos((prev) => prev.filter((p) => p.id !== pedido.id));\r\n    } else if (pedido.status === 'andamento') {\r\n      setPedidos((prev) => [...prev.filter((p) => p.id !== pedido.id), pedido]);\r\n      setPedidosAndamento((prev) => prev.filter((p) => p.id !== pedido.id));\r\n      setPedidosConcluidos((prev) => prev.filter((p) => p.id !== pedido.id));\r\n    } else if (pedido.status === 'concluido') {\r\n      setPedidosConcluidos((prev) => [...prev.filter((p) => p.id !== pedido.id), pedido]);\r\n      setPedidos((prev) => prev.filter((p) => p.id !== pedido.id));\r\n      setPedidosAndamento((prev) => prev.filter((p) => p.id !== pedido.id));\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setNovoPedido({\r\n      empresa: '',\r\n      numeroOS: '',\r\n      dataEntrada: '',\r\n      previsaoEntrega: '',\r\n      responsavel: '',\r\n      status: 'novo',\r\n      inicio: new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' }),\r\n      tempo: 0,\r\n      peso: null,\r\n      volume: null,\r\n      dataConclusao: null,\r\n      pausado: 0,\r\n      tempoPausado: 0,\r\n      dataPausada: null,\r\n      itens: [{ codigoDesenho: '', quantidadePedido: '' }],\r\n    });\r\n    setMostrarFormulario(false);\r\n    setPedidoParaEditar(null);\r\n  };\r\n\r\n  const adicionarItem = () => {\r\n    setNovoPedido({\r\n      ...novoPedido,\r\n      itens: [...novoPedido.itens, { codigoDesenho: '', quantidadePedido: '' }],\r\n    });\r\n  };\r\n\r\n  const removerItem = (index) => {\r\n    setNovoPedido({\r\n      ...novoPedido,\r\n      itens: novoPedido.itens.filter((_, i) => i !== index),\r\n    });\r\n  };\r\n\r\n  const atualizarItem = (index, campo, valor) => {\r\n    const novosItens = [...novoPedido.itens];\r\n    novosItens[index][campo] = valor;\r\n    setNovoPedido({ ...novoPedido, itens: novosItens });\r\n  };\r\n\r\n  // Garantir que itens seja sempre um array\r\n  const itens = Array.isArray(novoPedido.itens) ? novoPedido.itens : [{ codigoDesenho: '', quantidadePedido: '' }];\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"formulario\">\r\n      <div>\r\n        <label htmlFor=\"empresa\">Empresa *</label>\r\n        <input type=\"text\" id=\"empresa\" value={novoPedido.empresa} onChange={(e) => setNovoPedido({ ...novoPedido, empresa: e.target.value })} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"numeroOS\">Número da OS *</label>\r\n        <input type=\"text\" id=\"numeroOS\" value={novoPedido.numeroOS} onChange={(e) => setNovoPedido({ ...novoPedido, numeroOS: e.target.value })} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"dataEntrada\">Data de Entrada *</label>\r\n        <input type=\"date\" id=\"dataEntrada\" value={novoPedido.dataEntrada} onChange={(e) => setNovoPedido({ ...novoPedido, dataEntrada: e.target.value })} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"previsaoEntrega\">Previsão de Entrega *</label>\r\n        <input type=\"date\" id=\"previsaoEntrega\" value={novoPedido.previsaoEntrega} onChange={(e) => setNovoPedido({ ...novoPedido, previsaoEntrega: e.target.value })} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"responsavel\">Responsável</label>\r\n        <input type=\"text\" id=\"responsavel\" value={novoPedido.responsavel} onChange={(e) => setNovoPedido({ ...novoPedido, responsavel: e.target.value })} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"status\">Status</label>\r\n        <select id=\"status\" value={novoPedido.status} onChange={(e) => {\r\n          const novoStatus = e.target.value;\r\n          setNovoPedido({ ...novoPedido, status: novoStatus });\r\n          if (pedidoParaEditar && moverParaAndamento && novoStatus === 'andamento') {\r\n            moverParaAndamento(pedidoParaEditar.id);\r\n          }\r\n        }}>\r\n          <option value=\"novo\">Novo</option>\r\n          <option value=\"andamento\">Em Andamento</option>\r\n          <option value=\"concluido\">Concluído</option>\r\n        </select>\r\n      </div>\r\n\r\n      <h3>Itens do Pedido</h3>\r\n      {itens.map((item, index) => (\r\n        <div key={index} className=\"item-group\">\r\n          <div>\r\n            <label htmlFor={`codigoDesenho-${index}`}>Código do Desenho *</label>\r\n            <input\r\n              type=\"text\"\r\n              id={`codigoDesenho-${index}`}\r\n              value={item.codigoDesenho}\r\n              onChange={(e) => atualizarItem(index, 'codigoDesenho', e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor={`quantidadePedido-${index}`}>Quantidade Pedida *</label>\r\n            <input\r\n              type=\"number\"\r\n              id={`quantidadePedido-${index}`}\r\n              value={item.quantidadePedido}\r\n              onChange={(e) => atualizarItem(index, 'quantidadePedido', e.target.value)}\r\n              min=\"0\"\r\n              required\r\n            />\r\n          </div>\r\n          {itens.length > 1 && (\r\n            <button type=\"button\" onClick={() => removerItem(index)}>Remover</button>\r\n          )}\r\n        </div>\r\n      ))}\r\n      <button type=\"button\" onClick={adicionarItem}>Adicionar Item</button>\r\n\r\n      <button type=\"submit\">{pedidoParaEditar ? 'Salvar Alterações' : 'Adicionar Pedido'}</button>\r\n      <button type=\"button\" onClick={resetForm}>Cancelar</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PedidoForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
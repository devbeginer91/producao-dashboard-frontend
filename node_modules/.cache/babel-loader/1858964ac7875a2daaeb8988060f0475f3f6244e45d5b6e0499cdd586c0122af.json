{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\producao-dashboard\\\\FRONTEND\\\\src\\\\components\\\\PedidoTable.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PedidoTable = ({\n  pedidos,\n  tipo,\n  setPedidos,\n  setPedidosAndamento,\n  setPedidosConcluidos,\n  setMensagem,\n  setPedidoParaEditar,\n  setNovoPedido,\n  setMostrarFormulario,\n  setMostrarModal,\n  setPedidoSelecionado,\n  setMostrarModalPesoVolume,\n  setPedidoParaConcluir,\n  busca,\n  carregarPedidos,\n  moverParaAndamento\n}) => {\n  const formatarData = data => {\n    return data ? new Date(data).toLocaleDateString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    }) : 'Não informado';\n  };\n  const formatarDataHora = data => {\n    return data || 'Não informado'; // Exibir string local diretamente\n  };\n  const formatarTempo = tempo => {\n    if (isNaN(tempo)) return '0 minutos';\n    const horas = Math.floor(tempo);\n    const minutos = Math.round((tempo - horas) * 60);\n    return `${horas > 0 ? `${horas} hora${horas > 1 ? 's' : ''} e ` : ''}${minutos} minuto${minutos !== 1 ? 's' : ''}`;\n  };\n  const calcularTempo = (inicio, fim = new Date().toLocaleString('pt-BR', {\n    timeZone: 'America/Sao_Paulo'\n  })) => {\n    const inicioDate = new Date(inicio);\n    const fimDate = new Date(fim);\n    const diffMs = fimDate - inicioDate;\n    return diffMs < 0 ? 0 : diffMs / (1000 * 60 * 60);\n  };\n  const editarPedido = pedido => {\n    setPedidoParaEditar(pedido);\n    setNovoPedido({\n      ...pedido\n    });\n    setMostrarFormulario(true);\n  };\n  const excluirPedido = async id => {\n    if (window.confirm('Tem certeza que deseja excluir este pedido?')) {\n      try {\n        await axios.delete(`http://localhost:5000/pedidos/${id}`);\n        setPedidos(prev => prev.filter(p => p.id !== id));\n        setPedidosAndamento(prev => prev.filter(p => p.id !== id));\n        setPedidosConcluidos(prev => prev.filter(p => p.id !== id));\n        setMensagem('Pedido excluído com sucesso!');\n      } catch (error) {\n        console.error('Erro no excluirPedido:', error);\n        setMensagem('Erro ao excluir pedido: ' + error.message);\n      }\n    }\n  };\n  const concluirPedido = id => {\n    const pedidoAndamento = pedidos.find(p => p.id === id);\n    if (!pedidoAndamento) {\n      setMensagem('Erro: Pedido não encontrado para conclusão.');\n      return;\n    }\n    const novoPedidoParaConcluir = {\n      ...pedidoAndamento,\n      status: 'concluido'\n    };\n    setPedidoParaConcluir(novoPedidoParaConcluir);\n    setMostrarModalPesoVolume(true);\n  };\n  const abrirModalObservacao = pedido => {\n    setPedidoSelecionado(pedido);\n    setMostrarModal(true);\n  };\n  const isPastDue = previsaoEntrega => {\n    if (!previsaoEntrega) return false;\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const dueDate = new Date(previsaoEntrega);\n    dueDate.setHours(0, 0, 0, 0);\n    const isLate = dueDate < today;\n    console.log(`Previsão: ${previsaoEntrega}, Hoje: ${today.toISOString()}, Atrasado: ${isLate}`);\n    return isLate && tipo !== 'concluido';\n  };\n  const filtrarPedidos = lista => {\n    if (!busca) return lista;\n    return lista.filter(pedido => pedido.empresa.toLowerCase().includes(busca.toLowerCase()) || pedido.numeroOS.toLowerCase().includes(busca.toLowerCase()));\n  };\n  const headers = {\n    andamento: ['Empresa', 'Número da OS', 'Código do Desenho', 'Quantidade Pedido', 'Quantidade Entregue', 'Saldo Restante', 'Data de Entrada', 'Previsão de Entrega', 'Responsável', 'Início', 'Tempo (h)', 'Ações'],\n    novo: ['Empresa', 'Número da OS', 'Código do Desenho', 'Quantidade Pedido', 'Quantidade Entregue', 'Data de Entrada', 'Previsão de Entrega', 'Responsável', 'Início', 'Tempo (h)', 'Ações'],\n    concluido: ['Empresa', 'Número da OS', 'Código do Desenho', 'Quantidade Pedido', 'Quantidade Entregue', 'Data de Entrada', 'Previsão de Entrega', 'Responsável', 'Início e Conclusão', 'Tempo Total (h)', 'Ações']\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: `tabela ${tipo === 'novo' ? 'novos' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: headers[tipo].map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: header.split(' ').map((word, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [word, i < header.split(' ').length - 1 && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 56\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: filtrarPedidos(pedidos).map(pedido => /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: isPastDue(pedido.previsaoEntrega) ? 'atrasado' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: pedido.empresa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: pedido.numeroOS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: pedido.codigoDesenho\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: pedido.quantidadePedido\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: pedido.quantidadeEntregue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), tipo === 'andamento' && /*#__PURE__*/_jsxDEV(\"td\", {\n          children: pedido.quantidadePedido - pedido.quantidadeEntregue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: formatarData(pedido.dataEntrada)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [formatarData(pedido.previsaoEntrega), isPastDue(pedido.previsaoEntrega) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"atrasado-icon\",\n            children: \"\\u26A0\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: pedido.responsavel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"data-hora\",\n          children: tipo === 'concluido' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [formatarDataHora(pedido.inicio), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 52\n            }, this), formatarDataHora(pedido.dataConclusao)]\n          }, void 0, true) : formatarDataHora(pedido.inicio)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: formatarTempo(pedido.tempo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-row\",\n              children: [tipo === 'andamento' && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-concluir\",\n                onClick: () => concluirPedido(pedido.id),\n                children: \"Concluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this), tipo === 'novo' && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-mover\",\n                onClick: () => moverParaAndamento(pedido.id),\n                children: \"Andamento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-editar\",\n                onClick: () => editarPedido(pedido),\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-excluir\",\n                onClick: () => excluirPedido(pedido.id),\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-observacao\",\n                onClick: () => abrirModalObservacao(pedido),\n                children: \"Obs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, pedido.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_c = PedidoTable;\nexport default PedidoTable;\nvar _c;\n$RefreshReg$(_c, \"PedidoTable\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","PedidoTable","pedidos","tipo","setPedidos","setPedidosAndamento","setPedidosConcluidos","setMensagem","setPedidoParaEditar","setNovoPedido","setMostrarFormulario","setMostrarModal","setPedidoSelecionado","setMostrarModalPesoVolume","setPedidoParaConcluir","busca","carregarPedidos","moverParaAndamento","formatarData","data","Date","toLocaleDateString","day","month","year","formatarDataHora","formatarTempo","tempo","isNaN","horas","Math","floor","minutos","round","calcularTempo","inicio","fim","toLocaleString","timeZone","inicioDate","fimDate","diffMs","editarPedido","pedido","excluirPedido","id","window","confirm","delete","prev","filter","p","error","console","message","concluirPedido","pedidoAndamento","find","novoPedidoParaConcluir","status","abrirModalObservacao","isPastDue","previsaoEntrega","today","setHours","dueDate","isLate","log","toISOString","filtrarPedidos","lista","empresa","toLowerCase","includes","numeroOS","headers","andamento","novo","concluido","className","children","map","header","index","split","word","i","length","fileName","_jsxFileName","lineNumber","columnNumber","codigoDesenho","quantidadePedido","quantidadeEntregue","dataEntrada","responsavel","dataConclusao","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/producao-dashboard/FRONTEND/src/components/PedidoTable.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PedidoTable = ({\r\n  pedidos,\r\n  tipo,\r\n  setPedidos,\r\n  setPedidosAndamento,\r\n  setPedidosConcluidos,\r\n  setMensagem,\r\n  setPedidoParaEditar,\r\n  setNovoPedido,\r\n  setMostrarFormulario,\r\n  setMostrarModal,\r\n  setPedidoSelecionado,\r\n  setMostrarModalPesoVolume,\r\n  setPedidoParaConcluir,\r\n  busca,\r\n  carregarPedidos,\r\n  moverParaAndamento,\r\n}) => {\r\n  const formatarData = (data) => {\r\n    return data ? new Date(data).toLocaleDateString('pt-BR', { day: '2-digit', month: '2-digit', year: 'numeric' }) : 'Não informado';\r\n  };\r\n\r\n  const formatarDataHora = (data) => {\r\n    return data || 'Não informado'; // Exibir string local diretamente\r\n  };\r\n\r\n  const formatarTempo = (tempo) => {\r\n    if (isNaN(tempo)) return '0 minutos';\r\n    const horas = Math.floor(tempo);\r\n    const minutos = Math.round((tempo - horas) * 60);\r\n    return `${horas > 0 ? `${horas} hora${horas > 1 ? 's' : ''} e ` : ''}${minutos} minuto${minutos !== 1 ? 's' : ''}`;\r\n  };\r\n\r\n  const calcularTempo = (inicio, fim = new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' })) => {\r\n    const inicioDate = new Date(inicio);\r\n    const fimDate = new Date(fim);\r\n    const diffMs = fimDate - inicioDate;\r\n    return diffMs < 0 ? 0 : diffMs / (1000 * 60 * 60);\r\n  };\r\n\r\n  const editarPedido = (pedido) => {\r\n    setPedidoParaEditar(pedido);\r\n    setNovoPedido({ ...pedido });\r\n    setMostrarFormulario(true);\r\n  };\r\n\r\n  const excluirPedido = async (id) => {\r\n    if (window.confirm('Tem certeza que deseja excluir este pedido?')) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/pedidos/${id}`);\r\n        setPedidos((prev) => prev.filter((p) => p.id !== id));\r\n        setPedidosAndamento((prev) => prev.filter((p) => p.id !== id));\r\n        setPedidosConcluidos((prev) => prev.filter((p) => p.id !== id));\r\n        setMensagem('Pedido excluído com sucesso!');\r\n      } catch (error) {\r\n        console.error('Erro no excluirPedido:', error);\r\n        setMensagem('Erro ao excluir pedido: ' + error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const concluirPedido = (id) => {\r\n    const pedidoAndamento = pedidos.find((p) => p.id === id);\r\n    if (!pedidoAndamento) {\r\n      setMensagem('Erro: Pedido não encontrado para conclusão.');\r\n      return;\r\n    }\r\n    const novoPedidoParaConcluir = { ...pedidoAndamento, status: 'concluido' };\r\n    setPedidoParaConcluir(novoPedidoParaConcluir);\r\n    setMostrarModalPesoVolume(true);\r\n  };\r\n\r\n  const abrirModalObservacao = (pedido) => {\r\n    setPedidoSelecionado(pedido);\r\n    setMostrarModal(true);\r\n  };\r\n\r\n  const isPastDue = (previsaoEntrega) => {\r\n    if (!previsaoEntrega) return false;\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    const dueDate = new Date(previsaoEntrega);\r\n    dueDate.setHours(0, 0, 0, 0);\r\n    const isLate = dueDate < today;\r\n    console.log(`Previsão: ${previsaoEntrega}, Hoje: ${today.toISOString()}, Atrasado: ${isLate}`);\r\n    return isLate && tipo !== 'concluido';\r\n  };\r\n\r\n  const filtrarPedidos = (lista) => {\r\n    if (!busca) return lista;\r\n    return lista.filter((pedido) =>\r\n      pedido.empresa.toLowerCase().includes(busca.toLowerCase()) ||\r\n      pedido.numeroOS.toLowerCase().includes(busca.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const headers = {\r\n    andamento: [\r\n      'Empresa', 'Número da OS', 'Código do Desenho', 'Quantidade Pedido', 'Quantidade Entregue',\r\n      'Saldo Restante', 'Data de Entrada', 'Previsão de Entrega', 'Responsável', 'Início', 'Tempo (h)', 'Ações'\r\n    ],\r\n    novo: [\r\n      'Empresa', 'Número da OS', 'Código do Desenho', 'Quantidade Pedido', 'Quantidade Entregue',\r\n      'Data de Entrada', 'Previsão de Entrega', 'Responsável', 'Início', 'Tempo (h)', 'Ações'\r\n    ],\r\n    concluido: [\r\n      'Empresa', 'Número da OS', 'Código do Desenho', 'Quantidade Pedido', 'Quantidade Entregue',\r\n      'Data de Entrada', 'Previsão de Entrega', 'Responsável', 'Início e Conclusão', 'Tempo Total (h)', 'Ações'\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <table className={`tabela ${tipo === 'novo' ? 'novos' : ''}`}>\r\n      <thead>\r\n        <tr>\r\n          {headers[tipo].map((header, index) => (\r\n            <th key={index}>\r\n              {header.split(' ').map((word, i) => (\r\n                <React.Fragment key={i}>\r\n                  {word}\r\n                  {i < header.split(' ').length - 1 && <br />}\r\n                </React.Fragment>\r\n              ))}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {filtrarPedidos(pedidos).map((pedido) => (\r\n          <tr key={pedido.id} className={isPastDue(pedido.previsaoEntrega) ? 'atrasado' : ''}>\r\n            <td>{pedido.empresa}</td>\r\n            <td>{pedido.numeroOS}</td>\r\n            <td>{pedido.codigoDesenho}</td>\r\n            <td>{pedido.quantidadePedido}</td>\r\n            <td>{pedido.quantidadeEntregue}</td>\r\n            {tipo === 'andamento' && <td>{pedido.quantidadePedido - pedido.quantidadeEntregue}</td>}\r\n            <td>{formatarData(pedido.dataEntrada)}</td>\r\n            <td>\r\n              {formatarData(pedido.previsaoEntrega)}\r\n              {isPastDue(pedido.previsaoEntrega) && <span className=\"atrasado-icon\">⚠️</span>}\r\n            </td>\r\n            <td>{pedido.responsavel}</td>\r\n            <td className=\"data-hora\">\r\n              {tipo === 'concluido' ? (\r\n                <>\r\n                  {formatarDataHora(pedido.inicio)}<br />\r\n                  {formatarDataHora(pedido.dataConclusao)}\r\n                </>\r\n              ) : (\r\n                formatarDataHora(pedido.inicio)\r\n              )}\r\n            </td>\r\n            <td>{formatarTempo(pedido.tempo)}</td>\r\n            <td>\r\n              <div className=\"btn-container\">\r\n                <div className=\"btn-row\">\r\n                  {tipo === 'andamento' && (\r\n                    <button className=\"btn-concluir\" onClick={() => concluirPedido(pedido.id)}>Concluir</button>\r\n                  )}\r\n                  {tipo === 'novo' && (\r\n                    <button className=\"btn-mover\" onClick={() => moverParaAndamento(pedido.id)}>Andamento</button>\r\n                  )}\r\n                  <button className=\"btn-editar\" onClick={() => editarPedido(pedido)}>Editar</button>\r\n                </div>\r\n                <div className=\"btn-row\">\r\n                  <button className=\"btn-excluir\" onClick={() => excluirPedido(pedido.id)}>Excluir</button>\r\n                  <button className=\"btn-observacao\" onClick={() => abrirModalObservacao(pedido)}>Obs</button>\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default PedidoTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
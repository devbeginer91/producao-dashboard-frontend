{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\producao-dashboard\\\\frontend\\\\src\\\\components\\\\pedidoForm.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PedidoForm = ({\n  novoPedido,\n  setNovoPedido,\n  pedidoParaEditar,\n  setPedidoParaEditar,\n  setMostrarFormulario,\n  setMensagem,\n  carregarPedidos,\n  setPedidos,\n  setPedidosAndamento,\n  setPedidosConcluidos,\n  setMostrarModalPesoVolume,\n  setPedidoParaConcluir,\n  moverParaAndamento\n}) => {\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const camposObrigatorios = ['empresa', 'numeroOS', 'dataEntrada', 'previsaoEntrega'];\n    const erros = camposObrigatorios.filter(campo => !novoPedido[campo]);\n    if (erros.length > 0) {\n      setMensagem(`Preencha os campos obrigatórios: ${erros.join(', ')}`);\n      return;\n    }\n\n    // Validação de datas\n    const dataEntrada = new Date(novoPedido.dataEntrada);\n    const previsaoEntrega = new Date(novoPedido.previsaoEntrega);\n    if (isNaN(dataEntrada.getTime()) || isNaN(previsaoEntrega.getTime())) {\n      setMensagem('Datas inválidas. Verifique os campos de data.');\n      return;\n    }\n    // Removida a validação de dataEntrada > previsaoEntrega para pedidos novos\n    // Mantida apenas para edição de pedidos existentes, se desejado\n    if (pedidoParaEditar && dataEntrada > previsaoEntrega) {\n      setMensagem('A data de entrada não pode ser posterior à previsão de entrega ao editar um pedido.');\n      return;\n    }\n    const quantidadePedido = parseInt(novoPedido.quantidadePedido) || 0;\n    const quantidadeEntregueDigitada = parseInt(novoPedido.quantidadeEntregue) || 0;\n    const pedidoParaEnviar = {\n      ...novoPedido,\n      quantidadePedido,\n      quantidadeEntregue: quantidadeEntregueDigitada,\n      inicio: new Date().toLocaleString('pt-BR', {\n        timeZone: 'America/Sao_Paulo'\n      }),\n      // Data atual no cadastro\n      tempo: 0 // Forçamos o tempo inicial como 0\n    };\n    try {\n      let resposta;\n      if (pedidoParaEditar) {\n        // ... (lógica de edição, mantemos como está)\n      } else {\n        // Enviar o pedido novo\n        resposta = await axios.post('http://localhost:5000/pedidos', pedidoParaEnviar);\n        const novoPedidoAdicionado = {\n          ...resposta.data,\n          tempo: 0\n        }; // Garantimos que o tempo seja 0\n        await axios.post('http://localhost:5000/enviar-email', {\n          pedido: novoPedidoAdicionado,\n          observacao: ''\n        });\n        atualizarListas(novoPedidoAdicionado);\n        setMensagem('Pedido adicionado e e-mail enviado!');\n        resetForm();\n      }\n    } catch (error) {\n      // ... (tratamento de erro, mantemos como está)\n    }\n    if (quantidadeEntregueDigitada > quantidadePedido) {\n      window.alert('A quantidade entregue não pode exceder a quantidade pedida!');\n      return;\n    }\n    try {\n      let resposta;\n      if (pedidoParaEditar) {\n        if (novoPedido.status === 'andamento') {\n          setPedidoParaConcluir({\n            ...pedidoParaEnviar,\n            quantidadeEntregueDigitada\n          });\n          setMostrarModalPesoVolume(true);\n          setMensagem('Preencha peso e volume para salvar a edição.');\n          resetForm();\n          return;\n        }\n        resposta = await axios.put(`http://localhost:5000/pedidos/${pedidoParaEditar.id}`, pedidoParaEnviar);\n        const pedidoAtualizado = {\n          ...resposta.data,\n          tempo: calcularTempo(new Date(resposta.data.inicio), resposta.data.dataConclusao ? new Date(resposta.data.dataConclusao) : null)\n        };\n        await axios.post('http://localhost:5000/enviar-email', {\n          pedido: pedidoAtualizado,\n          observacao: ''\n        });\n        atualizarListas(pedidoAtualizado);\n        setMensagem('Pedido atualizado e e-mail enviado!');\n        resetForm();\n      } else {\n        resposta = await axios.post('http://localhost:5000/pedidos', pedidoParaEnviar);\n        const novoPedidoAdicionado = {\n          ...resposta.data,\n          tempo: calcularTempo(new Date(resposta.data.inicio))\n        };\n        await axios.post('http://localhost:5000/enviar-email', {\n          pedido: novoPedidoAdicionado,\n          observacao: ''\n        });\n        atualizarListas(novoPedidoAdicionado);\n        setMensagem('Pedido adicionado e e-mail enviado!');\n        resetForm();\n      }\n    } catch (error) {\n      var _error$response;\n      setMensagem('Erro ao processar pedido: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message) || error.message));\n      await carregarPedidos();\n    }\n  };\n  const calcularTempo = (inicio, fim = new Date().toLocaleString('pt-BR', {\n    timeZone: 'America/Sao_Paulo'\n  })) => {\n    const inicioDate = new Date(inicio);\n    const fimDate = new Date(fim);\n    const diffMs = fimDate - inicioDate;\n    return diffMs < 0 ? 0 : diffMs / (1000 * 60 * 60);\n  };\n  const atualizarListas = pedido => {\n    if (pedido.status === 'novo') {\n      setPedidosAndamento(prev => [...prev.filter(p => p.id !== pedido.id), pedido]);\n      setPedidos(prev => prev.filter(p => p.id !== pedido.id));\n      setPedidosConcluidos(prev => prev.filter(p => p.id !== pedido.id));\n    } else if (pedido.status === 'andamento') {\n      setPedidos(prev => [...prev.filter(p => p.id !== pedido.id), pedido]);\n      setPedidosAndamento(prev => prev.filter(p => p.id !== pedido.id));\n      setPedidosConcluidos(prev => prev.filter(p => p.id !== pedido.id));\n    } else if (pedido.status === 'concluido') {\n      setPedidosConcluidos(prev => [...prev.filter(p => p.id !== pedido.id), pedido]);\n      setPedidos(prev => prev.filter(p => p.id !== pedido.id));\n      setPedidosAndamento(prev => prev.filter(p => p.id !== pedido.id));\n    }\n  };\n  const resetForm = () => {\n    setNovoPedido({\n      empresa: '',\n      numeroOS: '',\n      dataEntrada: '',\n      previsaoEntrega: '',\n      responsavel: '',\n      codigoDesenho: '',\n      quantidadePedido: '',\n      quantidadeEntregue: '',\n      status: 'novo',\n      inicio: new Date().toLocaleString('pt-BR', {\n        timeZone: 'America/Sao_Paulo'\n      }),\n      tempo: 0,\n      peso: null,\n      volume: null,\n      dataConclusao: null,\n      pausado: 0\n    });\n    setMostrarFormulario(false);\n    setPedidoParaEditar(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"formulario\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"empresa\",\n        children: \"Empresa *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"empresa\",\n        name: \"empresa\",\n        value: novoPedido.empresa,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          empresa: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numeroOS\",\n        children: \"N\\xFAmero da OS *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"numeroOS\",\n        name: \"numeroOS\",\n        value: novoPedido.numeroOS,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          numeroOS: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"codigoDesenho\",\n        children: \"C\\xF3digo do Desenho\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"codigoDesenho\",\n        name: \"codigoDesenho\",\n        value: novoPedido.codigoDesenho,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          codigoDesenho: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quantidadePedido\",\n        children: \"Quantidade Pedido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"quantidadePedido\",\n        name: \"quantidadePedido\",\n        value: novoPedido.quantidadePedido,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          quantidadePedido: e.target.value\n        }),\n        min: \"0\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quantidadeEntregue\",\n        children: \"Quantidade Entregue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"quantidadeEntregue\",\n        name: \"quantidadeEntregue\",\n        value: novoPedido.quantidadeEntregue,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          quantidadeEntregue: e.target.value\n        }),\n        min: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dataEntrada\",\n        children: \"Data de Entrada *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"dataEntrada\",\n        name: \"dataEntrada\",\n        value: novoPedido.dataEntrada,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          dataEntrada: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"previsaoEntrega\",\n        children: \"Previs\\xE3o de Entrega *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"previsaoEntrega\",\n        name: \"previsaoEntrega\",\n        value: novoPedido.previsaoEntrega,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          previsaoEntrega: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"responsavel\",\n        children: \"Respons\\xE1vel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"responsavel\",\n        name: \"responsavel\",\n        value: novoPedido.responsavel,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          responsavel: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"status\",\n        name: \"status\",\n        value: novoPedido.status,\n        onChange: e => {\n          const novoStatus = e.target.value;\n          setNovoPedido({\n            ...novoPedido,\n            status: novoStatus\n          });\n          if (pedidoParaEditar && moverParaAndamento) {\n            moverParaAndamento(pedidoParaEditar.id);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"novo\",\n          children: \"Novo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"andamento\",\n          children: \"Em Andamento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"concluido\",\n          children: \"Conclu\\xEDdo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: pedidoParaEditar ? 'Salvar Alterações' : 'Adicionar Pedido'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: resetForm,\n      children: \"Cancelar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_c = PedidoForm;\nexport default PedidoForm;\nvar _c;\n$RefreshReg$(_c, \"PedidoForm\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","PedidoForm","novoPedido","setNovoPedido","pedidoParaEditar","setPedidoParaEditar","setMostrarFormulario","setMensagem","carregarPedidos","setPedidos","setPedidosAndamento","setPedidosConcluidos","setMostrarModalPesoVolume","setPedidoParaConcluir","moverParaAndamento","handleSubmit","e","preventDefault","camposObrigatorios","erros","filter","campo","length","join","dataEntrada","Date","previsaoEntrega","isNaN","getTime","quantidadePedido","parseInt","quantidadeEntregueDigitada","quantidadeEntregue","pedidoParaEnviar","inicio","toLocaleString","timeZone","tempo","resposta","post","novoPedidoAdicionado","data","pedido","observacao","atualizarListas","resetForm","error","window","alert","status","put","id","pedidoAtualizado","calcularTempo","dataConclusao","_error$response","response","message","fim","inicioDate","fimDate","diffMs","prev","p","empresa","numeroOS","responsavel","codigoDesenho","peso","volume","pausado","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","onChange","target","required","min","novoStatus","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/producao-dashboard/frontend/src/components/pedidoForm.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PedidoForm = ({\r\n  novoPedido,\r\n  setNovoPedido,\r\n  pedidoParaEditar,\r\n  setPedidoParaEditar,\r\n  setMostrarFormulario,\r\n  setMensagem,\r\n  carregarPedidos,\r\n  setPedidos,\r\n  setPedidosAndamento,\r\n  setPedidosConcluidos,\r\n  setMostrarModalPesoVolume,\r\n  setPedidoParaConcluir,\r\n  moverParaAndamento,\r\n}) => {\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const camposObrigatorios = ['empresa', 'numeroOS', 'dataEntrada', 'previsaoEntrega'];\r\n    const erros = camposObrigatorios.filter((campo) => !novoPedido[campo]);\r\n    if (erros.length > 0) {\r\n      setMensagem(`Preencha os campos obrigatórios: ${erros.join(', ')}`);\r\n      return;\r\n    }\r\n\r\n    // Validação de datas\r\n    const dataEntrada = new Date(novoPedido.dataEntrada);\r\n    const previsaoEntrega = new Date(novoPedido.previsaoEntrega);\r\n    if (isNaN(dataEntrada.getTime()) || isNaN(previsaoEntrega.getTime())) {\r\n      setMensagem('Datas inválidas. Verifique os campos de data.');\r\n      return;\r\n    }\r\n    // Removida a validação de dataEntrada > previsaoEntrega para pedidos novos\r\n    // Mantida apenas para edição de pedidos existentes, se desejado\r\n    if (pedidoParaEditar && dataEntrada > previsaoEntrega) {\r\n      setMensagem('A data de entrada não pode ser posterior à previsão de entrega ao editar um pedido.');\r\n      return;\r\n    }\r\n\r\n    const quantidadePedido = parseInt(novoPedido.quantidadePedido) || 0;\r\n    const quantidadeEntregueDigitada = parseInt(novoPedido.quantidadeEntregue) || 0;\r\n\r\n    const pedidoParaEnviar = {\r\n      ...novoPedido,\r\n      quantidadePedido,\r\n      quantidadeEntregue: quantidadeEntregueDigitada,\r\n      inicio: new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' }), // Data atual no cadastro\r\n      tempo: 0, // Forçamos o tempo inicial como 0\r\n    };\r\n    try {\r\n      let resposta;\r\n      if (pedidoParaEditar) {\r\n        // ... (lógica de edição, mantemos como está)\r\n      } else {\r\n        // Enviar o pedido novo\r\n        resposta = await axios.post('http://localhost:5000/pedidos', pedidoParaEnviar);\r\n        const novoPedidoAdicionado = { ...resposta.data, tempo: 0 }; // Garantimos que o tempo seja 0\r\n        await axios.post('http://localhost:5000/enviar-email', { pedido: novoPedidoAdicionado, observacao: '' });\r\n        atualizarListas(novoPedidoAdicionado);\r\n        setMensagem('Pedido adicionado e e-mail enviado!');\r\n        resetForm();\r\n      }\r\n    } catch (error) {\r\n      // ... (tratamento de erro, mantemos como está)\r\n    }\r\n\r\n    if (quantidadeEntregueDigitada > quantidadePedido) {\r\n      window.alert('A quantidade entregue não pode exceder a quantidade pedida!');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let resposta;\r\n      if (pedidoParaEditar) {\r\n        if (novoPedido.status === 'andamento') {\r\n          setPedidoParaConcluir({ ...pedidoParaEnviar, quantidadeEntregueDigitada });\r\n          setMostrarModalPesoVolume(true);\r\n          setMensagem('Preencha peso e volume para salvar a edição.');\r\n          resetForm();\r\n          return;\r\n        }\r\n        resposta = await axios.put(`http://localhost:5000/pedidos/${pedidoParaEditar.id}`, pedidoParaEnviar);\r\n        const pedidoAtualizado = { ...resposta.data, tempo: calcularTempo(new Date(resposta.data.inicio), resposta.data.dataConclusao ? new Date(resposta.data.dataConclusao) : null) };\r\n        await axios.post('http://localhost:5000/enviar-email', { pedido: pedidoAtualizado, observacao: '' });\r\n        atualizarListas(pedidoAtualizado);\r\n        setMensagem('Pedido atualizado e e-mail enviado!');\r\n        resetForm();\r\n      } else {\r\n        resposta = await axios.post('http://localhost:5000/pedidos', pedidoParaEnviar);\r\n        const novoPedidoAdicionado = { ...resposta.data, tempo: calcularTempo(new Date(resposta.data.inicio)) };\r\n        await axios.post('http://localhost:5000/enviar-email', { pedido: novoPedidoAdicionado, observacao: '' });\r\n        atualizarListas(novoPedidoAdicionado);\r\n        setMensagem('Pedido adicionado e e-mail enviado!');\r\n        resetForm();\r\n      }\r\n    } catch (error) {\r\n      setMensagem('Erro ao processar pedido: ' + (error.response?.data.message || error.message));\r\n      await carregarPedidos();\r\n    }\r\n  };\r\n\r\n  const calcularTempo = (inicio, fim = new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' })) => {\r\n    const inicioDate = new Date(inicio);\r\n    const fimDate = new Date(fim);\r\n    const diffMs = fimDate - inicioDate;\r\n    return diffMs < 0 ? 0 : diffMs / (1000 * 60 * 60);\r\n  };\r\n\r\n  const atualizarListas = (pedido) => {\r\n    if (pedido.status === 'novo') {\r\n      setPedidosAndamento((prev) => [...prev.filter((p) => p.id !== pedido.id), pedido]);\r\n      setPedidos((prev) => prev.filter((p) => p.id !== pedido.id));\r\n      setPedidosConcluidos((prev) => prev.filter((p) => p.id !== pedido.id));\r\n    } else if (pedido.status === 'andamento') {\r\n      setPedidos((prev) => [...prev.filter((p) => p.id !== pedido.id), pedido]);\r\n      setPedidosAndamento((prev) => prev.filter((p) => p.id !== pedido.id));\r\n      setPedidosConcluidos((prev) => prev.filter((p) => p.id !== pedido.id));\r\n    } else if (pedido.status === 'concluido') {\r\n      setPedidosConcluidos((prev) => [...prev.filter((p) => p.id !== pedido.id), pedido]);\r\n      setPedidos((prev) => prev.filter((p) => p.id !== pedido.id));\r\n      setPedidosAndamento((prev) => prev.filter((p) => p.id !== pedido.id));\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setNovoPedido({\r\n      empresa: '',\r\n      numeroOS: '',\r\n      dataEntrada: '',\r\n      previsaoEntrega: '',\r\n      responsavel: '',\r\n      codigoDesenho: '',\r\n      quantidadePedido: '',\r\n      quantidadeEntregue: '',\r\n      status: 'novo',\r\n      inicio: new Date().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' }),\r\n      tempo: 0,\r\n      peso: null,\r\n      volume: null,\r\n      dataConclusao: null,\r\n      pausado: 0,\r\n    });\r\n    setMostrarFormulario(false);\r\n    setPedidoParaEditar(null);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"formulario\">\r\n      <div>\r\n        <label htmlFor=\"empresa\">Empresa *</label>\r\n        <input type=\"text\" id=\"empresa\" name=\"empresa\" value={novoPedido.empresa} onChange={(e) => setNovoPedido({ ...novoPedido, empresa: e.target.value })} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"numeroOS\">Número da OS *</label>\r\n        <input type=\"text\" id=\"numeroOS\" name=\"numeroOS\" value={novoPedido.numeroOS} onChange={(e) => setNovoPedido({ ...novoPedido, numeroOS: e.target.value })} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"codigoDesenho\">Código do Desenho</label>\r\n        <input type=\"text\" id=\"codigoDesenho\" name=\"codigoDesenho\" value={novoPedido.codigoDesenho} onChange={(e) => setNovoPedido({ ...novoPedido, codigoDesenho: e.target.value })} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"quantidadePedido\">Quantidade Pedido</label>\r\n        <input type=\"number\" id=\"quantidadePedido\" name=\"quantidadePedido\" value={novoPedido.quantidadePedido} onChange={(e) => setNovoPedido({ ...novoPedido, quantidadePedido: e.target.value })} min=\"0\" required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"quantidadeEntregue\">Quantidade Entregue</label>\r\n        <input type=\"number\" id=\"quantidadeEntregue\" name=\"quantidadeEntregue\" value={novoPedido.quantidadeEntregue} onChange={(e) => setNovoPedido({ ...novoPedido, quantidadeEntregue: e.target.value })} min=\"0\" />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"dataEntrada\">Data de Entrada *</label>\r\n        <input type=\"date\" id=\"dataEntrada\" name=\"dataEntrada\" value={novoPedido.dataEntrada} onChange={(e) => setNovoPedido({ ...novoPedido, dataEntrada: e.target.value })} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"previsaoEntrega\">Previsão de Entrega *</label>\r\n        <input type=\"date\" id=\"previsaoEntrega\" name=\"previsaoEntrega\" value={novoPedido.previsaoEntrega} onChange={(e) => setNovoPedido({ ...novoPedido, previsaoEntrega: e.target.value })} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"responsavel\">Responsável</label>\r\n        <input type=\"text\" id=\"responsavel\" name=\"responsavel\" value={novoPedido.responsavel} onChange={(e) => setNovoPedido({ ...novoPedido, responsavel: e.target.value })} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"status\">Status</label>\r\n        <select id=\"status\" name=\"status\" value={novoPedido.status} onChange={(e) => {\r\n          const novoStatus = e.target.value;\r\n          setNovoPedido({ ...novoPedido, status: novoStatus });\r\n          if (pedidoParaEditar && moverParaAndamento) {\r\n            moverParaAndamento(pedidoParaEditar.id);\r\n          }\r\n        }}>\r\n          <option value=\"novo\">Novo</option>\r\n          <option value=\"andamento\">Em Andamento</option>\r\n          <option value=\"concluido\">Concluído</option>\r\n        </select>\r\n      </div>\r\n      <button type=\"submit\">{pedidoParaEditar ? 'Salvar Alterações' : 'Adicionar Pedido'}</button>\r\n      <button type=\"button\" onClick={resetForm}>Cancelar</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PedidoForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
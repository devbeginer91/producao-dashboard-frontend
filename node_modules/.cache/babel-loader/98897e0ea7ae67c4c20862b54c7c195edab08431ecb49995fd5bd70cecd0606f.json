{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\producao-dashboard\\\\frontend\\\\src\\\\components\\\\ModalPesoVolume.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalPesoVolume = ({\n  pedidoParaConcluir,\n  peso,\n  setPeso,\n  volume,\n  setVolume,\n  setMostrarModalPesoVolume,\n  setPedidoParaConcluir,\n  setPedidos,\n  setPedidosConcluidos,\n  setMensagem,\n  carregarPedidos\n}) => {\n  _s();\n  const [quantidadesParaAdicionar, setQuantidadesParaAdicionar] = useState((pedidoParaConcluir === null || pedidoParaConcluir === void 0 ? void 0 : pedidoParaConcluir.itens.map(() => '')) || []);\n  const [pedidoCompleto, setPedidoCompleto] = useState(false);\n  const formatDateToISO = date => {\n    if (!date || isNaN(new Date(date))) {\n      return new Date().toISOString().slice(0, 19).replace('T', ' ');\n    }\n    return new Date(date).toISOString().slice(0, 19).replace('T', ' ');\n  };\n  const verificarPedidoCompleto = novasQuantidadesEntregues => {\n    return pedidoParaConcluir === null || pedidoParaConcluir === void 0 ? void 0 : pedidoParaConcluir.itens.every((item, index) => {\n      const novaQuantidadeEntregue = (item.quantidadeEntregue || 0) + (parseInt(novasQuantidadesEntregues[index], 10) || 0);\n      return novaQuantidadeEntregue >= (item.quantidadePedido || 0);\n    });\n  };\n  useEffect(() => {\n    if (pedidoParaConcluir !== null && pedidoParaConcluir !== void 0 && pedidoParaConcluir.itemParaEditar) {\n      const completo = verificarPedidoCompleto(quantidadesParaAdicionar);\n      setPedidoCompleto(completo);\n    }\n  }, [quantidadesParaAdicionar, pedidoParaConcluir]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const novasQuantidadesEntregues = pedidoParaConcluir.itens.map((item, index) => {\n      const quantidadeAdicionadaInput = quantidadesParaAdicionar[index];\n      const quantidadeAdicionada = quantidadeAdicionadaInput === '' ? (item.quantidadePedido || 0) - (item.quantidadeEntregue || 0) : parseInt(quantidadeAdicionadaInput, 10) || 0;\n      return (item.quantidadeEntregue || 0) + quantidadeAdicionada;\n    });\n    const algumaQuantidadePreenchida = quantidadesParaAdicionar.some(q => q !== '');\n    const pedidoEstaCompleto = pedidoParaConcluir !== null && pedidoParaConcluir !== void 0 && pedidoParaConcluir.itemParaEditar ? verificarPedidoCompleto(quantidadesParaAdicionar) : true;\n    if ((pedidoEstaCompleto || algumaQuantidadePreenchida) && (!peso || !volume)) {\n      alert('Por favor, preencha os campos de peso e volume para prosseguir.');\n      return;\n    }\n    try {\n      // Garante que o inicio seja válido antes de enviar ao backend\n      const inicioValido = pedidoParaConcluir.inicio && !pedidoParaConcluir.inicio.includes('undefined') ? formatDateToISO(pedidoParaConcluir.inicio) : formatDateToISO(new Date());\n      const novosItens = pedidoParaConcluir.itens.map((item, index) => ({\n        ...item,\n        quantidadeEntregue: novasQuantidadesEntregues[index]\n      }));\n      if (pedidoEstaCompleto) {\n        const dataConclusao = formatDateToISO(new Date());\n        const pedidoConcluido = {\n          ...pedidoParaConcluir,\n          itens: novosItens,\n          status: 'concluido',\n          inicio: inicioValido,\n          peso: parseFloat(peso),\n          volume: parseFloat(volume),\n          dataConclusao\n        };\n        console.log('Enviando pedido concluído:', pedidoConcluido);\n        const resposta = await axios.put(`http://localhost:5000/pedidos/${pedidoParaConcluir.id}`, pedidoConcluido);\n        await axios.post('http://localhost:5000/enviar-email', {\n          pedido: resposta.data,\n          observacao: ''\n        });\n        setPedidos(prev => prev.filter(p => p.id !== pedidoConcluido.id));\n        setPedidosConcluidos(prev => [...prev, resposta.data]);\n        setMensagem('Pedido concluído e e-mail enviado!');\n      } else {\n        const pedidoAtualizado = {\n          ...pedidoParaConcluir,\n          itens: novosItens,\n          inicio: inicioValido,\n          peso: peso ? parseFloat(peso) : null,\n          volume: volume ? parseFloat(volume) : null\n        };\n        console.log('Enviando pedido atualizado:', pedidoAtualizado);\n        const resposta = await axios.put(`http://localhost:5000/pedidos/${pedidoParaConcluir.id}`, pedidoAtualizado);\n        await axios.post('http://localhost:5000/enviar-email', {\n          pedido: resposta.data,\n          observacao: ''\n        });\n        setPedidos(prev => prev.map(p => p.id === pedidoAtualizado.id ? resposta.data : p));\n        setMensagem('Quantidades entregues atualizadas e e-mail enviado!');\n      }\n      setPeso('');\n      setVolume('');\n      setMostrarModalPesoVolume(false);\n      setPedidoParaConcluir(null);\n    } catch (error) {\n      var _error$response;\n      setMensagem('Erro ao processar: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message) || error.message));\n      await carregarPedidos();\n    }\n  };\n  const handleQuantidadeChange = (index, value) => {\n    const novasQuantidades = [...quantidadesParaAdicionar];\n    const maxPermitido = (pedidoParaConcluir.itens[index].quantidadePedido || 0) - (pedidoParaConcluir.itens[index].quantidadeEntregue || 0);\n    const quantidadeAdicionada = value === '' ? '' : Math.min(parseInt(value, 10) || 0, maxPermitido);\n    novasQuantidades[index] = quantidadeAdicionada >= 0 || quantidadeAdicionada === '' ? quantidadeAdicionada : 0;\n    setQuantidadesParaAdicionar(novasQuantidades);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: pedidoParaConcluir !== null && pedidoParaConcluir !== void 0 && pedidoParaConcluir.itemParaEditar ? 'Quantidade a Entregar' : 'Concluir Pedido'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Itens do Pedido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), Array.isArray(pedidoParaConcluir === null || pedidoParaConcluir === void 0 ? void 0 : pedidoParaConcluir.itens) && pedidoParaConcluir.itens.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"itens-list\",\n            children: pedidoParaConcluir.itens.map((item, index) => {\n              const quantidadeRestante = (item.quantidadePedido || 0) - (item.quantidadeEntregue || 0);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"item-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"C\\xF3digo:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 31\n                    }, this), \" \", item.codigoDesenho]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Qtd Pedida:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 31\n                    }, this), \" \", item.quantidadePedido]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Qtd Entregue:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 31\n                    }, this), \" \", item.quantidadeEntregue || 0]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"A Entregar:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 31\n                    }, this), \" \", quantidadeRestante - (parseInt(quantidadesParaAdicionar[index], 10) || 0)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"quantidade-entregue\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `quantidadeEntregue-${index}`,\n                    children: \"Adicionar Qtd Entregue:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    id: `quantidadeEntregue-${index}`,\n                    value: quantidadesParaAdicionar[index],\n                    onChange: e => handleQuantidadeChange(index, e.target.value),\n                    min: \"0\",\n                    max: quantidadeRestante,\n                    disabled: quantidadeRestante <= 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Sem itens para exibir.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"peso\",\n            children: [\"Peso (kg) \", pedidoCompleto || !(pedidoParaConcluir !== null && pedidoParaConcluir !== void 0 && pedidoParaConcluir.itemParaEditar) ? '*' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"peso\",\n            value: peso,\n            onChange: e => setPeso(e.target.value),\n            min: \"0\",\n            step: \"0.01\",\n            required: pedidoCompleto || !(pedidoParaConcluir !== null && pedidoParaConcluir !== void 0 && pedidoParaConcluir.itemParaEditar)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"volume\",\n            children: [\"Volume (m\\xB3) \", pedidoCompleto || !(pedidoParaConcluir !== null && pedidoParaConcluir !== void 0 && pedidoParaConcluir.itemParaEditar) ? '*' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"volume\",\n            value: volume,\n            onChange: e => setVolume(e.target.value),\n            min: \"0\",\n            step: \"0.01\",\n            required: pedidoCompleto || !(pedidoParaConcluir !== null && pedidoParaConcluir !== void 0 && pedidoParaConcluir.itemParaEditar)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Concluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setPeso('');\n              setVolume('');\n              setMostrarModalPesoVolume(false);\n              setPedidoParaConcluir(null);\n            },\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalPesoVolume, \"cYhD+3Mp0PlNM/y9lnNDhBEcjJo=\");\n_c = ModalPesoVolume;\nexport default ModalPesoVolume;\nvar _c;\n$RefreshReg$(_c, \"ModalPesoVolume\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ModalPesoVolume","pedidoParaConcluir","peso","setPeso","volume","setVolume","setMostrarModalPesoVolume","setPedidoParaConcluir","setPedidos","setPedidosConcluidos","setMensagem","carregarPedidos","_s","quantidadesParaAdicionar","setQuantidadesParaAdicionar","itens","map","pedidoCompleto","setPedidoCompleto","formatDateToISO","date","isNaN","Date","toISOString","slice","replace","verificarPedidoCompleto","novasQuantidadesEntregues","every","item","index","novaQuantidadeEntregue","quantidadeEntregue","parseInt","quantidadePedido","itemParaEditar","completo","handleSubmit","e","preventDefault","quantidadeAdicionadaInput","quantidadeAdicionada","algumaQuantidadePreenchida","some","q","pedidoEstaCompleto","alert","inicioValido","inicio","includes","novosItens","dataConclusao","pedidoConcluido","status","parseFloat","console","log","resposta","put","id","post","pedido","data","observacao","prev","filter","p","pedidoAtualizado","error","_error$response","response","message","handleQuantidadeChange","value","novasQuantidades","maxPermitido","Math","min","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Array","isArray","length","quantidadeRestante","codigoDesenho","htmlFor","type","onChange","target","max","disabled","step","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/producao-dashboard/frontend/src/components/ModalPesoVolume.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ModalPesoVolume = ({\r\n  pedidoParaConcluir,\r\n  peso,\r\n  setPeso,\r\n  volume,\r\n  setVolume,\r\n  setMostrarModalPesoVolume,\r\n  setPedidoParaConcluir,\r\n  setPedidos,\r\n  setPedidosConcluidos,\r\n  setMensagem,\r\n  carregarPedidos,\r\n}) => {\r\n  const [quantidadesParaAdicionar, setQuantidadesParaAdicionar] = useState(\r\n    pedidoParaConcluir?.itens.map(() => '') || []\r\n  );\r\n  const [pedidoCompleto, setPedidoCompleto] = useState(false);\r\n\r\n  const formatDateToISO = (date) => {\r\n    if (!date || isNaN(new Date(date))) {\r\n      return new Date().toISOString().slice(0, 19).replace('T', ' ');\r\n    }\r\n    return new Date(date).toISOString().slice(0, 19).replace('T', ' ');\r\n  };\r\n\r\n  const verificarPedidoCompleto = (novasQuantidadesEntregues) => {\r\n    return pedidoParaConcluir?.itens.every((item, index) => {\r\n      const novaQuantidadeEntregue = (item.quantidadeEntregue || 0) + (parseInt(novasQuantidadesEntregues[index], 10) || 0);\r\n      return novaQuantidadeEntregue >= (item.quantidadePedido || 0);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (pedidoParaConcluir?.itemParaEditar) {\r\n      const completo = verificarPedidoCompleto(quantidadesParaAdicionar);\r\n      setPedidoCompleto(completo);\r\n    }\r\n  }, [quantidadesParaAdicionar, pedidoParaConcluir]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const novasQuantidadesEntregues = pedidoParaConcluir.itens.map((item, index) => {\r\n      const quantidadeAdicionadaInput = quantidadesParaAdicionar[index];\r\n      const quantidadeAdicionada = quantidadeAdicionadaInput === '' \r\n        ? (item.quantidadePedido || 0) - (item.quantidadeEntregue || 0)\r\n        : parseInt(quantidadeAdicionadaInput, 10) || 0;\r\n      return (item.quantidadeEntregue || 0) + quantidadeAdicionada;\r\n    });\r\n\r\n    const algumaQuantidadePreenchida = quantidadesParaAdicionar.some(q => q !== '');\r\n    const pedidoEstaCompleto = pedidoParaConcluir?.itemParaEditar ? verificarPedidoCompleto(quantidadesParaAdicionar) : true;\r\n\r\n    if ((pedidoEstaCompleto || algumaQuantidadePreenchida) && (!peso || !volume)) {\r\n      alert('Por favor, preencha os campos de peso e volume para prosseguir.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Garante que o inicio seja válido antes de enviar ao backend\r\n      const inicioValido = pedidoParaConcluir.inicio && !pedidoParaConcluir.inicio.includes('undefined')\r\n        ? formatDateToISO(pedidoParaConcluir.inicio)\r\n        : formatDateToISO(new Date());\r\n\r\n      const novosItens = pedidoParaConcluir.itens.map((item, index) => ({\r\n        ...item,\r\n        quantidadeEntregue: novasQuantidadesEntregues[index],\r\n      }));\r\n\r\n      if (pedidoEstaCompleto) {\r\n        const dataConclusao = formatDateToISO(new Date());\r\n        const pedidoConcluido = {\r\n          ...pedidoParaConcluir,\r\n          itens: novosItens,\r\n          status: 'concluido',\r\n          inicio: inicioValido,\r\n          peso: parseFloat(peso),\r\n          volume: parseFloat(volume),\r\n          dataConclusao,\r\n        };\r\n\r\n        console.log('Enviando pedido concluído:', pedidoConcluido);\r\n\r\n        const resposta = await axios.put(`http://localhost:5000/pedidos/${pedidoParaConcluir.id}`, pedidoConcluido);\r\n        await axios.post('http://localhost:5000/enviar-email', { pedido: resposta.data, observacao: '' });\r\n        setPedidos((prev) => prev.filter((p) => p.id !== pedidoConcluido.id));\r\n        setPedidosConcluidos((prev) => [...prev, resposta.data]);\r\n        setMensagem('Pedido concluído e e-mail enviado!');\r\n      } else {\r\n        const pedidoAtualizado = {\r\n          ...pedidoParaConcluir,\r\n          itens: novosItens,\r\n          inicio: inicioValido,\r\n          peso: peso ? parseFloat(peso) : null,\r\n          volume: volume ? parseFloat(volume) : null,\r\n        };\r\n\r\n        console.log('Enviando pedido atualizado:', pedidoAtualizado);\r\n\r\n        const resposta = await axios.put(`http://localhost:5000/pedidos/${pedidoParaConcluir.id}`, pedidoAtualizado);\r\n        await axios.post('http://localhost:5000/enviar-email', { pedido: resposta.data, observacao: '' });\r\n        setPedidos((prev) => prev.map((p) => (p.id === pedidoAtualizado.id ? resposta.data : p)));\r\n        setMensagem('Quantidades entregues atualizadas e e-mail enviado!');\r\n      }\r\n\r\n      setPeso('');\r\n      setVolume('');\r\n      setMostrarModalPesoVolume(false);\r\n      setPedidoParaConcluir(null);\r\n    } catch (error) {\r\n      setMensagem('Erro ao processar: ' + (error.response?.data.message || error.message));\r\n      await carregarPedidos();\r\n    }\r\n  };\r\n\r\n  const handleQuantidadeChange = (index, value) => {\r\n    const novasQuantidades = [...quantidadesParaAdicionar];\r\n    const maxPermitido = (pedidoParaConcluir.itens[index].quantidadePedido || 0) - (pedidoParaConcluir.itens[index].quantidadeEntregue || 0);\r\n    const quantidadeAdicionada = value === '' ? '' : Math.min(parseInt(value, 10) || 0, maxPermitido);\r\n    novasQuantidades[index] = quantidadeAdicionada >= 0 || quantidadeAdicionada === '' ? quantidadeAdicionada : 0;\r\n    setQuantidadesParaAdicionar(novasQuantidades);\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h2>{pedidoParaConcluir?.itemParaEditar ? 'Quantidade a Entregar' : 'Concluir Pedido'}</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <h3>Itens do Pedido</h3>\r\n            {Array.isArray(pedidoParaConcluir?.itens) && pedidoParaConcluir.itens.length > 0 ? (\r\n              <div className=\"itens-list\">\r\n                {pedidoParaConcluir.itens.map((item, index) => {\r\n                  const quantidadeRestante = (item.quantidadePedido || 0) - (item.quantidadeEntregue || 0);\r\n                  return (\r\n                    <div key={index} className=\"item-row\">\r\n                      <div className=\"item-info\">\r\n                        <span><strong>Código:</strong> {item.codigoDesenho}</span>\r\n                        <span><strong>Qtd Pedida:</strong> {item.quantidadePedido}</span>\r\n                        <span><strong>Qtd Entregue:</strong> {item.quantidadeEntregue || 0}</span>\r\n                        <span><strong>A Entregar:</strong> {quantidadeRestante - (parseInt(quantidadesParaAdicionar[index], 10) || 0)}</span>\r\n                      </div>\r\n                      <div className=\"quantidade-entregue\">\r\n                        <label htmlFor={`quantidadeEntregue-${index}`}>Adicionar Qtd Entregue:</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          id={`quantidadeEntregue-${index}`}\r\n                          value={quantidadesParaAdicionar[index]}\r\n                          onChange={(e) => handleQuantidadeChange(index, e.target.value)}\r\n                          min=\"0\"\r\n                          max={quantidadeRestante}\r\n                          disabled={quantidadeRestante <= 0}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : (\r\n              <p>Sem itens para exibir.</p>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"peso\">Peso (kg) {pedidoCompleto || !pedidoParaConcluir?.itemParaEditar ? '*' : ''}</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"peso\"\r\n              value={peso}\r\n              onChange={(e) => setPeso(e.target.value)}\r\n              min=\"0\"\r\n              step=\"0.01\"\r\n              required={pedidoCompleto || !pedidoParaConcluir?.itemParaEditar}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"volume\">Volume (m³) {pedidoCompleto || !pedidoParaConcluir?.itemParaEditar ? '*' : ''}</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"volume\"\r\n              value={volume}\r\n              onChange={(e) => setVolume(e.target.value)}\r\n              min=\"0\"\r\n              step=\"0.01\"\r\n              required={pedidoCompleto || !pedidoParaConcluir?.itemParaEditar}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"modal-buttons\">\r\n            <button type=\"submit\">Concluir</button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setPeso('');\r\n                setVolume('');\r\n                setMostrarModalPesoVolume(false);\r\n                setPedidoParaConcluir(null);\r\n              }}\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalPesoVolume;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
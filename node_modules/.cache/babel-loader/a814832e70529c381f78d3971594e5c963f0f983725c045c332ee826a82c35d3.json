{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\producao-dashboard\\\\frontend\\\\src\\\\components\\\\pedidoForm.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PedidoForm = ({\n  novoPedido,\n  setNovoPedido,\n  pedidoParaEditar,\n  setPedidoParaEditar,\n  setMostrarFormulario,\n  setMensagem,\n  carregarPedidos,\n  setPedidos,\n  setPedidosAndamento,\n  setPedidosConcluidos,\n  setMostrarModalPesoVolume,\n  setPedidoParaConcluir,\n  moverParaAndamento\n}) => {\n  // Função para formatar datas no formato YYYY-MM-DD HH:MM:SS com fuso horário America/Sao_Paulo\n  const formatDateToISO = date => {\n    if (!date || isNaN(new Date(date))) {\n      date = new Date();\n    }\n    const offset = date.getTimezoneOffset();\n    const adjustedDate = new Date(date.getTime() - (offset + 180) * 60 * 1000); // Ajusta para UTC-3 (America/Sao_Paulo)\n    return adjustedDate.toISOString().slice(0, 19).replace('T', ' ');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const camposObrigatorios = ['empresa', 'numeroOS', 'dataEntrada', 'previsaoEntrega'];\n    const erros = camposObrigatorios.filter(campo => !novoPedido[campo]);\n    if (erros.length > 0 || !Array.isArray(novoPedido.itens) || !novoPedido.itens.length || novoPedido.itens.some(item => !item.codigoDesenho || !item.quantidadePedido)) {\n      setMensagem('Preencha todos os campos obrigatórios e adicione ao menos um item com código e quantidade.');\n      return;\n    }\n    const dataEntrada = new Date(novoPedido.dataEntrada);\n    const previsaoEntrega = new Date(novoPedido.previsaoEntrega);\n    if (isNaN(dataEntrada.getTime()) || isNaN(previsaoEntrega.getTime())) {\n      setMensagem('Datas inválidas.');\n      return;\n    }\n\n    // Garante que o inicio seja válido antes de enviar ao backend\n    const inicioValido = novoPedido.inicio && !novoPedido.inicio.includes('undefined') ? formatDateToISO(new Date(novoPedido.inicio)) : formatDateToISO(new Date());\n    const pedidoParaEnviar = {\n      ...novoPedido,\n      inicio: inicioValido,\n      tempo: novoPedido.status === 'novo' ? 0 : novoPedido.tempo,\n      status: novoPedido.status,\n      itens: novoPedido.itens.map(item => ({\n        codigoDesenho: item.codigoDesenho,\n        quantidadePedido: parseInt(item.quantidadePedido, 10) || 0,\n        quantidadeEntregue: parseInt(item.quantidadeEntregue || 0, 10)\n      }))\n    };\n    console.log('Dados enviados ao backend:', pedidoParaEnviar);\n    try {\n      let resposta;\n      if (pedidoParaEditar) {\n        if (novoPedido.status === 'andamento') {\n          setPedidoParaConcluir(pedidoParaEnviar);\n          setMostrarModalPesoVolume(true);\n          setMensagem('Preencha peso e volume para salvar a edição.');\n          resetForm();\n          return;\n        }\n        resposta = await axios.put(`http://localhost:5000/pedidos/${pedidoParaEditar.id}`, pedidoParaEnviar);\n        await axios.post('http://localhost:5000/enviar-email', {\n          pedido: resposta.data,\n          observacao: ''\n        });\n        atualizarListas(resposta.data);\n        setMensagem('Pedido atualizado e e-mail enviado!');\n      } else {\n        resposta = await axios.post('http://localhost:5000/pedidos', pedidoParaEnviar);\n        await axios.post('http://localhost:5000/enviar-email', {\n          pedido: resposta.data,\n          observacao: ''\n        });\n        setPedidosAndamento(prev => [...prev, resposta.data]);\n        setMensagem('Pedido adicionado e e-mail enviado!');\n      }\n      resetForm();\n    } catch (error) {\n      var _error$response;\n      setMensagem('Erro ao processar pedido: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message) || error.message));\n      await carregarPedidos();\n    }\n  };\n  const atualizarListas = pedido => {\n    if (pedido.status === 'novo') {\n      setPedidosAndamento(prev => [...prev.filter(p => p.id !== pedido.id), pedido]);\n      setPedidos(prev => prev.filter(p => p.id !== pedido.id));\n      setPedidosConcluidos(prev => prev.filter(p => p.id !== pedido.id));\n    } else if (pedido.status === 'andamento') {\n      setPedidos(prev => [...prev.filter(p => p.id !== pedido.id), pedido]);\n      setPedidosAndamento(prev => prev.filter(p => p.id !== pedido.id));\n      setPedidosConcluidos(prev => prev.filter(p => p.id !== pedido.id));\n    } else if (pedido.status === 'concluido') {\n      setPedidosConcluidos(prev => [...prev.filter(p => p.id !== pedido.id), pedido]);\n      setPedidos(prev => prev.filter(p => p.id !== pedido.id));\n      setPedidosAndamento(prev => prev.filter(p => p.id !== pedido.id));\n    }\n  };\n  const resetForm = () => {\n    setNovoPedido({\n      empresa: '',\n      numeroOS: '',\n      dataEntrada: '',\n      previsaoEntrega: '',\n      responsavel: '',\n      status: 'novo',\n      inicio: formatDateToISO(new Date()),\n      tempo: 0,\n      peso: null,\n      volume: null,\n      dataConclusao: null,\n      pausado: 0,\n      tempoPausado: 0,\n      dataPausada: null,\n      itens: [{\n        codigoDesenho: '',\n        quantidadePedido: ''\n      }]\n    });\n    setMostrarFormulario(false);\n    setPedidoParaEditar(null);\n  };\n  const adicionarItem = () => {\n    setNovoPedido({\n      ...novoPedido,\n      itens: Array.isArray(novoPedido.itens) ? [...novoPedido.itens, {\n        codigoDesenho: '',\n        quantidadePedido: ''\n      }] : [{\n        codigoDesenho: '',\n        quantidadePedido: ''\n      }]\n    });\n  };\n  const removerItem = index => {\n    setNovoPedido({\n      ...novoPedido,\n      itens: Array.isArray(novoPedido.itens) ? novoPedido.itens.filter((_, i) => i !== index) : [{\n        codigoDesenho: '',\n        quantidadePedido: ''\n      }]\n    });\n  };\n  const atualizarItem = (index, campo, valor) => {\n    const itensAtuais = Array.isArray(novoPedido.itens) ? [...novoPedido.itens] : [{\n      codigoDesenho: '',\n      quantidadePedido: ''\n    }];\n    itensAtuais[index] = {\n      ...itensAtuais[index],\n      [campo]: valor\n    };\n    setNovoPedido({\n      ...novoPedido,\n      itens: itensAtuais\n    });\n  };\n  const itens = Array.isArray(novoPedido.itens) ? novoPedido.itens : [{\n    codigoDesenho: '',\n    quantidadePedido: ''\n  }];\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"formulario\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"empresa\",\n        children: \"Empresa *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"empresa\",\n        value: novoPedido.empresa,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          empresa: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numeroOS\",\n        children: \"N\\xFAmero da OS *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"numeroOS\",\n        value: novoPedido.numeroOS,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          numeroOS: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dataEntrada\",\n        children: \"Data de Entrada *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"dataEntrada\",\n        value: novoPedido.dataEntrada,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          dataEntrada: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"previsaoEntrega\",\n        children: \"Previs\\xE3o de Entrega *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"previsaoEntrega\",\n        value: novoPedido.previsaoEntrega,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          previsaoEntrega: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"responsavel\",\n        children: \"Respons\\xE1vel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"responsavel\",\n        value: novoPedido.responsavel,\n        onChange: e => setNovoPedido({\n          ...novoPedido,\n          responsavel: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"status\",\n        value: novoPedido.status,\n        onChange: e => {\n          const novoStatus = e.target.value;\n          setNovoPedido({\n            ...novoPedido,\n            status: novoStatus\n          });\n          if (pedidoParaEditar && moverParaAndamento && novoStatus === 'andamento') {\n            moverParaAndamento(pedidoParaEditar.id);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"novo\",\n          children: \"Novo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"andamento\",\n          children: \"Em Andamento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"concluido\",\n          children: \"Conclu\\xEDdo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Itens do Pedido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), itens.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `codigoDesenho-${index}`,\n          children: \"C\\xF3digo do Desenho *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: `codigoDesenho-${index}`,\n          value: item.codigoDesenho,\n          onChange: e => atualizarItem(index, 'codigoDesenho', e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `quantidadePedido-${index}`,\n          children: \"Quantidade Pedida *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: `quantidadePedido-${index}`,\n          value: item.quantidadePedido,\n          onChange: e => atualizarItem(index, 'quantidadePedido', e.target.value),\n          min: \"0\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), itens.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => removerItem(index),\n        children: \"Remover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: adicionarItem,\n        className: \"btn-adicionar-item\",\n        children: \"Adicionar Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-submit\",\n        children: pedidoParaEditar ? 'Salvar | QTD a Entregar' : 'Adicionar Pedido'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: resetForm,\n        className: \"btn-cancelar\",\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_c = PedidoForm;\nexport default PedidoForm;\nvar _c;\n$RefreshReg$(_c, \"PedidoForm\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","PedidoForm","novoPedido","setNovoPedido","pedidoParaEditar","setPedidoParaEditar","setMostrarFormulario","setMensagem","carregarPedidos","setPedidos","setPedidosAndamento","setPedidosConcluidos","setMostrarModalPesoVolume","setPedidoParaConcluir","moverParaAndamento","formatDateToISO","date","isNaN","Date","offset","getTimezoneOffset","adjustedDate","getTime","toISOString","slice","replace","handleSubmit","e","preventDefault","camposObrigatorios","erros","filter","campo","length","Array","isArray","itens","some","item","codigoDesenho","quantidadePedido","dataEntrada","previsaoEntrega","inicioValido","inicio","includes","pedidoParaEnviar","tempo","status","map","parseInt","quantidadeEntregue","console","log","resposta","resetForm","put","id","post","pedido","data","observacao","atualizarListas","prev","error","_error$response","response","message","p","empresa","numeroOS","responsavel","peso","volume","dataConclusao","pausado","tempoPausado","dataPausada","adicionarItem","removerItem","index","_","i","atualizarItem","valor","itensAtuais","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","novoStatus","min","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/producao-dashboard/frontend/src/components/pedidoForm.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PedidoForm = ({\r\n  novoPedido,\r\n  setNovoPedido,\r\n  pedidoParaEditar,\r\n  setPedidoParaEditar,\r\n  setMostrarFormulario,\r\n  setMensagem,\r\n  carregarPedidos,\r\n  setPedidos,\r\n  setPedidosAndamento,\r\n  setPedidosConcluidos,\r\n  setMostrarModalPesoVolume,\r\n  setPedidoParaConcluir,\r\n  moverParaAndamento,\r\n}) => {\r\n  // Função para formatar datas no formato YYYY-MM-DD HH:MM:SS com fuso horário America/Sao_Paulo\r\n  const formatDateToISO = (date) => {\r\n    if (!date || isNaN(new Date(date))) {\r\n      date = new Date();\r\n    }\r\n    const offset = date.getTimezoneOffset();\r\n    const adjustedDate = new Date(date.getTime() - (offset + 180) * 60 * 1000); // Ajusta para UTC-3 (America/Sao_Paulo)\r\n    return adjustedDate.toISOString().slice(0, 19).replace('T', ' ');\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const camposObrigatorios = ['empresa', 'numeroOS', 'dataEntrada', 'previsaoEntrega'];\r\n    const erros = camposObrigatorios.filter((campo) => !novoPedido[campo]);\r\n    if (erros.length > 0 || !Array.isArray(novoPedido.itens) || !novoPedido.itens.length || novoPedido.itens.some(item => !item.codigoDesenho || !item.quantidadePedido)) {\r\n      setMensagem('Preencha todos os campos obrigatórios e adicione ao menos um item com código e quantidade.');\r\n      return;\r\n    }\r\n\r\n    const dataEntrada = new Date(novoPedido.dataEntrada);\r\n    const previsaoEntrega = new Date(novoPedido.previsaoEntrega);\r\n    if (isNaN(dataEntrada.getTime()) || isNaN(previsaoEntrega.getTime())) {\r\n      setMensagem('Datas inválidas.');\r\n      return;\r\n    }\r\n\r\n    // Garante que o inicio seja válido antes de enviar ao backend\r\n    const inicioValido = novoPedido.inicio && !novoPedido.inicio.includes('undefined')\r\n      ? formatDateToISO(new Date(novoPedido.inicio))\r\n      : formatDateToISO(new Date());\r\n\r\n    const pedidoParaEnviar = {\r\n      ...novoPedido,\r\n      inicio: inicioValido,\r\n      tempo: novoPedido.status === 'novo' ? 0 : novoPedido.tempo,\r\n      status: novoPedido.status,\r\n      itens: novoPedido.itens.map(item => ({\r\n        codigoDesenho: item.codigoDesenho,\r\n        quantidadePedido: parseInt(item.quantidadePedido, 10) || 0,\r\n        quantidadeEntregue: parseInt(item.quantidadeEntregue || 0, 10),\r\n      })),\r\n    };\r\n\r\n    console.log('Dados enviados ao backend:', pedidoParaEnviar);\r\n\r\n    try {\r\n      let resposta;\r\n      if (pedidoParaEditar) {\r\n        if (novoPedido.status === 'andamento') {\r\n          setPedidoParaConcluir(pedidoParaEnviar);\r\n          setMostrarModalPesoVolume(true);\r\n          setMensagem('Preencha peso e volume para salvar a edição.');\r\n          resetForm();\r\n          return;\r\n        }\r\n        resposta = await axios.put(`http://localhost:5000/pedidos/${pedidoParaEditar.id}`, pedidoParaEnviar);\r\n        await axios.post('http://localhost:5000/enviar-email', { pedido: resposta.data, observacao: '' });\r\n        atualizarListas(resposta.data);\r\n        setMensagem('Pedido atualizado e e-mail enviado!');\r\n      } else {\r\n        resposta = await axios.post('http://localhost:5000/pedidos', pedidoParaEnviar);\r\n        await axios.post('http://localhost:5000/enviar-email', { pedido: resposta.data, observacao: '' });\r\n        setPedidosAndamento((prev) => [...prev, resposta.data]);\r\n        setMensagem('Pedido adicionado e e-mail enviado!');\r\n      }\r\n      resetForm();\r\n    } catch (error) {\r\n      setMensagem('Erro ao processar pedido: ' + (error.response?.data.message || error.message));\r\n      await carregarPedidos();\r\n    }\r\n  };\r\n\r\n  const atualizarListas = (pedido) => {\r\n    if (pedido.status === 'novo') {\r\n      setPedidosAndamento((prev) => [...prev.filter((p) => p.id !== pedido.id), pedido]);\r\n      setPedidos((prev) => prev.filter((p) => p.id !== pedido.id));\r\n      setPedidosConcluidos((prev) => prev.filter((p) => p.id !== pedido.id));\r\n    } else if (pedido.status === 'andamento') {\r\n      setPedidos((prev) => [...prev.filter((p) => p.id !== pedido.id), pedido]);\r\n      setPedidosAndamento((prev) => prev.filter((p) => p.id !== pedido.id));\r\n      setPedidosConcluidos((prev) => prev.filter((p) => p.id !== pedido.id));\r\n    } else if (pedido.status === 'concluido') {\r\n      setPedidosConcluidos((prev) => [...prev.filter((p) => p.id !== pedido.id), pedido]);\r\n      setPedidos((prev) => prev.filter((p) => p.id !== pedido.id));\r\n      setPedidosAndamento((prev) => prev.filter((p) => p.id !== pedido.id));\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setNovoPedido({\r\n      empresa: '',\r\n      numeroOS: '',\r\n      dataEntrada: '',\r\n      previsaoEntrega: '',\r\n      responsavel: '',\r\n      status: 'novo',\r\n      inicio: formatDateToISO(new Date()),\r\n      tempo: 0,\r\n      peso: null,\r\n      volume: null,\r\n      dataConclusao: null,\r\n      pausado: 0,\r\n      tempoPausado: 0,\r\n      dataPausada: null,\r\n      itens: [{ codigoDesenho: '', quantidadePedido: '' }],\r\n    });\r\n    setMostrarFormulario(false);\r\n    setPedidoParaEditar(null);\r\n  };\r\n\r\n  const adicionarItem = () => {\r\n    setNovoPedido({\r\n      ...novoPedido,\r\n      itens: Array.isArray(novoPedido.itens) ? [...novoPedido.itens, { codigoDesenho: '', quantidadePedido: '' }] : [{ codigoDesenho: '', quantidadePedido: '' }],\r\n    });\r\n  };\r\n\r\n  const removerItem = (index) => {\r\n    setNovoPedido({\r\n      ...novoPedido,\r\n      itens: Array.isArray(novoPedido.itens) ? novoPedido.itens.filter((_, i) => i !== index) : [{ codigoDesenho: '', quantidadePedido: '' }],\r\n    });\r\n  };\r\n\r\n  const atualizarItem = (index, campo, valor) => {\r\n    const itensAtuais = Array.isArray(novoPedido.itens) ? [...novoPedido.itens] : [{ codigoDesenho: '', quantidadePedido: '' }];\r\n    itensAtuais[index] = { ...itensAtuais[index], [campo]: valor };\r\n    setNovoPedido({ ...novoPedido, itens: itensAtuais });\r\n  };\r\n\r\n  const itens = Array.isArray(novoPedido.itens) ? novoPedido.itens : [{ codigoDesenho: '', quantidadePedido: '' }];\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"formulario\">\r\n      <div>\r\n        <label htmlFor=\"empresa\">Empresa *</label>\r\n        <input type=\"text\" id=\"empresa\" value={novoPedido.empresa} onChange={(e) => setNovoPedido({ ...novoPedido, empresa: e.target.value })} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"numeroOS\">Número da OS *</label>\r\n        <input type=\"text\" id=\"numeroOS\" value={novoPedido.numeroOS} onChange={(e) => setNovoPedido({ ...novoPedido, numeroOS: e.target.value })} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"dataEntrada\">Data de Entrada *</label>\r\n        <input type=\"date\" id=\"dataEntrada\" value={novoPedido.dataEntrada} onChange={(e) => setNovoPedido({ ...novoPedido, dataEntrada: e.target.value })} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"previsaoEntrega\">Previsão de Entrega *</label>\r\n        <input type=\"date\" id=\"previsaoEntrega\" value={novoPedido.previsaoEntrega} onChange={(e) => setNovoPedido({ ...novoPedido, previsaoEntrega: e.target.value })} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"responsavel\">Responsável</label>\r\n        <input type=\"text\" id=\"responsavel\" value={novoPedido.responsavel} onChange={(e) => setNovoPedido({ ...novoPedido, responsavel: e.target.value })} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"status\">Status</label>\r\n        <select id=\"status\" value={novoPedido.status} onChange={(e) => {\r\n          const novoStatus = e.target.value;\r\n          setNovoPedido({ ...novoPedido, status: novoStatus });\r\n          if (pedidoParaEditar && moverParaAndamento && novoStatus === 'andamento') {\r\n            moverParaAndamento(pedidoParaEditar.id);\r\n          }\r\n        }}>\r\n          <option value=\"novo\">Novo</option>\r\n          <option value=\"andamento\">Em Andamento</option>\r\n          <option value=\"concluido\">Concluído</option>\r\n        </select>\r\n      </div>\r\n\r\n      <h3>Itens do Pedido</h3>\r\n      {itens.map((item, index) => (\r\n        <div key={index} className=\"item-group\">\r\n          <div>\r\n            <label htmlFor={`codigoDesenho-${index}`}>Código do Desenho *</label>\r\n            <input\r\n              type=\"text\"\r\n              id={`codigoDesenho-${index}`}\r\n              value={item.codigoDesenho}\r\n              onChange={(e) => atualizarItem(index, 'codigoDesenho', e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor={`quantidadePedido-${index}`}>Quantidade Pedida *</label>\r\n            <input\r\n              type=\"number\"\r\n              id={`quantidadePedido-${index}`}\r\n              value={item.quantidadePedido}\r\n              onChange={(e) => atualizarItem(index, 'quantidadePedido', e.target.value)}\r\n              min=\"0\"\r\n              required\r\n            />\r\n          </div>\r\n          {itens.length > 1 && (\r\n            <button type=\"button\" onClick={() => removerItem(index)}>Remover</button>\r\n          )}\r\n        </div>\r\n      ))}\r\n      <div className=\"form-buttons\">\r\n        <button type=\"button\" onClick={adicionarItem} className=\"btn-adicionar-item\">Adicionar Item</button>\r\n        <button type=\"submit\" className=\"btn-submit\">{pedidoParaEditar ? 'Salvar | QTD a Entregar' : 'Adicionar Pedido'}</button>\r\n        <button type=\"button\" onClick={resetForm} className=\"btn-cancelar\">Cancelar</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PedidoForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}